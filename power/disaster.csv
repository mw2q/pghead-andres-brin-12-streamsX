Q21,705016.0,->  Nested Loop Semi Join  (cost=2406.31..2843299.70 rows=1 width=34) (actual time=39.767..39358.119 rows=705016 loops=1)
Q3,316090.0,->  Sort  (cost=2527680.02..2535582.27 rows=3160900 width=20) (actual time=43770.596..43770.597 rows=10 loops=1)
Q18,300228.2,->  GroupAggregate  (cost=10152340.69..10977968.40 rows=30022826 width=39) (actual time=67508.187..67508.510 rows=100 loops=1)
Q18,67635.0,->  Hash Join  (cost=2177963.01..2791061.20 rows=7507492 width=39) (actual time=42730.275..49216.231 rows=111 loops=1)
Q18,67635.0,->  Hash Join  (cost=2108935.01..2609420.82 rows=7507492 width=20) (actual time=41630.959..48116.583 rows=111 loops=1)
Q18,67635.0,->  Hash  (cost=2791061.20..2791061.20 rows=7507492 width=39) (actual time=49216.610..49216.610 rows=111 loops=1)
Q18,42828.5,->  Sort  (cost=10152340.69..10227397.75 rows=30022826 width=39) (actual time=67508.171..67508.203 rows=701 loops=1)
Q21,39320.0,->  Nested Loop Anti Join  (cost=2406.88..2843301.48 rows=1 width=26) (actual time=39.776..42231.269 rows=39320 loops=1)
Q18,38639.4,->  Hash Join  (cost=2884904.85..5602633.28 rows=30022826 width=39) (actual time=49634.827..67506.703 rows=777 loops=1)
Q18,36493.4,->  Hash  (cost=2058300.28..2058300.28 rows=4050778 width=4) (actual time=41465.486..41465.486 rows=111 loops=1)
Q18,36493.4,->  HashAggregate  (cost=1967157.78..2017792.50 rows=4050778 width=8) (actual time=37091.796..41464.901 rows=111 loops=1)
Q9,29176.7,->  Sort  (cost=1054896.43..1054896.71 rows=112 width=46) (actual time=88347.002..88924.410 rows=3267799 loops=1)
Q9,29176.7,->  Nested Loop  (cost=66699.44..1054888.96 rows=112 width=24) (actual time=594.852..79174.429 rows=3267799 loops=1)
Q9,29176.7,->  Nested Loop  (cost=66699.01..1054834.68 rows=112 width=24) (actual time=594.779..49353.070 rows=3267799 loops=1)
Q9,29176.7,->  Nested Loop  (cost=66698.71..1054798.54 rows=112 width=28) (actual time=594.770..39145.341 rows=3267799 loops=1)
Q9,29176.7,->  Hash Join  (cost=66701.00..1054892.62 rows=112 width=46) (actual time=594.911..82352.955 rows=3267799 loops=1)
Q10,27610.2,->  Sort  (cost=2271885.22..2273265.74 rows=552205 width=176) (actual time=35167.053..35167.058 rows=20 loops=1)
Q2,4762.0,->  Merge Join  (cost=465676.21..886124.99 rows=1 width=190) (actual time=6098.198..8020.066 rows=4762 loops=1)
Q21,3991.0,->  HashAggregate  (cost=2843301.49..2843301.50 rows=1 width=26) (actual time=42292.349..42293.436 rows=3991 loops=1)
Q15,3723.0,->  Subquery Scan on revenue0  (cost=1909842.71..1909926.48 rows=3723 width=12) (actual time=54363.702..54372.823 rows=1 loops=1)
Q15,3723.0,->  Sort  (cost=1910147.30..1910156.60 rows=3723 width=12) (actual time=54372.847..54372.848 rows=1 loops=1)
Q15,3723.0,Merge Join  (cost=3803335.63..3808432.68 rows=3723 width=79) (actual time=54399.286..54399.289 rows=1 loops=1)
Q15,3723.0,->  HashAggregate  (cost=1909842.71..1909889.25 rows=3723 width=12) (actual time=54363.701..54372.821 rows=1 loops=1)
Q7,769.0,Sort  (cost=2126778.76..2126786.45 rows=3076 width=64) (actual time=23481.861..23481.861 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2126554.42..2126600.56 rows=3076 width=64) (actual time=23481.792..23481.799 rows=4 loops=1)
Q8,364.5,Sort  (cost=1739045.79..1739047.61 rows=729 width=38) (actual time=12545.319..12545.319 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1738998.37..1739011.13 rows=729 width=38) (actual time=12545.283..12545.285 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2843301.51..2843301.51 rows=1 width=26) (actual time=42294.571..42294.577 rows=100 loops=1)
Q21,100.0,Limit  (cost=2843301.51..2843301.51 rows=1 width=26) (actual time=42294.573..42294.590 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=886125.00..886125.01 rows=1 width=190) (actual time=8024.725..8024.743 rows=100 loops=1)
Q2,100.0,Limit  (cost=886125.00..886125.01 rows=1 width=190) (actual time=8024.727..8024.749 rows=100 loops=1)
Q11,32.1,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=7275.833..7276.849 rows=9940 loops=1)
Q11,32.1,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=7201.041..7270.031 rows=9940 loops=1)
Q3,27.8,->  HashAggregate  (cost=2427765.11..2459374.11 rows=3160900 width=20) (actual time=43713.028..43749.701 rows=113511 loops=1)
Q15,26.8,->  HashAggregate  (cost=1893104.26..1893141.49 rows=3723 width=12) (actual time=25062.259..25087.503 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=731722)
Q14,13.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7922.37 rows=777437 width=0) (actual time=117.600..117.600 rows=10664960 loops=1)
Q3,10.5,->  Hash Join  (cost=762248.29..2380351.61 rows=3160900 width=20) (actual time=7774.790..43411.407 rows=299738 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2418.26 rows=320833 width=0) (actual time=34.512..34.512 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.077 rows=8 loops=435240)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.609..3.609 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.620..3.620 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.258..0.258 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.249..0.249 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1201478)
Q5,5.0,Sort  (cost=1998809.37..1998809.43 rows=25 width=34) (actual time=15774.295..15774.296 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1998808.54..1998808.79 rows=25 width=34) (actual time=15774.251..15774.251 rows=5 loops=1)
Q4,5.0,Sort  (cost=1485059.38..1485059.39 rows=1 width=16) (actual time=14185.656..14185.656 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.04 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=574557)
Q4,5.0,->  HashAggregate  (cost=1485059.36..1485059.37 rows=1 width=16) (actual time=14185.608..14185.608 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=705016)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5612.78 rows=557278 width=0) (actual time=27.514..27.514 rows=2535680 loops=1)
Q13,4.4,Sort  (cost=844154.48..844154.98 rows=200 width=8) (actual time=28489.930..28489.932 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=844144.84..844146.84 rows=200 width=8) (actual time=28489.853..28489.859 rows=45 loops=1)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5821.70 rows=578170 width=0) (actual time=27.759..27.759 rows=2535680 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=454657)
Q17,3.7,->  Nested Loop  (cost=82.63..113681.86 rows=19955 width=4) (actual time=2.265..180.292 rows=5298 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5966.81..1484279.46 rows=155980 width=16) (actual time=27.966..13874.827 rows=526449 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.011..0.023 rows=3 loops=2009)
Q15,3.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..268017.13 rows=35715884 width=0) (actual time=118.255..118.255 rows=10664960 loops=1)
Q15,3.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..268017.13 rows=35715884 width=0) (actual time=118.172..118.172 rows=10664960 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..240157.84 rows=32001312 width=0) (actual time=130.879..130.879 rows=10664960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.283..0.352 rows=3 loops=21499)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55472.05 rows=7390940 width=0) (actual time=27.389..27.389 rows=2535680 loops=1)
Q22,2.3,Sort  (cost=691148.11..691148.12 rows=3 width=20) (actual time=9124.067..9124.068 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=638247.80..638247.85 rows=3 width=20) (actual time=9123.979..9123.980 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.049 rows=2 loops=6415)
Q20,2.0,->  Nested Loop  (cost=754.49..11669236.47 rows=29067 width=4) (actual time=12.353..8195.283 rows=58418 loops=1)
Q20,2.0,->  Hash  (cost=11669236.47..11669236.47 rows=29067 width=4) (actual time=8231.766..8231.766 rows=58418 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.162..4.162 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403056.89..404529.16 rows=588908 width=40) (actual time=10102.454..10257.009 rows=1187712 loops=1)
Q16,2.0,->  Hash Join  (cost=54769.80..346616.88 rows=588908 width=40) (actual time=1481.213..6868.647 rows=1187712 loops=1)
Q12,2.0,Sort  (cost=3022883.53..3022883.54 rows=1 width=27) (actual time=35817.031..35817.031 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3022883.51..3022883.52 rows=1 width=27) (actual time=35816.974..35816.974 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=343628.81..2237864.07 rows=552205 width=176) (actual time=11215.627..33067.968 rows=1113984 loops=1)
Q10,2.0,->  Hash Join  (cost=343627.25..2230269.69 rows=552205 width=154) (actual time=11215.598..32674.132 rows=1113984 loops=1)
Q10,2.0,->  Hash Join  (cost=274599.25..2152958.62 rows=552205 width=12) (actual time=9600.092..30306.140 rows=1113984 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.514..3801.582 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817043.65 rows=20015217 width=8) (actual time=0.005..20386.476 rows=37967116 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323251.22 rows=389239 width=38) (actual time=39.751..34212.047 rows=731722 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902499.01 rows=799298 width=34) (actual time=39.726..26317.976 rows=1515797 loops=1)
Q15,1.8,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.017..21.123 rows=52960 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.030..0.470 rows=56 loops=1)
Q9,1.5,GroupAggregate  (cost=1054896.43..1054900.35 rows=112 width=46) (actual time=88357.511..91140.599 rows=175 loops=1)
Q20,1.5,Sort  (cost=11672042.14..11672045.05 rows=1163 width=51) (actual time=8259.811..8259.914 rows=1808 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669642.81..11671982.92 rows=1163 width=51) (actual time=8232.208..8258.357 rows=1808 loops=1)
Q1,1.5,Sort  (cost=4160233.51..4160233.53 rows=6 width=20) (actual time=89168.209..89168.209 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4160233.33..4160233.44 rows=6 width=20) (actual time=89168.159..89168.161 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.124..4.124 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2251669.20..2257191.25 rows=552205 width=176) (actual time=34843.148..35030.748 rows=373018 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.79 rows=139977 width=0) (actual time=433.306..433.306 rows=190506 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.79..41862.18 rows=139977 width=24) (actual time=441.455..549.076 rows=190506 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=94092 width=4) (actual time=0.010..564.078 rows=108810 loops=1)
Q9,1.1,->  Hash Join  (cost=66698.15..351381.92 rows=372577 width=16) (actual time=594.599..4770.014 rows=435240 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=94092 width=4) (actual time=594.087..594.087 rows=108810 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..90933.25 rows=9078525 width=0) (actual time=122.957..122.957 rows=10664960 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.670..2029.320 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.72..1691126.37 rows=122279 width=20) (actual time=7.162..10081.108 rows=120767 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.29..1493452.78 rows=403717 width=16) (actual time=7.101..5488.998 rows=397201 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.17..1738050.69 rows=24416 width=16) (actual time=2130.329..12462.860 rows=24001 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.73..1738510.05 rows=24416 width=38) (actual time=2130.376..12502.480 rows=24001 loops=1)
Q8,1.0,->  Hash Join  (cost=38751.87..1730159.63 rows=24456 width=16) (actual time=2130.263..12281.982 rows=24001 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2120.171..2120.171 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.28 rows=13447 width=0) (actual time=4.779..4.779 rows=13235 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.024..0.024 rows=30 loops=13235)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.64..28260.13 rows=13447 width=4) (actual time=7.025..277.506 rows=13235 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.039..0.379 rows=30 loops=13235)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.653..396.652 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=8) (actual time=0.006..3310.950 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2113782.16 rows=1462665 width=42) (actual time=638.759..22800.195 rows=1462369 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2125642.85 rows=60771 width=64) (actual time=679.928..23394.424 rows=57747 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..530594.42 rows=1201199 width=30) (actual time=638.544..8694.983 rows=1201478 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.044..600.472 rows=119922 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.039..37.777 rows=7938 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=638.041..638.041 rows=119922 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.775..39.775 rows=7938 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91028.17..1361767.99 rows=379680 width=8) (actual time=123.769..29031.126 rows=380617 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..478746.76 rows=2284440 width=8) (actual time=0.014..4319.478 rows=2278245 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.840..2202.509 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1978966.84 rows=1827117 width=46) (actual time=2316.547..14944.946 rows=1817095 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..1998078.88 rows=72966 width=34) (actual time=2386.171..15691.609 rows=73066 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..530223.92 rows=456888 width=38) (actual time=2316.520..7560.288 rows=454657 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2314.475..2314.475 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.677..430.105 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5966.24..268160.79 rows=578170 width=20) (actual time=27.926..4273.666 rows=574557 loops=1)
Q3,1.0,->  Hash Join  (cost=107095.80..495551.49 rows=1483091 width=12) (actual time=389.983..7157.059 rows=1477836 loops=1)
Q3,1.0,->  Hash  (cost=495551.49..495551.49 rows=1483091 width=12) (actual time=7636.431..7636.431 rows=1477836 loops=1)
Q3,1.0,->  Hash  (cost=46013.58..46013.58 rows=300995 width=4) (actual time=360.403..360.403 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6897.89 rows=300995 width=0) (actual time=63.761..63.761 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57319.79..403228.54 rows=7390940 width=16) (actual time=27.560..4590.740 rows=7390216 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=248158.17..1714647.57 rows=32001312 width=12) (actual time=131.633..30229.236 rows=31990857 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6973.14..46013.58 rows=300995 width=4) (actual time=71.648..289.007 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=4) (actual time=0.014..3516.668 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=4) (actual time=8351.678..8351.678 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=594268.93..637805.85 rows=58927 width=20) (actual time=8881.639..9102.433 rows=63589 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6550.41 rows=381787 width=0) (actual time=72.759..72.759 rows=381317 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6645.85..51945.76 rows=381787 width=4) (actual time=80.533..310.690 rows=381317 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.289..38.521 rows=3991 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=39.618..39.618 rows=3991 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.275..37.807 rows=3991 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=6097.373..6226.516 rows=1603234 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.364..183.246 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8013 width=30) (actual time=0.201..1126.280 rows=7977 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=195.154..5029.906 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=195.020..195.020 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.267..35.682 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.291..25.319 rows=4079 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=8.356..8.356 rows=21499 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.272..24.688 rows=4079 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=11.870..580.444 rows=21499 loops=1)
Q19,1.0,->  Nested Loop  (cost=12862.05..608987.90 rows=1129 width=8) (actual time=33.185..1547.184 rows=1027 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.134..4.134 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.91 rows=8018 width=0) (actual time=3.450..3.450 rows=7938 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.63 rows=7894 width=0) (actual time=3.490..3.490 rows=8014 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.59 rows=7889 width=0) (actual time=3.201..3.201 rows=7916 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.027..0.027 rows=30 loops=4636)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12857.31..26530.43 rows=4747 width=30) (actual time=30.709..282.549 rows=4636 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.005..3630.779 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666929.52 rows=60045652 width=8) (actual time=0.004..8063.872 rows=60045669 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666929.52 rows=60045652 width=8) (actual time=0.005..7806.275 rows=60045669 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.034 rows=30 loops=2009)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.034 rows=30 loops=2009)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.37 rows=1994 width=0) (actual time=1.614..1.614 rows=2009 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.87..6610.44 rows=1994 width=4) (actual time=1.956..48.927 rows=2009 loops=1)
Q16,1.0,Sort  (cost=412756.09..412825.81 rows=27886 width=40) (actual time=10916.427..10918.279 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51035.44..51035.44 rows=297450 width=40) (actual time=1478.730..1478.730 rows=297095 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403056.89..410697.10 rows=27886 width=40) (actual time=10102.524..10858.168 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2492.62..51035.44 rows=297450 width=40) (actual time=34.604..1348.722 rows=297095 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=268575.07..1870786.33 rows=2231793 width=12) (actual time=118.978..22936.325 rows=2247143 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=268575.07..1870786.33 rows=2231793 width=12) (actual time=119.066..27010.927 rows=2247143 loops=1)
Q14,1.0,->  Hash Join  (cost=93638.72..1146654.29 rows=777437 width=29) (actual time=1542.108..41264.028 rows=751371 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8116.72..1049470.73 rows=777437 width=12) (actual time=118.408..38815.337 rows=751371 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=14820377 width=8) (actual time=0.016..6644.356 rows=14852263 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..732542.96 rows=14820377 width=8) (actual time=869.032..17151.806 rows=15352283 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=20) (actual time=0.007..4849.495 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2417500.17 rows=287676 width=15) (actual time=0.059..24633.497 rows=311650 loops=1)
Q12,1.0,->  Hash Join  (cost=591359.14..3017849.18 rows=287676 width=27) (actual time=10467.821..35507.162 rows=311650 loops=1)
Q12,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=20) (actual time=10399.086..10399.086 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.307..46.050 rows=3945 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.301..24.055 rows=3945 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=24.972..2747.033 rows=315600 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=47.277..4133.511 rows=315600 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=47.245..47.245 rows=3945 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.917..24.917 rows=3945 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.268..23.386 rows=3945 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.284..45.181 rows=3945 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.65 rows=58579742 width=20) (actual time=0.028..18938.624 rows=58597415 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.65 rows=14878312 width=12) (actual time=0.013..17473.899 rows=14822992 loops=1)
Q10,1.0,->  Hash  (cost=267633.27..267633.27 rows=557278 width=8) (actual time=9595.877..9595.877 rows=555666 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5752.10..267633.27 rows=557278 width=8) (actual time=27.795..9302.676 rows=555666 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=397201)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1515797)
Q19,,->  BitmapOr  (cost=12857.31..12857.31 rows=4751 width=0) (actual time=26.922..26.922 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.249..0.268 rows=0 loops=4636)
Q19,,->  BitmapAnd  (cost=6270.28..6270.28 rows=2360 width=0) (actual time=7.881..7.881 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4298.00..4298.00 rows=1601 width=0) (actual time=8.151..8.151 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.52..2288.52 rows=790 width=0) (actual time=8.215..8.215 rows=0 loops=1)
