Q21,724776.0,->  Nested Loop Semi Join  (cost=2406.31..2846167.33 rows=1 width=34) (actual time=32.284..36931.498 rows=724776 loops=1)
Q18,403896.8,->  GroupAggregate  (cost=10243159.14..11076196.40 rows=30292264 width=39) (actual time=70809.747..70809.997 rows=75 loops=1)
Q3,319296.1,->  Sort  (cost=2568928.05..2576910.45 rows=3192961 width=20) (actual time=37103.362..37103.365 rows=10 loops=1)
Q18,100999.7,->  Hash Join  (cost=2195617.15..2813862.57 rows=7574980 width=39) (actual time=45661.406..51672.332 rows=75 loops=1)
Q18,100999.7,->  Hash Join  (cost=2126589.15..2631209.87 rows=7574980 width=20) (actual time=44752.839..50763.553 rows=75 loops=1)
Q18,100999.7,->  Hash  (cost=2813862.57..2813862.57 rows=7574980 width=39) (actual time=51672.484..51672.484 rows=75 loops=1)
Q18,57699.5,->  Sort  (cost=10243159.14..10318889.80 rows=30292264 width=39) (actual time=70809.738..70809.776 rows=525 loops=1)
Q18,57699.5,->  Hash Join  (cost=2908549.82..5650668.36 rows=30292264 width=39) (actual time=51781.731..70809.038 rows=525 loops=1)
Q18,54010.3,->  Hash  (cost=2075954.43..2075954.43 rows=4050778 width=4) (actual time=44664.117..44664.117 rows=75 loops=1)
Q18,54010.3,->  HashAggregate  (cost=1984811.92..2035446.65 rows=4050778 width=8) (actual time=38730.169..44663.965 rows=75 loops=1)
Q21,40955.0,->  Nested Loop Anti Join  (cost=2406.88..2846169.11 rows=1 width=26) (actual time=32.352..39789.548 rows=40955 loops=1)
Q9,30508.2,->  Sort  (cost=1025700.77..1025701.04 rows=107 width=46) (actual time=93032.254..93647.404 rows=3264388 loops=1)
Q9,30508.2,->  Nested Loop  (cost=66649.39..1025693.59 rows=107 width=24) (actual time=960.984..83728.733 rows=3264388 loops=1)
Q9,30508.2,->  Nested Loop  (cost=66648.96..1025641.74 rows=107 width=24) (actual time=960.956..51747.342 rows=3264388 loops=1)
Q9,30508.2,->  Nested Loop  (cost=66648.67..1025607.21 rows=107 width=28) (actual time=960.942..41096.108 rows=3264388 loops=1)
Q9,30508.2,->  Hash Join  (cost=66650.96..1025697.16 rows=107 width=46) (actual time=961.040..87045.305 rows=3264388 loops=1)
Q10,27581.8,->  Sort  (cost=2288759.89..2290138.98 rows=551637 width=176) (actual time=29741.885..29741.887 rows=20 loops=1)
Q2,4658.0,->  Merge Join  (cost=465676.21..895065.21 rows=1 width=190) (actual time=6814.588..8838.890 rows=4658 loops=1)
Q21,4095.0,->  HashAggregate  (cost=2846169.12..2846169.13 rows=1 width=26) (actual time=39841.319..39842.411 rows=4095 loops=1)
Q15,3738.0,->  Subquery Scan on revenue4  (cost=1794232.22..1794316.33 rows=3738 width=12) (actual time=52278.684..52307.516 rows=1 loops=1)
Q15,3738.0,->  Sort  (cost=1794538.14..1794547.49 rows=3738 width=12) (actual time=52307.537..52307.538 rows=1 loops=1)
Q15,3738.0,Merge Join  (cost=3572016.93..3577114.21 rows=3738 width=79) (actual time=52335.647..52335.649 rows=1 loops=1)
Q15,3738.0,->  HashAggregate  (cost=1794232.22..1794278.95 rows=3738 width=12) (actual time=52278.683..52307.514 rows=1 loops=1)
Q7,769.0,Sort  (cost=2152042.95..2152050.64 rows=3076 width=64) (actual time=20947.306..20947.307 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2151818.60..2151864.74 rows=3076 width=64) (actual time=20947.243..20947.247 rows=4 loops=1)
Q8,364.5,Sort  (cost=1753827.78..1753829.60 rows=729 width=38) (actual time=14146.199..14146.199 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1753780.36..1753793.12 rows=729 width=38) (actual time=14146.159..14146.160 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2846169.14..2846169.14 rows=1 width=26) (actual time=39843.520..39843.526 rows=100 loops=1)
Q21,100.0,Limit  (cost=2846169.14..2846169.14 rows=1 width=26) (actual time=39843.522..39843.538 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=895065.22..895065.22 rows=1 width=190) (actual time=8844.097..8844.114 rows=100 loops=1)
Q2,100.0,Limit  (cost=895065.22..895065.22 rows=1 width=190) (actual time=8844.099..8844.129 rows=100 loops=1)
Q11,36.8,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=8381.146..8382.150 rows=8685 loops=1)
Q11,36.8,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=8293.424..8376.334 rows=8685 loops=1)
Q3,28.0,->  HashAggregate  (cost=2467999.70..2499929.31 rows=3192961 width=20) (actual time=37033.491..37081.513 rows=113793 loops=1)
Q15,26.7,->  HashAggregate  (cost=1777394.39..1777431.77 rows=3738 width=12) (actual time=24586.309..24625.392 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=752178)
Q14,13.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7988.87 rows=784087 width=0) (actual time=118.772..118.772 rows=10686720 loops=1)
Q3,10.6,->  Hash Join  (cost=771314.31..2420105.29 rows=3192961 width=20) (actual time=10623.043..36753.977 rows=300258 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2404.86 rows=319047 width=0) (actual time=35.297..35.297 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.080 rows=8 loops=434536)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.714..3.714 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.602..3.602 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.269..0.269 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.266..0.266 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.288..0.288 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.249..0.249 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.008..0.009 rows=1 loops=1200912)
Q5,5.0,Sort  (cost=1954817.24..1954817.30 rows=25 width=34) (actual time=18749.974..18749.974 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1954816.41..1954816.66 rows=25 width=34) (actual time=18749.927..18749.929 rows=5 loops=1)
Q4,5.0,Sort  (cost=1487865.94..1487865.94 rows=1 width=16) (actual time=12070.990..12070.991 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.07 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=568242)
Q4,5.0,->  HashAggregate  (cost=1487865.92..1487865.93 rows=1 width=16) (actual time=12070.944..12070.944 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=724776)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5607.16 rows=556716 width=0) (actual time=27.398..27.398 rows=2556160 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5819.57 rows=577957 width=0) (actual time=27.554..27.554 rows=2548480 loops=1)
Q13,4.3,Sort  (cost=855417.65..855418.15 rows=200 width=8) (actual time=29070.406..29070.409 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=855408.01..855410.01 rows=200 width=8) (actual time=29070.338..29070.347 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.018..0.019 rows=4 loops=455662)
Q17,3.7,->  Nested Loop  (cost=82.83..114752.26 rows=20225 width=4) (actual time=1.578..204.211 rows=5354 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5964.62..1487090.18 rows=155148 width=16) (actual time=27.772..11786.737 rows=521334 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.017..0.041 rows=3 loops=2000)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61362.60 rows=8176346 width=0) (actual time=27.123..27.123 rows=2535680 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..248271.71 rows=33083161 width=0) (actual time=119.662..119.662 rows=10792960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.341..0.411 rows=3 loops=22049)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54852.30 rows=7308306 width=0) (actual time=31.387..31.387 rows=2566400 loops=1)
Q15,2.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..228691.22 rows=30472430 width=0) (actual time=120.174..120.174 rows=10686720 loops=1)
Q15,2.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..228691.22 rows=30472430 width=0) (actual time=118.201..118.201 rows=10696960 loops=1)
Q22,2.3,Sort  (cost=698241.89..698241.90 rows=3 width=20) (actual time=10138.827..10138.828 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645337.27..645337.31 rows=3 width=20) (actual time=10138.781..10138.784 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.043..0.060 rows=2 loops=6258)
Q20,2.0,->  Nested Loop  (cost=754.49..11669236.47 rows=29067 width=4) (actual time=13.671..9386.074 rows=59925 loops=1)
Q20,2.0,->  Hash  (cost=11669236.47..11669236.47 rows=29067 width=4) (actual time=9421.722..9421.722 rows=59925 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.218..4.218 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402676.01..404141.53 rows=586206 width=40) (actual time=10466.064..10625.313 rows=1189880 loops=1)
Q16,2.0,->  Hash Join  (cost=54694.34..346514.40 rows=586206 width=40) (actual time=1508.375..6848.485 rows=1189880 loops=1)
Q12,2.0,Sort  (cost=3035167.79..3035167.79 rows=1 width=27) (actual time=34664.416..34664.416 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3035167.77..3035167.78 rows=1 width=27) (actual time=34664.365..34664.365 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345633.59..2254773.73 rows=551637 width=176) (actual time=6383.527..27552.659 rows=1109444 loops=1)
Q10,2.0,->  Hash Join  (cost=345632.03..2247187.16 rows=551637 width=154) (actual time=6383.499..27163.580 rows=1109444 loops=1)
Q10,2.0,->  Hash Join  (cost=276604.03..2169884.61 rows=551637 width=12) (actual time=5048.662..25169.200 rows=1109444 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2325586.21 rows=389630 width=38) (actual time=32.243..32540.225 rows=752178 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1904405.39 rows=800100 width=34) (actual time=32.199..24851.407 rows=1555822 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.554..3735.054 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1818866.70 rows=20035299 width=8) (actual time=0.013..18346.140 rows=37966905 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.037..0.510 rows=56 loops=1)
Q9,1.6,GroupAggregate  (cost=1025700.77..1025704.51 rows=107 width=46) (actual time=93042.118..95840.170 rows=175 loops=1)
Q20,1.5,Sort  (cost=11672042.14..11672045.05 rows=1163 width=51) (actual time=9457.570..9457.671 rows=1779 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669642.81..11671982.92 rows=1163 width=51) (actual time=9422.244..9454.767 rows=1779 loops=1)
Q1,1.5,Sort  (cost=4231415.66..4231415.67 rows=6 width=20) (actual time=89477.189..89477.189 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4231415.47..4231415.58 rows=6 width=20) (actual time=89477.138..89477.139 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.173..4.173 rows=405760 loops=1)
Q15,1.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.026..21.193 rows=70652 loops=1)
Q10,1.4,->  HashAggregate  (cost=2268564.66..2274081.03 rows=551637 width=176) (actual time=29413.681..29608.007 rows=371940 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2875.21 rows=140020 width=0) (actual time=732.543..732.543 rows=190473 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2910.22..41863.74 rows=140020 width=24) (actual time=741.348..1151.107 rows=190473 loops=1)
Q18,1.3,Limit  (cost=10243159.14..10243161.89 rows=100 width=39) (actual time=70809.750..70810.006 rows=75 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=90088 width=4) (actual time=0.008..914.678 rows=108634 loops=1)
Q9,1.2,->  Hash Join  (cost=66648.10..351173.33 rows=356723 width=16) (actual time=960.765..5231.909 rows=434536 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=90088 width=4) (actual time=960.271..960.271 rows=108634 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91819.14 rows=9167114 width=0) (actual time=119.336..119.336 rows=10708480 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.286..9.286 rows=22049 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.720..2183.624 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.55..1705766.03 rows=124103 width=20) (actual time=7.085..11538.633 rows=121511 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.11..1505135.93 rows=409739 width=16) (actual time=7.038..6209.088 rows=400694 loops=1)
Q8,1.0,->  Nested Loop  (cost=38756.99..1752818.57 rows=24780 width=16) (actual time=2288.647..14058.836 rows=24010 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.55..1753284.76 rows=24780 width=38) (actual time=2288.697..14102.287 rows=24010 loops=1)
Q8,1.0,->  Hash Join  (cost=38756.69..1744809.77 rows=24821 width=16) (actual time=2288.633..13908.705 rows=24010 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2279.050..2279.050 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.07 rows=13553 width=0) (actual time=4.685..4.685 rows=13364 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.024..0.024 rows=30 loops=13364)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=421.46..28390.70 rows=13553 width=4) (actual time=6.962..198.052 rows=13364 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.047..0.433 rows=30 loops=13364)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.749..426.724 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=8) (actual time=0.007..2756.840 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2138938.03 rows=1480202 width=42) (actual time=841.620..20232.573 rows=1461902 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2150896.12 rows=61499 width=64) (actual time=889.349..20858.169 rows=57830 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..536250.36 rows=1215593 width=30) (actual time=841.483..8525.318 rows=1200912 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..796.064 rows=119861 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.039..45.221 rows=7912 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=840.998..840.998 rows=119861 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=47.464..47.464 rows=7912 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92018.44..1369015.51 rows=797200 width=8) (actual time=120.227..24167.103 rows=794275 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.680..2404.192 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=100272.02..1935077.73 rows=1814704 width=46) (actual time=2550.740..17906.954 rows=1822382 loops=1)
Q5,1.0,->  Hash Join  (cost=104951.02..1954091.71 rows=72470 width=34) (actual time=2608.964..18662.298 rows=72634 loops=1)
Q5,1.0,->  Hash Join  (cost=100271.46..489484.93 rows=453784 width=38) (actual time=2550.723..8342.333 rows=455662 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2521.087..2521.087 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=61929.83..438097.02 rows=2268919 width=8) (actual time=27.287..4758.179 rows=2275583 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.634..470.304 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5964.06..269420.41 rows=577957 width=20) (actual time=27.731..4673.506 rows=568242 loops=1)
Q3,1.0,->  Hash Join  (cost=106455.39..496440.45 rows=1466509 width=12) (actual time=433.920..9941.310 rows=1442830 loops=1)
Q3,1.0,->  Hash  (cost=496440.45..496440.45 rows=1466509 width=12) (actual time=10493.425..10493.425 rows=1442830 loops=1)
Q3,1.0,->  Hash  (cost=46013.58..46013.58 rows=300995 width=4) (actual time=400.085..400.085 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6897.89 rows=300995 width=0) (actual time=68.660..68.660 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56679.37..404593.20 rows=7308306 width=16) (actual time=31.545..6778.356 rows=7214792 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=256542.50..1749342.01 rows=33083161 width=12) (actual time=120.412..20615.476 rows=32632098 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6973.14..46013.58 rows=300995 width=4) (actual time=77.678..315.899 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=4) (actual time=0.014..4688.563 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=4) (actual time=8782.520..8782.520 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=601355.72..644895.18 rows=58945 width=20) (actual time=9579.623..10111.877 rows=63538 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6551.30 rows=381905 width=0) (actual time=88.813..88.813 rows=381527 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6646.77..51949.78 rows=381905 width=4) (actual time=97.765..600.957 rows=381527 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.304..30.957 rows=4095 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.147..32.147 rows=4095 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.290..30.289 rows=4095 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=6814.208..6943.053 rows=1586824 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.312..148.778 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8243 width=30) (actual time=0.136..1183.734 rows=8068 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=160.025..5664.923 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=159.887..159.887 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.255..28.895 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.315..31.378 rows=3991 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.296..30.727 rows=3991 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=13.119..298.951 rows=22049 loops=1)
Q19,1.0,->  Nested Loop  (cost=12900.21..622395.22 rows=1157 width=8) (actual time=34.199..1898.849 rows=1134 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.182..4.182 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..292.15 rows=8243 width=0) (actual time=3.732..3.732 rows=8017 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.83 rows=8112 width=0) (actual time=3.636..3.636 rows=8038 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.15 rows=8046 width=0) (actual time=3.667..3.667 rows=7954 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=4739)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12895.47..26812.60 rows=4854 width=30) (actual time=33.893..274.074 rows=4739 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=16) (actual time=0.006..2768.863 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1681889.28 rows=60584528 width=8) (actual time=0.004..8802.000 rows=60044176 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1681889.28 rows=60584528 width=8) (actual time=0.048..9299.986 rows=60044176 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.038 rows=30 loops=2000)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.038 rows=30 loops=2000)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.56 rows=2013 width=0) (actual time=0.942..0.942 rows=2000 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.06..6665.12 rows=2013 width=4) (actual time=1.261..28.544 rows=2000 loops=1)
Q16,1.0,Sort  (cost=412329.79..412399.19 rows=27758 width=40) (actual time=11287.506..11290.963 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50977.05..50977.05 rows=296085 width=40) (actual time=1505.412..1505.412 rows=297635 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402676.01..410281.17 rows=27758 width=40) (actual time=10466.115..11227.655 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2478.88..50977.05 rows=296085 width=40) (actual time=35.367..1355.033 rows=297635 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=229252.49..1754943.94 rows=2245045 width=12) (actual time=118.948..22472.474 rows=2246473 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=229252.49..1754943.94 rows=2245045 width=12) (actual time=120.924..25421.280 rows=2246473 loops=1)
Q14,1.0,->  Hash Join  (cost=93706.90..1150912.39 rows=784087 width=29) (actual time=1365.376..24409.857 rows=773578 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8184.90..1053629.08 rows=784087 width=12) (actual time=119.511..22286.531 rows=773578 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=15119181 width=8) (actual time=0.018..7559.451 rows=14838293 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742312.10 rows=15119181 width=8) (actual time=1167.600..18161.076 rows=15338309 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=20) (actual time=0.013..4554.538 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2427165.88 rows=292968 width=15) (actual time=0.054..23668.796 rows=312460 loops=1)
Q12,1.0,->  Hash Join  (cost=593719.70..3030040.83 rows=292968 width=27) (actual time=10305.531..34340.330 rows=312460 loops=1)
Q12,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=20) (actual time=10227.890..10227.890 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.331..40.618 rows=4049 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.295..25.292 rows=4049 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=26.294..3869.794 rows=323920 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=41.815..4060.211 rows=323920 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.662..41.662 rows=4049 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.164..26.164 rows=4049 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.270..24.625 rows=4049 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.311..39.920 rows=4049 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1837000.11 rows=59860384 width=20) (actual time=0.015..18681.293 rows=59219497 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831525.85 rows=14996895 width=12) (actual time=0.012..17080.354 rows=14807964 loops=1)
Q10,1.0,->  Hash  (cost=269645.08..269645.08 rows=556716 width=8) (actual time=5043.859..5043.859 rows=554270 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5746.34..269645.08 rows=556716 width=8) (actual time=27.565..4862.971 rows=554270 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.013..0.013 rows=0 loops=400694)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1555822)
Q19,,->  BitmapOr  (cost=12895.47..12895.47 rows=4858 width=0) (actual time=29.902..29.902 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.306..0.337 rows=0 loops=4739)
Q19,,->  BitmapAnd  (cost=6288.58..6288.58 rows=2427 width=0) (actual time=8.620..8.620 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4298.30..4298.30 rows=1607 width=0) (actual time=8.665..8.665 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2308.10..2308.10 rows=825 width=0) (actual time=8.730..8.730 rows=0 loops=1)
