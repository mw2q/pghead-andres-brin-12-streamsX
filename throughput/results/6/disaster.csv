Q21,707463.0,->  Nested Loop Semi Join  (cost=2406.31..2877568.16 rows=1 width=34) (actual time=41.535..36488.370 rows=707463 loops=1)
Q18,356024.8,->  GroupAggregate  (cost=10232999.45..11065207.58 rows=30262114 width=39) (actual time=72250.711..72250.989 rows=85 loops=1)
Q3,314945.9,->  Sort  (cost=2539899.68..2547773.32 rows=3149459 width=20) (actual time=38327.993..38327.996 rows=10 loops=1)
Q18,89029.2,->  Hash Join  (cost=2193641.65..2811315.66 rows=7567488 width=39) (actual time=45942.298..52504.294 rows=85 loops=1)
Q18,89029.2,->  Hash Join  (cost=2124613.65..2628775.34 rows=7567488 width=20) (actual time=45023.604..51585.336 rows=85 loops=1)
Q18,89029.2,->  Hash  (cost=2811315.66..2811315.66 rows=7567488 width=39) (actual time=52504.452..52504.452 rows=85 loops=1)
Q18,50860.6,->  Sort  (cost=10232999.45..10308654.73 rows=30262114 width=39) (actual time=72250.700..72250.745 rows=595 loops=1)
Q18,50860.6,->  Hash Join  (cost=2905909.26..5645298.55 rows=30262114 width=39) (actual time=52615.897..72249.892 rows=595 loops=1)
Q18,47656.2,->  Hash  (cost=2073978.93..2073978.93 rows=4050778 width=4) (actual time=44897.705..44897.705 rows=85 loops=1)
Q18,47656.2,->  HashAggregate  (cost=1982836.42..2033471.15 rows=4050778 width=8) (actual time=39275.217..44897.530 rows=85 loops=1)
Q21,39455.0,->  Nested Loop Anti Join  (cost=2406.88..2877569.94 rows=1 width=26) (actual time=42.228..39272.392 rows=39455 loops=1)
Q9,35295.9,->  Sort  (cost=934978.73..934978.97 rows=93 width=46) (actual time=93983.422..94640.980 rows=3282519 loops=1)
Q9,35295.9,->  Nested Loop  (cost=66499.25..934972.39 rows=93 width=24) (actual time=994.279..84455.572 rows=3282519 loops=1)
Q9,35295.9,->  Nested Loop  (cost=66498.82..934927.31 rows=93 width=24) (actual time=994.261..51208.837 rows=3282519 loops=1)
Q9,35295.9,->  Nested Loop  (cost=66498.53..934897.31 rows=93 width=28) (actual time=994.250..40478.608 rows=3282519 loops=1)
Q9,35295.9,->  Hash Join  (cost=66500.82..934975.69 rows=93 width=46) (actual time=994.344..87805.341 rows=3282519 loops=1)
Q10,27856.8,->  Sort  (cost=2272567.94..2273960.78 rows=557136 width=176) (actual time=32927.021..32927.024 rows=20 loops=1)
Q2,4564.0,->  Merge Join  (cost=465676.21..889984.43 rows=1 width=190) (actual time=6849.735..8782.150 rows=4564 loops=1)
Q21,4009.0,->  HashAggregate  (cost=2877569.95..2877569.96 rows=1 width=26) (actual time=39326.458..39327.638 rows=4009 loops=1)
Q15,3773.0,->  Subquery Scan on revenue6  (cost=1742765.74..1742850.63 rows=3773 width=12) (actual time=41920.919..41936.090 rows=1 loops=1)
Q15,3773.0,->  Sort  (cost=1743074.77..1743084.21 rows=3773 width=12) (actual time=41936.110..41936.111 rows=1 loops=1)
Q15,3773.0,Merge Join  (cost=3468931.96..3474029.76 rows=3773 width=79) (actual time=41973.283..41973.286 rows=1 loops=1)
Q15,3773.0,->  HashAggregate  (cost=1742765.74..1742812.90 rows=3773 width=12) (actual time=41920.918..41936.087 rows=1 loops=1)
Q7,769.0,Sort  (cost=2141510.96..2141518.65 rows=3076 width=64) (actual time=23154.841..23154.842 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2141286.61..2141332.75 rows=3076 width=64) (actual time=23154.781..23154.784 rows=4 loops=1)
Q8,364.5,Sort  (cost=1690396.78..1690398.60 rows=729 width=38) (actual time=10454.479..10454.479 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1690349.36..1690362.12 rows=729 width=38) (actual time=10454.435..10454.435 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2877569.97..2877569.97 rows=1 width=26) (actual time=39328.799..39328.806 rows=100 loops=1)
Q21,100.0,Limit  (cost=2877569.97..2877569.97 rows=1 width=26) (actual time=39328.801..39328.818 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=889984.44..889984.44 rows=1 width=190) (actual time=8786.956..8786.968 rows=100 loops=1)
Q2,100.0,Limit  (cost=889984.44..889984.44 rows=1 width=190) (actual time=8786.958..8786.982 rows=100 loops=1)
Q11,37.9,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=9985.144..9986.134 rows=8440 loops=1)
Q11,37.9,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=9897.981..9980.516 rows=8440 loops=1)
Q3,27.7,->  HashAggregate  (cost=2440346.41..2471841.00 rows=3149459 width=20) (actual time=38259.108..38306.978 rows=113474 loops=1)
Q15,26.5,->  HashAggregate  (cost=1725772.00..1725809.73 rows=3773 width=12) (actual time=18675.132..18705.971 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=734429)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7871.28 rows=772328 width=0) (actual time=120.605..120.605 rows=10792960 loops=1)
Q3,10.5,->  Hash Join  (cost=763255.84..2393104.53 rows=3149459 width=20) (actual time=8329.850..37960.980 rows=299781 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2422.66 rows=321420 width=0) (actual time=35.023..35.023 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.078 rows=7 loops=437784)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.752..3.752 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.264..4.264 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.235..0.235 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.252..0.252 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.259..0.259 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.258..0.258 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.245..0.245 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1200744)
Q5,5.0,Sort  (cost=1979045.49..1979045.56 rows=25 width=34) (actual time=16633.607..16633.608 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1979044.66..1979044.91 rows=25 width=34) (actual time=16633.563..16633.564 rows=5 loops=1)
Q4,5.0,Sort  (cost=1489844.09..1489844.10 rows=1 width=16) (actual time=13357.462..13357.463 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=574386)
Q4,5.0,->  HashAggregate  (cost=1489844.07..1489844.08 rows=1 width=16) (actual time=13357.419..13357.421 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=707463)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5662.54 rows=562254 width=0) (actual time=27.265..27.265 rows=2535680 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5827.12 rows=578712 width=0) (actual time=27.638..27.638 rows=2553600 loops=1)
Q13,4.4,Sort  (cost=845765.12..845765.62 rows=200 width=8) (actual time=26620.878..26620.880 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=845755.48..845757.48 rows=200 width=8) (actual time=26620.809..26620.819 rows=45 loops=1)
Q17,3.8,->  Nested Loop  (cost=82.91..115206.24 rows=20468 width=4) (actual time=1.773..207.017 rows=5343 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=454869)
Q4,3.3,->  Nested Loop Semi Join  (cost=5972.37..1489068.86 rows=155042 width=16) (actual time=27.829..13056.481 rows=526372 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.015..0.036 rows=3 loops=1966)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..62097.44 rows=8274325 width=0) (actual time=27.410..27.410 rows=2566400 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245137.73 rows=32665298 width=0) (actual time=119.885..119.885 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.303..0.371 rows=3 loops=21593)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54350.69 rows=7241425 width=0) (actual time=27.171..27.171 rows=2538240 loops=1)
Q15,2.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..211412.74 rows=28168632 width=0) (actual time=124.022..124.022 rows=10686720 loops=1)
Q15,2.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..211412.74 rows=28168632 width=0) (actual time=118.232..118.232 rows=10693120 loops=1)
Q22,2.3,Sort  (cost=695852.63..695852.64 rows=3 width=20) (actual time=9460.916..9460.916 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642964.62..642964.66 rows=3 width=20) (actual time=9460.872..9460.874 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.037..0.054 rows=2 loops=6190)
Q20,2.0,->  Nested Loop  (cost=754.50..11669236.49 rows=29067 width=4) (actual time=13.635..8339.001 rows=58538 loops=1)
Q20,2.0,->  Hash  (cost=11669236.49..11669236.49 rows=29067 width=4) (actual time=8373.168..8373.168 rows=58538 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.203..4.203 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403175.62..404649.97 rows=589742 width=40) (actual time=10373.511..10541.543 rows=1192303 loops=1)
Q16,2.0,->  Hash Join  (cost=54794.24..346649.66 rows=589742 width=40) (actual time=1298.665..6671.635 rows=1192303 loops=1)
Q12,2.0,Sort  (cost=3053236.78..3053236.79 rows=1 width=27) (actual time=33203.942..33203.942 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3053236.76..3053236.77 rows=1 width=27) (actual time=33203.892..33203.893 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=343816.65..2238242.99 rows=557136 width=176) (actual time=10187.752..30718.309 rows=1135202 loops=1)
Q10,2.0,->  Hash Join  (cost=343815.09..2230580.81 rows=557136 width=154) (actual time=10187.725..30330.075 rows=1135202 loops=1)
Q10,2.0,->  Hash Join  (cost=274787.09..2153195.77 rows=557136 width=12) (actual time=8812.059..28146.491 rows=1135202 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.559..3773.545 rows=7995520 loops=1)
Q9,1.8,GroupAggregate  (cost=934978.73..934981.99 rows=93 width=46) (actual time=93993.616..96868.201 rows=175 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1838829.99 rows=20255200 width=8) (actual time=0.017..18708.376 rows=37928434 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2351156.45 rows=393906 width=38) (actual time=41.481..32488.698 rows=734429 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1925281.11 rows=808881 width=34) (actual time=41.364..25296.896 rows=1522218 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.519 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672042.16..11672045.07 rows=1163 width=51) (actual time=8404.664..8404.760 rows=1759 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669642.83..11671982.94 rows=1163 width=51) (actual time=8373.606..8403.129 rows=1759 loops=1)
Q1,1.5,Sort  (cost=4213599.31..4213599.32 rows=6 width=20) (actual time=90112.039..90112.040 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4213599.12..4213599.23 rows=6 width=20) (actual time=90111.988..90111.991 rows=4 loops=1)
Q9,1.4,->  Seq Scan on part  (cost=0.00..65522.00 rows=78077 width=4) (actual time=0.010..953.771 rows=109446 loops=1)
Q9,1.4,->  Hash Join  (cost=66497.96..350547.58 rows=309162 width=16) (actual time=994.137..5099.947 rows=437784 loops=1)
Q9,1.4,->  Hash  (cost=65522.00..65522.00 rows=78077 width=4) (actual time=993.640..993.640 rows=109446 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.192..4.192 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2252171.39..2257742.75 rows=557136 width=176) (actual time=32593.753..32790.562 rows=378492 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2873.53 rows=139853 width=0) (actual time=744.809..744.809 rows=190845 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2908.50..41857.64 rows=139853 width=24) (actual time=753.834..903.098 rows=190845 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91819.14 rows=9167114 width=0) (actual time=120.632..120.632 rows=10708480 loops=1)
Q18,1.1,Limit  (cost=10232999.45..10233002.20 rows=100 width=39) (actual time=72250.714..72251.003 rows=85 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.862..1916.179 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=401.97..1642776.98 rows=118440 width=20) (actual time=6.910..8144.968 rows=121321 loops=1)
Q8,1.0,->  Nested Loop  (cost=401.53..1451304.79 rows=391043 width=16) (actual time=6.721..4523.392 rows=397994 loops=1)
Q8,1.0,->  Nested Loop  (cost=38732.41..1689431.40 rows=23649 width=16) (actual time=2017.837..10377.160 rows=24375 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.43 rows=31 width=20) (actual time=0.025..0.323 rows=30 loops=13252)
Q8,1.0,->  Hash Join  (cost=38733.97..1689876.38 rows=23649 width=38) (actual time=2017.884..10414.415 rows=24375 loops=1)
Q8,1.0,->  Hash Join  (cost=38732.12..1681788.16 rows=23688 width=16) (actual time=2017.823..10236.204 rows=24375 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2007.282..2007.282 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..397.73 rows=12973 width=0) (actual time=4.407..4.407 rows=13252 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=400.97..27670.77 rows=12973 width=4) (actual time=6.670..118.028 rows=13252 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.784..373.736 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=8) (actual time=0.007..3130.510 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2128451.30 rows=1472872 width=42) (actual time=618.778..22407.660 rows=1460126 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2140368.69 rows=61195 width=64) (actual time=668.841..23065.672 rows=57842 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533895.27 rows=1209599 width=30) (actual time=618.759..8923.088 rows=1200744 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.039..579.118 rows=119868 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.039..47.565 rows=7929 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=618.233..618.233 rows=119868 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=49.849..49.849 rows=7929 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92010.66..1369007.73 rows=766098 width=8) (actual time=121.474..24714.951 rows=761246 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=4.288..2008.464 rows=299493 loops=1)
Q5,1.0,->  Nested Loop  (cost=101013.66..1959125.43 rows=1836461 width=46) (actual time=2152.111..15727.710 rows=1820177 loops=1)
Q5,1.0,->  Hash Join  (cost=105692.66..1978311.27 rows=73339 width=34) (actual time=2216.672..16547.744 rows=72260 loops=1)
Q5,1.0,->  Hash Join  (cost=101013.09..494890.58 rows=459221 width=38) (actual time=2152.091..8275.621 rows=454869 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2122.086..2122.086 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=62671.46..443346.34 rows=2296107 width=8) (actual time=27.574..5125.295 rows=2275103 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.298..391.838 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5971.80..269947.48 rows=578712 width=20) (actual time=27.808..5517.768 rows=574386 loops=1)
Q3,1.0,->  Hash Join  (cost=105898.20..491837.66 rows=1449130 width=12) (actual time=1048.882..7717.586 rows=1446355 loops=1)
Q3,1.0,->  Hash  (cost=491837.66..491837.66 rows=1449130 width=12) (actual time=8202.789..8202.789 rows=1446355 loops=1)
Q3,1.0,->  Hash  (cost=45984.97..45984.97 rows=300175 width=4) (actual time=1019.559..1019.559 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6879.74 rows=300175 width=0) (actual time=66.945..66.945 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56161.04..400453.86 rows=7241425 width=16) (actual time=27.329..4343.973 rows=7234339 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253304.06..1729163.28 rows=32665298 width=12) (actual time=120.642..23753.290 rows=32615916 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6954.78..45984.97 rows=300175 width=4) (actual time=77.281..923.495 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.016..3900.399 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=8345.907..8345.907 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598993.43..642523.06 rows=58874 width=20) (actual time=9177.344..9438.570 rows=63449 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6547.89 rows=381450 width=0) (actual time=88.021..88.021 rows=381401 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6643.25..51934.31 rows=381450 width=4) (actual time=96.891..613.685 rows=381401 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.305..40.197 rows=4010 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=41.295..41.295 rows=4010 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.289..39.501 rows=4010 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=6849.535..6975.803 rows=1586953 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.294..145.266 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8112 width=30) (actual time=0.022..1137.496 rows=7869 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=156.488..5707.959 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=156.347..156.347 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.250..28.220 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.296..28.256 rows=3987 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.56 rows=20001 width=0) (actual time=9.346..9.346 rows=21593 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.277..27.652 rows=3987 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.07..34891.54 rows=22022 width=4) (actual time=12.992..286.674 rows=21593 loops=1)
Q19,1.0,->  Nested Loop  (cost=12891.10..613940.80 rows=1145 width=8) (actual time=35.051..1552.710 rows=1179 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.187..4.187 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.79 rows=8008 width=0) (actual time=3.782..3.782 rows=7865 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.35 rows=7964 width=0) (actual time=3.412..3.412 rows=7858 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.19 rows=7947 width=0) (actual time=3.691..3.691 rows=7853 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12890.54..26606.98 rows=4767 width=30) (actual time=33.435..274.949 rows=4750 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=16) (actual time=0.005..2933.117 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1680215.28 rows=60524228 width=8) (actual time=0.005..9924.516 rows=60044082 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1680215.28 rows=60524228 width=8) (actual time=0.036..10206.746 rows=60044082 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.046 rows=30 loops=1966)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.046 rows=30 loops=1966)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.64 rows=2021 width=0) (actual time=0.882..0.882 rows=1966 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.14..6686.38 rows=2021 width=4) (actual time=1.233..30.770 rows=1966 loops=1)
Q16,1.0,Sort  (cost=412888.89..412958.71 rows=27926 width=40) (actual time=11214.536..11217.600 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51054.63..51054.63 rows=297871 width=40) (actual time=1295.692..1295.692 rows=298231 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403175.62..410826.65 rows=27926 width=40) (actual time=10373.577..11155.226 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2497.13..51054.63 rows=297871 width=40) (actual time=35.091..1165.818 rows=298231 loops=1)
Q15,1.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.026..27.620 rows=97885 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=211979.20..1703113.68 rows=2265832 width=12) (actual time=118.980..16940.681 rows=2247643 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=211979.20..1703113.68 rows=2265832 width=12) (actual time=124.771..21117.153 rows=2247643 loops=1)
Q14,1.0,->  Hash Join  (cost=93586.36..1153171.61 rows=772328 width=29) (actual time=1358.010..26285.417 rows=772430 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8064.36..1056064.69 rows=772328 width=12) (actual time=121.379..24214.310 rows=772430 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442530.20 rows=14834864 width=8) (actual time=0.023..6873.273 rows=14852883 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..734081.16 rows=14834864 width=8) (actual time=827.784..16726.379 rows=15352902 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=20) (actual time=0.011..5321.474 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2441628.17 rows=294223 width=15) (actual time=0.029..22787.659 rows=312559 loops=1)
Q12,1.0,->  Hash Join  (cost=597265.22..3048087.86 rows=294223 width=27) (actual time=9804.701..32913.138 rows=312559 loops=1)
Q12,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=20) (actual time=9759.336..9759.336 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.301..26.178 rows=4079 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.280..40.429 rows=4079 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=27.205..4054.025 rows=326320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=41.606..5445.072 rows=326320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.525..41.525 rows=4079 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=27.125..27.125 rows=4079 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.274..25.534 rows=4079 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.262..39.708 rows=4079 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1835178.76 rows=59460509 width=20) (actual time=0.013..19593.434 rows=58839128 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.65 rows=14878312 width=12) (actual time=0.010..16259.097 rows=14808323 loops=1)
Q10,1.0,->  Hash  (cost=267758.91..267758.91 rows=562254 width=8) (actual time=8807.463..8807.463 rows=567322 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5803.10..267758.91 rows=562254 width=8) (actual time=27.435..8564.593 rows=567322 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.008..0.009 rows=0 loops=397994)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1522218)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.20 rows=1 width=16) (actual time=0.236..0.267 rows=0 loops=4750)
Q19,,->  BitmapOr  (cost=12890.54..12890.54 rows=4770 width=0) (actual time=29.585..29.585 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6287.05..6287.05 rows=2382 width=0) (actual time=8.331..8.331 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4297.29..4297.29 rows=1587 width=0) (actual time=8.653..8.653 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2305.69..2305.69 rows=801 width=0) (actual time=8.762..8.762 rows=0 loops=1)
