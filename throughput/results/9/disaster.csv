Q21,710216.0,->  Nested Loop Semi Join  (cost=2406.31..2851851.30 rows=1 width=34) (actual time=41.800..35748.011 rows=710216 loops=1)
Q18,358843.6,->  GroupAggregate  (cost=10192791.23..11021719.99 rows=30142864 width=39) (actual time=69958.489..69958.759 rows=84 loops=1)
Q3,315086.7,->  Sort  (cost=2534328.93..2542206.10 rows=3150867 width=20) (actual time=36101.543..36101.545 rows=10 loops=1)
Q18,89731.6,->  Hash Join  (cost=2185828.15..2801211.98 rows=7537460 width=39) (actual time=45731.362..51117.156 rows=84 loops=1)
Q18,89731.6,->  Hash Join  (cost=2116800.15..2619122.08 rows=7537460 width=20) (actual time=44849.134..50234.703 rows=84 loops=1)
Q18,89731.6,->  Hash  (cost=2801211.98..2801211.98 rows=7537460 width=39) (actual time=51117.315..51117.315 rows=84 loops=1)
Q18,51263.3,->  Sort  (cost=10192791.23..10268148.39 rows=30142864 width=39) (actual time=69958.479..69958.512 rows=588 loops=1)
Q18,51263.3,->  Hash Join  (cost=2895430.23..5624024.75 rows=30142864 width=39) (actual time=51223.612..69957.721 rows=588 loops=1)
Q18,48223.5,->  Hash  (cost=2066165.43..2066165.43 rows=4050778 width=4) (actual time=44734.088..44734.088 rows=84 loops=1)
Q18,48223.5,->  HashAggregate  (cost=1975022.92..2025657.65 rows=4050778 width=8) (actual time=39007.145..44733.919 rows=84 loops=1)
Q21,39448.0,->  Nested Loop Anti Join  (cost=2406.88..2851853.08 rows=1 width=26) (actual time=45.556..38509.690 rows=39448 loops=1)
Q10,27775.4,->  Sort  (cost=2285067.56..2286456.34 rows=555509 width=176) (actual time=31629.256..31629.258 rows=20 loops=1)
Q9,27605.3,->  Sort  (cost=1087318.96..1087319.26 rows=118 width=46) (actual time=92176.682..92812.702 rows=3257427 loops=1)
Q9,27605.3,->  Nested Loop  (cost=66749.49..1087311.12 rows=118 width=24) (actual time=974.500..82953.428 rows=3257427 loops=1)
Q9,27605.3,->  Nested Loop  (cost=66749.06..1087253.93 rows=118 width=24) (actual time=974.482..52636.541 rows=3257427 loops=1)
Q9,27605.3,->  Nested Loop  (cost=66748.76..1087215.86 rows=118 width=28) (actual time=974.473..42187.569 rows=3257427 loops=1)
Q9,27605.3,->  Hash Join  (cost=66751.05..1087314.90 rows=118 width=46) (actual time=974.550..86190.499 rows=3257427 loops=1)
Q2,4749.0,->  Merge Join  (cost=465676.21..894381.26 rows=1 width=190) (actual time=6525.704..8471.353 rows=4749 loops=1)
Q21,4021.0,->  HashAggregate  (cost=2851853.08..2851853.09 rows=1 width=26) (actual time=38559.555..38560.587 rows=4021 loops=1)
Q15,3823.0,->  Subquery Scan on revenue9  (cost=2021266.57..2021352.59 rows=3823 width=12) (actual time=40501.208..40517.527 rows=1 loops=1)
Q15,3823.0,->  Sort  (cost=2021580.07..2021589.63 rows=3823 width=12) (actual time=40517.547..40517.548 rows=1 loops=1)
Q15,3823.0,Merge Join  (cost=4025626.52..4030725.07 rows=3823 width=79) (actual time=40547.569..40547.571 rows=1 loops=1)
Q15,3823.0,->  HashAggregate  (cost=2021266.57..2021314.36 rows=3823 width=12) (actual time=40501.207..40517.525 rows=1 loops=1)
Q7,769.0,Sort  (cost=2147828.24..2147835.93 rows=3076 width=64) (actual time=20360.141..20360.142 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2147603.90..2147650.04 rows=3076 width=64) (actual time=20360.075..20360.085 rows=4 loops=1)
Q8,364.5,Sort  (cost=1717220.77..1717222.59 rows=729 width=38) (actual time=14491.668..14491.669 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1717173.35..1717186.11 rows=729 width=38) (actual time=14491.631..14491.632 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2851853.10..2851853.11 rows=1 width=26) (actual time=38561.708..38561.715 rows=100 loops=1)
Q21,100.0,Limit  (cost=2851853.10..2851853.11 rows=1 width=26) (actual time=38561.709..38561.724 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=894381.27..894381.27 rows=1 width=190) (actual time=8476.157..8476.167 rows=100 loops=1)
Q2,100.0,Limit  (cost=894381.27..894381.27 rows=1 width=190) (actual time=8476.159..8476.186 rows=100 loops=1)
Q11,35.3,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=8868.498..8869.543 rows=9062 loops=1)
Q11,35.3,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=8787.784..8863.515 rows=9062 loops=1)
Q3,27.6,->  HashAggregate  (cost=2434731.16..2466239.83 rows=3150867 width=20) (actual time=36036.011..36080.095 rows=114110 loops=1)
Q15,26.1,->  HashAggregate  (cost=2003960.14..2003998.36 rows=3823 width=12) (actual time=19822.216..19852.622 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=737149)
Q14,14.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7572.56 rows=742456 width=0) (actual time=123.619..123.619 rows=10792960 loops=1)
Q3,10.4,->  Hash Join  (cost=763508.90..2387468.15 rows=3150867 width=20) (actual time=12450.348..35780.713 rows=301967 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2407.66 rows=319420 width=0) (actual time=34.964..34.964 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.082 rows=8 loops=434020)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.606..3.606 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.151..4.151 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.314..0.314 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.238..0.238 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.267..0.267 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.255..0.255 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.008..0.008 rows=1 loops=1195934)
Q5,5.0,Sort  (cost=1930643.05..1930643.11 rows=25 width=34) (actual time=17190.257..17190.258 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1930642.22..1930642.47 rows=25 width=34) (actual time=17190.218..17190.220 rows=5 loops=1)
Q4,5.0,Sort  (cost=1489844.09..1489844.10 rows=1 width=16) (actual time=13553.393..13553.393 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.011..0.011 rows=1 loops=574304)
Q4,5.0,->  HashAggregate  (cost=1489844.07..1489844.08 rows=1 width=16) (actual time=13553.349..13553.349 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=710216)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5646.17 rows=560617 width=0) (actual time=27.416..27.416 rows=2551040 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5827.12 rows=578712 width=0) (actual time=27.546..27.546 rows=2553600 loops=1)
Q13,4.4,Sort  (cost=844294.10..844294.60 rows=200 width=8) (actual time=28114.660..28114.663 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=844284.46..844286.46 rows=200 width=8) (actual time=28114.585..28114.591 rows=45 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=457410)
Q17,3.7,->  Nested Loop  (cost=78.45..112665.50 rows=19815 width=4) (actual time=1.606..159.352 rows=5228 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5972.37..1489068.86 rows=155042 width=16) (actual time=27.738..13261.499 rows=526776 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.013..0.029 rows=3 loops=1959)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..241922.88 rows=32236651 width=0) (actual time=117.578..117.578 rows=10686720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.286..0.355 rows=3 loops=22026)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55246.16 rows=7360821 width=0) (actual time=33.125..33.125 rows=2540800 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44876.63 rows=5978217 width=0) (actual time=27.501..27.501 rows=2566400 loops=1)
Q22,2.3,Sort  (cost=695925.15..695925.16 rows=3 width=20) (actual time=8627.246..8627.247 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642995.15..642995.19 rows=3 width=20) (actual time=8627.201..8627.202 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.036..0.052 rows=2 loops=6467)
Q20,2.0,->  Nested Loop  (cost=754.49..11669236.47 rows=29067 width=4) (actual time=13.338..8069.128 rows=59815 loops=1)
Q20,2.0,->  Hash  (cost=11669236.47..11669236.47 rows=29067 width=4) (actual time=8104.419..8104.419 rows=59815 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.201..4.201 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402681.21..404146.58 rows=586148 width=40) (actual time=10099.252..10246.662 rows=1185787 loops=1)
Q16,2.0,->  Hash Join  (cost=54706.10..346525.58 rows=586148 width=40) (actual time=1249.894..6532.434 rows=1185787 loops=1)
Q12,2.0,Sort  (cost=3055994.36..3055994.36 rows=1 width=27) (actual time=33346.672..33346.672 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3055994.34..3055994.35 rows=1 width=27) (actual time=33346.621..33346.623 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345273.86..2250842.85 rows=555509 width=176) (actual time=7537.290..29342.591 rows=1121372 loops=1)
Q10,2.0,->  Hash Join  (cost=345272.29..2243203.04 rows=555509 width=154) (actual time=7537.261..28946.941 rows=1121372 loops=1)
Q10,2.0,->  Hash Join  (cost=276244.29..2165842.41 rows=555509 width=12) (actual time=5859.360..26461.152 rows=1121372 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1908184.29 rows=801689 width=34) (actual time=41.653..24496.888 rows=1527002 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.538..3746.236 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1822480.44 rows=20075105 width=8) (actual time=0.014..18079.803 rows=37966584 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2330215.11 rows=390404 width=38) (actual time=41.700..31785.610 rows=737149 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.032..0.495 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672042.14..11672045.05 rows=1163 width=51) (actual time=8136.053..8136.150 rows=1785 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669642.81..11671982.92 rows=1163 width=51) (actual time=8104.904..8133.875 rows=1785 loops=1)
Q1,1.5,Sort  (cost=4232990.91..4232990.93 rows=6 width=20) (actual time=89924.311..89924.312 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4232990.73..4232990.83 rows=6 width=20) (actual time=89924.260..89924.262 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=1087318.96..1087323.09 rows=118 width=46) (actual time=92186.495..95030.740 rows=175 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.168..4.168 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2264730.58..2270285.67 rows=555509 width=176) (actual time=31299.270..31493.595 rows=374994 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2877.73 rows=140275 width=0) (actual time=503.529..503.529 rows=190548 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2912.80..41873.02 rows=140275 width=24) (actual time=513.085..660.128 rows=190548 loops=1)
Q15,1.3,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.027..22.801 rows=72980 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=98096 width=4) (actual time=0.013..933.692 rows=108505 loops=1)
Q9,1.1,->  Hash Join  (cost=66748.20..351590.52 rows=388432 width=16) (actual time=974.435..5369.829 rows=434020 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=98096 width=4) (actual time=973.908..973.908 rows=108505 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92223.07 rows=9207507 width=0) (actual time=119.975..119.975 rows=10694400 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.009..9.009 rows=22026 loops=1)
Q18,1.1,Limit  (cost=10192791.23..10192793.98 rows=100 width=39) (actual time=69958.491..69958.768 rows=84 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.703..2453.799 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=416.38..1669424.99 rows=120697 width=20) (actual time=7.026..11634.351 rows=121219 loops=1)
Q8,1.0,->  Nested Loop  (cost=415.94..1474309.24 rows=398493 width=16) (actual time=6.828..6541.602 rows=397585 loops=1)
Q8,1.0,->  Nested Loop  (cost=38746.82..1716237.91 rows=24100 width=16) (actual time=2557.658..14407.198 rows=24130 loops=1)
Q8,1.0,->  Hash Join  (cost=38748.38..1716691.35 rows=24100 width=38) (actual time=2557.709..14448.735 rows=24130 loops=1)
Q8,1.0,->  Hash Join  (cost=38746.53..1708449.14 rows=24139 width=16) (actual time=2557.629..14263.168 rows=24130 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2547.387..2547.387 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..407.98 rows=13273 width=0) (actual time=4.522..4.522 rows=13254 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=13254)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.29..28047.06 rows=13273 width=4) (actual time=6.742..169.618 rows=13254 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.034..0.464 rows=30 loops=13254)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.635..480.951 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=8) (actual time=0.006..2746.014 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2134741.46 rows=1477263 width=42) (actual time=875.364..19634.084 rows=1452623 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2146683.24 rows=61377 width=64) (actual time=924.659..20273.116 rows=58325 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..535308.32 rows=1213195 width=30) (actual time=875.300..8780.554 rows=1195934 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.034..829.316 rows=119690 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.039..46.327 rows=8061 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=874.782..874.782 rows=119690 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=48.600..48.600 rows=8061 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92415.44..1369017.35 rows=769474 width=8) (actual time=120.808..19353.478 rows=764693 loops=1)
Q5,1.0,->  Nested Loop  (cost=83796.63..1910622.71 rows=1848543 width=46) (actual time=2238.421..16373.281 rows=1828600 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=4.510..2092.161 rows=300963 loops=1)
Q5,1.0,->  Hash Join  (cost=88475.63..1929904.00 rows=73822 width=34) (actual time=2302.098..17102.023 rows=73043 loops=1)
Q5,1.0,->  Hash Join  (cost=83796.06..443318.80 rows=462243 width=38) (actual time=2238.398..8957.105 rows=457410 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2208.345..2208.345 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45454.43..391687.69 rows=2311213 width=8) (actual time=27.663..5783.815 rows=2281952 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.187..408.189 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5971.80..269947.48 rows=578712 width=20) (actual time=27.711..6231.398 rows=574304 loops=1)
Q3,1.0,->  Hash Join  (cost=106798.82..495145.36 rows=1470520 width=12) (actual time=803.603..11736.894 rows=1473283 loops=1)
Q3,1.0,->  Hash  (cost=495145.36..495145.36 rows=1470520 width=12) (actual time=12323.110..12323.110 rows=1473283 loops=1)
Q3,1.0,->  Hash  (cost=45966.64..45966.64 rows=299665 width=4) (actual time=768.025..768.025 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6867.91 rows=299665 width=0) (actual time=68.983..68.983 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57086.36..403124.63 rows=7360821 width=16) (actual time=33.285..8109.150 rows=7347063 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=249982.04..1721545.18 rows=32236651 width=12) (actual time=118.310..17897.215 rows=32165382 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6942.83..45966.64 rows=299665 width=4) (actual time=77.795..667.457 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.020..3464.769 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=7751.004..7751.004 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598997.74..642552.26 rows=59052 width=20) (actual time=8345.969..8605.080 rows=63587 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6556.50 rows=382601 width=0) (actual time=89.151..89.151 rows=381735 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6652.15..51973.42 rows=382601 width=4) (actual time=98.578..366.496 rows=381735 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.347..40.356 rows=4021 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=41.542..41.542 rows=4021 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.332..39.701 rows=4021 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=6524.994..6646.864 rows=1602490 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.345..154.216 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8226 width=30) (actual time=0.139..1165.609 rows=7981 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=166.014..5378.425 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=165.871..165.871 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.264..29.947 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.272..27.745 rows=3990 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.254..27.119 rows=3990 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.624..227.360 rows=22026 loops=1)
Q19,1.0,->  Nested Loop  (cost=12856.02..604373.40 rows=1120 width=8) (actual time=33.757..1821.259 rows=1132 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.179..4.179 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.63 rows=7993 width=0) (actual time=3.654..3.654 rows=8101 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.55 rows=7884 width=0) (actual time=3.724..3.724 rows=8100 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..271.19 rows=7747 width=0) (actual time=3.456..3.456 rows=8011 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12855.46..26393.17 rows=4688 width=30) (actual time=33.433..305.019 rows=4859 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.006..2355.137 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673594.28 rows=60285728 width=8) (actual time=0.004..10008.816 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673594.28 rows=60285728 width=8) (actual time=0.049..8678.005 rows=60046221 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.037 rows=30 loops=1959)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.037 rows=30 loops=1959)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.19 rows=1976 width=0) (actual time=0.919..0.919 rows=1959 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.68..6551.70 rows=1976 width=4) (actual time=1.225..13.415 rows=1959 loops=1)
Q16,1.0,Sort  (cost=412334.08..412403.47 rows=27756 width=40) (actual time=10899.464..10903.728 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=50989.17..50989.17 rows=296056 width=40) (actual time=1247.458..1247.458 rows=296604 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402681.21..410285.62 rows=27756 width=40) (actual time=10099.310..10838.864 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2481.67..50989.17 rows=296056 width=40) (actual time=35.035..1125.935 rows=296604 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1980884.89 rows=2307525 width=12) (actual time=0.046..17926.235 rows=2249148 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1980884.89 rows=2307525 width=12) (actual time=0.044..18469.127 rows=2249148 loops=1)
Q14,1.0,->  Hash Join  (cost=93280.17..1139581.29 rows=742456 width=29) (actual time=1443.402..19875.844 rows=748402 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7758.17..1042922.45 rows=742456 width=12) (actual time=124.441..17852.247 rows=748402 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441649.60 rows=14805343 width=8) (actual time=0.018..6981.358 rows=14852886 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..732757.74 rows=14805343 width=8) (actual time=848.595..17227.719 rows=15352905 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=20) (actual time=0.012..4405.115 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2444051.40 rows=288976 width=15) (actual time=0.262..23383.337 rows=311536 loops=1)
Q12,1.0,->  Hash Join  (cost=597855.36..3050937.26 rows=288976 width=27) (actual time=9348.970..33054.537 rows=311536 loops=1)
Q12,1.0,->  Hash  (cost=408106.27..408106.27 rows=15179927 width=20) (actual time=9295.625..9295.625 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.303..40.402 rows=4021 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.303..27.010 rows=4021 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=28.056..4154.781 rows=321680 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=41.493..4275.914 rows=321680 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.428..41.428 rows=4021 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=27.990..27.990 rows=4021 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.273..26.306 rows=4021 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.283..39.714 rows=4021 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831525.85 rows=60036622 width=20) (actual time=0.011..18761.568 rows=59560038 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1827915.52 rows=14967333 width=12) (actual time=0.012..17505.308 rows=14822937 loops=1)
Q10,1.0,->  Hash  (cost=269236.58..269236.58 rows=560617 width=8) (actual time=5854.803..5854.803 rows=561000 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5786.33..269236.58 rows=560617 width=8) (actual time=27.578..5655.109 rows=561000 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=397585)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1527002)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.28 rows=1 width=16) (actual time=0.277..0.310 rows=0 loops=4859)
Q19,,->  BitmapOr  (cost=12855.46..12855.46 rows=4691 width=0) (actual time=29.320..29.320 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6268.85..6268.85 rows=2317 width=0) (actual time=8.333..8.333 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.61..4280.61 rows=1574 width=0) (actual time=8.643..8.643 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2305.49..2305.49 rows=800 width=0) (actual time=8.579..8.579 rows=0 loops=1)
