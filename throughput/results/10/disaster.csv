Q21,714562.0,->  Nested Loop Semi Join  (cost=2406.31..2866080.76 rows=1 width=34) (actual time=46.103..38138.230 rows=714562 loops=1)
Q3,319540.7,->  Sort  (cost=2566534.53..2574523.05 rows=3195407 width=20) (actual time=36089.620..36089.622 rows=10 loops=1)
Q18,300828.4,->  GroupAggregate  (cost=10172565.53..10999843.76 rows=30082845 width=39) (actual time=73416.560..73416.895 rows=100 loops=1)
Q18,67770.0,->  Hash Join  (cost=2181895.58..2796136.59 rows=7522476 width=39) (actual time=49174.400..54679.649 rows=111 loops=1)
Q18,67770.0,->  Hash Join  (cost=2112867.58..2614271.45 rows=7522476 width=20) (actual time=48000.924..53505.868 rows=111 loops=1)
Q18,67770.0,->  Hash  (cost=2796136.59..2796136.59 rows=7522476 width=39) (actual time=54679.864..54679.864 rows=111 loops=1)
Q18,42914.1,->  Sort  (cost=10172565.53..10247772.64 rows=30082845 width=39) (actual time=73416.549..73416.594 rows=701 loops=1)
Q21,39667.0,->  Nested Loop Anti Join  (cost=2406.88..2866082.54 rows=1 width=26) (actual time=47.600..40975.639 rows=39667 loops=1)
Q18,38716.6,->  Hash Join  (cost=2890167.54..5613329.02 rows=30082845 width=39) (actual time=54845.427..73415.485 rows=777 loops=1)
Q18,36493.4,->  Hash  (cost=2062232.86..2062232.86 rows=4050778 width=4) (actual time=47853.476..47853.476 rows=111 loops=1)
Q18,36493.4,->  HashAggregate  (cost=1971090.35..2021725.08 rows=4050778 width=8) (actual time=40280.751..47853.238 rows=111 loops=1)
Q10,29101.7,->  Sort  (cost=2295102.34..2296557.43 rows=582035 width=176) (actual time=31541.611..31541.613 rows=20 loops=1)
Q9,28960.4,->  Sort  (cost=1057079.30..1057079.58 rows=113 width=46) (actual time=90012.936..90564.405 rows=3272533 loops=1)
Q9,28960.4,->  Nested Loop  (cost=66699.44..1057071.77 rows=113 width=24) (actual time=945.804..80994.506 rows=3272533 loops=1)
Q9,28960.4,->  Nested Loop  (cost=66699.01..1057017.00 rows=113 width=24) (actual time=945.761..52272.219 rows=3272533 loops=1)
Q9,28960.4,->  Nested Loop  (cost=66698.71..1056980.54 rows=113 width=28) (actual time=945.750..41573.958 rows=3272533 loops=1)
Q9,28960.4,->  Hash Join  (cost=66701.00..1057075.45 rows=113 width=46) (actual time=945.859..84240.875 rows=3272533 loops=1)
Q2,4717.0,->  Merge Join  (cost=465676.21..878992.36 rows=1 width=190) (actual time=7661.217..9636.403 rows=4717 loops=1)
Q21,4044.0,->  HashAggregate  (cost=2866082.54..2866082.55 rows=1 width=26) (actual time=41032.429..41033.641 rows=4044 loops=1)
Q15,3768.0,->  Subquery Scan on revenue10  (cost=1620657.74..1620742.52 rows=3768 width=12) (actual time=53803.808..53810.206 rows=1 loops=1)
Q15,3768.0,->  Sort  (cost=1620966.34..1620975.76 rows=3768 width=12) (actual time=53810.226..53810.227 rows=1 loops=1)
Q15,3768.0,Merge Join  (cost=3224751.84..3229849.56 rows=3768 width=79) (actual time=53825.856..53825.859 rows=1 loops=1)
Q15,3768.0,->  HashAggregate  (cost=1620657.74..1620704.84 rows=3768 width=12) (actual time=53803.808..53810.205 rows=1 loops=1)
Q7,769.0,Sort  (cost=2141510.96..2141518.65 rows=3076 width=64) (actual time=24511.135..24511.135 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2141286.61..2141332.75 rows=3076 width=64) (actual time=24511.062..24511.071 rows=4 loops=1)
Q8,364.5,Sort  (cost=1769964.42..1769966.24 rows=729 width=38) (actual time=11995.961..11995.961 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1769917.00..1769929.76 rows=729 width=38) (actual time=11995.917..11995.917 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2866082.56..2866082.57 rows=1 width=26) (actual time=41034.842..41034.850 rows=100 loops=1)
Q21,100.0,Limit  (cost=2866082.56..2866082.57 rows=1 width=26) (actual time=41034.844..41034.860 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=878992.37..878992.38 rows=1 width=190) (actual time=9641.340..9641.351 rows=100 loops=1)
Q2,100.0,Limit  (cost=878992.37..878992.38 rows=1 width=190) (actual time=9641.341..9641.364 rows=100 loops=1)
Q11,34.8,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=7445.845..7446.939 rows=9181 loops=1)
Q11,34.8,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=7345.289..7440.803 rows=9181 loops=1)
Q3,28.2,->  HashAggregate  (cost=2465528.86..2497482.93 rows=3195407 width=20) (actual time=36027.027..36068.532 rows=113052 loops=1)
Q15,26.5,->  HashAggregate  (cost=1603700.42..1603738.10 rows=3768 width=12) (actual time=26368.151..26400.750 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=741476)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7846.81 rows=769881 width=0) (actual time=120.208..120.208 rows=10771200 loops=1)
Q3,10.7,->  Hash Join  (cost=771192.97..2417597.76 rows=3195407 width=20) (actual time=8380.646..35754.463 rows=298404 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2428.06 rows=322140 width=0) (actual time=35.639..35.639 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.081 rows=8 loops=435892)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.595..3.595 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.590..3.590 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.249..0.249 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.271..0.271 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1199031)
Q5,5.0,Sort  (cost=1930643.05..1930643.11 rows=25 width=34) (actual time=17745.554..17745.554 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1930642.22..1930642.47 rows=25 width=34) (actual time=17745.502..17745.503 rows=5 loops=1)
Q4,5.0,Sort  (cost=1496400.06..1496400.06 rows=1 width=16) (actual time=13166.011..13166.011 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=568012)
Q4,5.0,->  HashAggregate  (cost=1496400.04..1496400.05 rows=1 width=16) (actual time=13165.964..13165.966 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=714562)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5861.81 rows=582181 width=0) (actual time=27.611..27.611 rows=2566400 loops=1)
Q13,4.4,Sort  (cost=849448.45..849448.95 rows=200 width=8) (actual time=25554.923..25554.925 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=849438.81..849440.81 rows=200 width=8) (actual time=25554.839..25554.848 rows=45 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5913.90 rows=587390 width=0) (actual time=27.472..27.472 rows=2558720 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.014..0.015 rows=4 loops=456102)
Q17,3.7,->  Nested Loop  (cost=83.05..115989.93 rows=20447 width=4) (actual time=1.653..210.079 rows=5393 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=6007.92..1495624.03 rows=155202 width=16) (actual time=27.828..12868.974 rows=521033 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.016..0.039 rows=3 loops=2017)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..247159.09 rows=32934813 width=0) (actual time=122.397..122.397 rows=10792960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.292..0.362 rows=3 loops=21730)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55116.65 rows=7343553 width=0) (actual time=27.900..27.900 rows=2566400 loops=1)
Q15,2.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.019..11.549 rows=40980 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44876.63 rows=5978217 width=0) (actual time=27.480..27.480 rows=2566400 loops=1)
Q22,2.3,Sort  (cost=695874.74..695874.74 rows=3 width=20) (actual time=9505.023..9505.023 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642973.91..642973.96 rows=3 width=20) (actual time=9504.973..9504.974 rows=7 loops=1)
Q20,2.2,->  Nested Loop  (cost=677.99..10613876.44 rows=26424 width=4) (actual time=13.734..8186.787 rows=59125 loops=1)
Q20,2.2,->  Hash  (cost=10613876.44..10613876.44 rows=26424 width=4) (actual time=8223.436..8223.436 rows=59125 loops=1)
Q15,2.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..171092.80 rows=22792641 width=0) (actual time=119.195..119.195 rows=10676480 loops=1)
Q15,2.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..171092.80 rows=22792641 width=0) (actual time=118.500..118.500 rows=10686720 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.038..0.054 rows=2 loops=6416)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.183..4.183 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403495.90..404976.47 rows=592226 width=40) (actual time=10267.827..10418.314 rows=1184685 loops=1)
Q16,2.0,->  Hash Join  (cost=54833.64..346713.90 rows=592226 width=40) (actual time=1309.415..6749.357 rows=1184685 loops=1)
Q12,2.0,Sort  (cost=3034912.34..3034912.34 rows=1 width=27) (actual time=34091.400..34091.401 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3034912.32..3034912.33 rows=1 width=27) (actual time=34091.344..34091.345 rows=2 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1917643.13 rows=805668 width=34) (actual time=46.027..25910.229 rows=1534950 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.634..3860.592 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=347044.53..2259243.38 rows=582035 width=176) (actual time=7589.688..29187.811 rows=1150166 loops=1)
Q10,1.9,->  Hash Join  (cost=347042.97..2251238.83 rows=582035 width=154) (actual time=7589.658..28790.014 rows=1150166 loops=1)
Q10,1.9,->  Hash Join  (cost=278014.97..2173480.31 rows=582035 width=12) (actual time=6249.432..26615.655 rows=1150166 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1831525.85 rows=20174743 width=8) (actual time=0.014..19126.612 rows=37927367 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2341802.02 rows=392342 width=38) (actual time=46.069..33386.982 rows=741476 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.039..0.592 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616640.05..10616642.69 rows=1057 width=51) (actual time=8256.558..8256.656 rows=1746 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10614249.74..10616586.96 rows=1057 width=51) (actual time=8223.882..8255.059 rows=1746 loops=1)
Q9,1.5,GroupAggregate  (cost=1057079.30..1057083.26 rows=113 width=46) (actual time=90022.707..92725.447 rows=175 loops=1)
Q1,1.5,Sort  (cost=4215565.96..4215565.97 rows=6 width=20) (actual time=90080.332..90080.333 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4215565.77..4215565.88 rows=6 width=20) (actual time=90080.281..90080.282 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2273794.25..2279614.60 rows=582035 width=176) (actual time=31160.091..31403.484 rows=381798 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.156..4.156 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.79 rows=139982 width=0) (actual time=761.038..761.038 rows=190944 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.79..41862.32 rows=139982 width=24) (actual time=769.758..1218.890 rows=190944 loops=1)
Q20,1.2,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.55 rows=18000 width=0) (actual time=9.312..9.312 rows=21730 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=94092 width=4) (actual time=0.010..905.481 rows=108973 loops=1)
Q9,1.1,->  Hash Join  (cost=66698.15..351381.92 rows=372577 width=16) (actual time=945.725..5391.549 rows=435892 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=94092 width=4) (actual time=945.206..945.206 rows=108973 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91968.22 rows=9182022 width=0) (actual time=119.188..119.188 rows=10664960 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.702..1917.784 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=427.47..1721768.46 rows=125825 width=20) (actual time=6.986..9694.849 rows=120187 loops=1)
Q8,1.0,->  Nested Loop  (cost=427.04..1518349.26 rows=415424 width=16) (actual time=6.935..4642.337 rows=395503 loops=1)
Q8,1.0,->  Nested Loop  (cost=38757.91..1768941.88 rows=25124 width=16) (actual time=2014.453..11916.948 rows=24334 loops=1)
Q8,1.0,->  Hash Join  (cost=38759.48..1769414.52 rows=25124 width=38) (actual time=2014.504..11956.218 rows=24334 loops=1)
Q8,1.0,->  Hash Join  (cost=38757.62..1760822.10 rows=25165 width=16) (actual time=2014.429..11773.683 rows=24334 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2005.348..2005.348 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.98 rows=13673 width=0) (actual time=4.636..4.636 rows=13184 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=13184)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=422.39..28532.74 rows=13673 width=4) (actual time=6.856..166.652 rows=13184 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.044..0.325 rows=30 loops=13184)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.626..374.376 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=8) (actual time=0.007..3023.080 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2128451.30 rows=1472872 width=42) (actual time=890.717..23682.532 rows=1457825 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2140368.69 rows=61195 width=64) (actual time=940.413..24418.709 rows=58504 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533895.27 rows=1209599 width=30) (actual time=890.604..9786.924 rows=1199031 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.035..844.050 rows=119868 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.036..46.193 rows=7998 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=890.099..890.099 rows=119868 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=48.489..48.489 rows=7998 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92167.85..1365236.34 rows=798497 width=8) (actual time=119.945..29436.004 rows=794958 loops=1)
Q5,1.0,->  Nested Loop  (cost=83796.63..1910622.71 rows=1848543 width=46) (actual time=2305.433..16919.682 rows=1824813 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.721..2166.104 rows=299838 loops=1)
Q5,1.0,->  Hash Join  (cost=88475.63..1929904.00 rows=73822 width=34) (actual time=2369.503..17659.059 rows=72758 loops=1)
Q5,1.0,->  Hash Join  (cost=83796.06..443318.80 rows=462243 width=38) (actual time=2305.413..9197.360 rows=456102 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2275.788..2275.788 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45454.43..391687.69 rows=2311213 width=8) (actual time=27.637..5998.094 rows=2281952 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.622..422.958 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=6007.36..271300.07 rows=582181 width=20) (actual time=27.777..4893.375 rows=568012 loops=1)
Q3,1.0,->  Hash Join  (cost=106736.97..497372.14 rows=1474243 width=12) (actual time=432.501..7773.952 rows=1446689 loops=1)
Q3,1.0,->  Hash  (cost=497372.14..497372.14 rows=1474243 width=12) (actual time=8250.998..8250.998 rows=1446689 loops=1)
Q3,1.0,->  Hash  (cost=46020.31..46020.31 rows=301130 width=4) (actual time=402.473..402.473 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6902.90 rows=301130 width=0) (actual time=67.314..67.314 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56952.54..405306.95 rows=7343553 width=16) (actual time=28.060..4926.221 rows=7252564 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=255392.80..1746337.96 rows=32934813 width=12) (actual time=123.156..22182.995 rows=32482369 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6978.19..46020.31 rows=301130 width=4) (actual time=76.200..325.251 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.032..4128.338 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=8078.871..8078.871 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598994.73..642531.95 rows=58929 width=20) (actual time=8894.216..9477.141 rows=63599 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6550.51 rows=381801 width=0) (actual time=95.768..95.768 rows=382156 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6645.96..51946.24 rows=381801 width=4) (actual time=105.051..631.622 rows=382156 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.304..44.680 rows=4044 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=45.963..45.963 rows=4044 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.290..43.953 rows=4044 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=7660.349..7789.945 rows=1604060 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.354..147.749 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7828 width=30) (actual time=0.085..1155.671 rows=7961 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=159.423..6476.750 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=159.281..159.281 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.261..28.709 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.295..29.773 rows=3945 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.279..29.149 rows=3945 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.56..33178.47 rows=20020 width=4) (actual time=13.034..282.723 rows=21730 loops=1)
Q19,1.0,->  Nested Loop  (cost=12873.42..607547.32 rows=1136 width=8) (actual time=33.403..1719.377 rows=1077 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.172..4.172 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.87 rows=8016 width=0) (actual time=3.714..3.714 rows=7987 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.67 rows=7995 width=0) (actual time=3.825..3.825 rows=8160 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..271.19 rows=7747 width=0) (actual time=3.481..3.481 rows=8011 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12872.86..26466.84 rows=4713 width=30) (actual time=33.099..282.558 rows=4856 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.006..2503.156 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670261.90 rows=60165690 width=8) (actual time=0.005..8877.794 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670261.90 rows=60165690 width=8) (actual time=0.037..7871.488 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.040 rows=30 loops=2017)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.040 rows=30 loops=2017)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.78 rows=2035 width=0) (actual time=0.910..0.910 rows=2017 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.29..6728.81 rows=2035 width=4) (actual time=1.251..34.563 rows=2017 loops=1)
Q16,1.0,Sort  (cost=413250.98..413321.09 rows=28044 width=40) (actual time=11067.191..11070.355 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51078.34..51078.34 rows=299126 width=40) (actual time=1306.141..1306.141 rows=296337 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403495.90..411179.17 rows=28044 width=40) (actual time=10267.875..11007.868 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2502.84..51078.34 rows=299126 width=40) (actual time=35.707..1176.704 rows=296337 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=171658.05..1581090.66 rows=2260976 width=12) (actual time=119.266..24151.067 rows=2246239 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=171658.05..1581090.66 rows=2260976 width=12) (actual time=119.961..25171.326 rows=2246239 loops=1)
Q14,1.0,->  Hash Join  (cost=93561.28..1150651.52 rows=769881 width=29) (actual time=1350.513..22830.232 rows=772832 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8039.28..1053581.30 rows=769881 width=12) (actual time=121.028..20863.532 rows=772832 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=14908781 width=8) (actual time=0.018..6927.117 rows=14852888 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..737394.90 rows=14908781 width=8) (actual time=801.132..16439.875 rows=15352907 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=20) (actual time=0.010..4539.898 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2427165.88 rows=287728 width=15) (actual time=0.217..24008.657 rows=310988 loops=1)
Q12,1.0,->  Hash Join  (cost=593719.70..3029877.08 rows=287728 width=27) (actual time=9423.038..33762.980 rows=310988 loops=1)
Q12,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=20) (actual time=9346.209..9346.209 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.293..25.925 rows=4023 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.280..39.718 rows=4023 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=26.873..2969.860 rows=321840 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=40.850..4028.759 rows=321840 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=40.796..40.796 rows=4023 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.793..26.793 rows=4023 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.260..25.239 rows=4023 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.262..39.074 rows=4023 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1826111.21 rows=59736364 width=20) (actual time=0.013..18805.931 rows=59442029 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1833350.60 rows=15011836 width=12) (actual time=0.041..16915.803 rows=14808082 loops=1)
Q10,1.0,->  Hash  (cost=270672.60..270672.60 rows=587390 width=8) (actual time=6244.537..6244.537 rows=574321 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6060.75..270672.60 rows=587390 width=8) (actual time=27.655..6025.540 rows=574321 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=395503)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1534950)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.28 rows=1 width=16) (actual time=0.268..0.294 rows=0 loops=4856)
Q19,,->  BitmapOr  (cost=12872.86..12872.86 rows=4716 width=0) (actual time=29.320..29.320 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6268.87..6268.87 rows=2317 width=0) (actual time=8.309..8.309 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4297.75..4297.75 rows=1596 width=0) (actual time=8.696..8.696 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2305.75..2305.75 rows=802 width=0) (actual time=8.554..8.554 rows=0 loops=1)
