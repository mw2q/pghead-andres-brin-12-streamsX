Q21,704321.0,->  Nested Loop Semi Join  (cost=2406.31..2877568.16 rows=1 width=34) (actual time=46.586..38134.782 rows=704321 loops=1)
Q3,319428.0,->  Sort  (cost=2570139.70..2578125.40 rows=3194280 width=20) (actual time=33107.832..33107.834 rows=10 loops=1)
Q18,302922.6,->  GroupAggregate  (cost=10243159.14..11076196.40 rows=30292264 width=39) (actual time=71762.057..71762.394 rows=100 loops=1)
Q18,67633.7,->  Hash Join  (cost=2195617.15..2813862.57 rows=7574980 width=39) (actual time=45456.313..52376.432 rows=112 loops=1)
Q18,67633.7,->  Hash Join  (cost=2126589.15..2631209.87 rows=7574980 width=20) (actual time=44243.408..51163.193 rows=112 loops=1)
Q18,67633.7,->  Hash  (cost=2813862.57..2813862.57 rows=7574980 width=39) (actual time=52376.649..52376.649 rows=112 loops=1)
Q18,43212.9,->  Sort  (cost=10243159.14..10318889.80 rows=30292264 width=39) (actual time=71762.047..71762.091 rows=701 loops=1)
Q21,39536.0,->  Nested Loop Anti Join  (cost=2406.88..2877569.94 rows=1 width=26) (actual time=46.608..40960.868 rows=39536 loops=1)
Q18,38638.0,->  Hash Join  (cost=2908549.82..5650668.36 rows=30292264 width=39) (actual time=52841.880..71761.035 rows=784 loops=1)
Q18,36167.6,->  Hash  (cost=2075954.43..2075954.43 rows=4050778 width=4) (actual time=44118.603..44118.603 rows=112 loops=1)
Q18,36167.6,->  HashAggregate  (cost=1984811.92..2035446.65 rows=4050778 width=8) (actual time=38495.066..44118.373 rows=112 loops=1)
Q10,28530.0,->  Sort  (cost=2278682.07..2280108.57 rows=570600 width=176) (actual time=30160.851..30160.853 rows=20 loops=1)
Q9,23080.6,->  Sort  (cost=1236518.84..1236519.19 rows=141 width=46) (actual time=97051.974..97688.216 rows=3254378 loops=1)
Q9,23080.6,->  Nested Loop  (cost=66999.74..1236509.60 rows=141 width=24) (actual time=1071.273..87843.388 rows=3254378 loops=1)
Q9,23080.6,->  Nested Loop  (cost=66999.31..1236441.27 rows=141 width=24) (actual time=1071.211..54371.265 rows=3254378 loops=1)
Q9,23080.6,->  Nested Loop  (cost=66999.01..1236395.77 rows=141 width=28) (actual time=1071.200..43850.877 rows=3254378 loops=1)
Q9,23080.6,->  Hash Join  (cost=67001.30..1236513.81 rows=141 width=46) (actual time=1071.330..91156.044 rows=3254378 loops=1)
Q2,4575.0,->  Merge Join  (cost=465676.21..882754.09 rows=1 width=190) (actual time=5079.443..7001.644 rows=4575 loops=1)
Q21,3995.0,->  HashAggregate  (cost=2877569.95..2877569.96 rows=1 width=26) (actual time=41014.116..41015.404 rows=3995 loops=1)
Q15,3803.0,->  Subquery Scan on revenue2  (cost=1868878.41..1868963.98 rows=3803 width=12) (actual time=48894.669..48918.405 rows=1 loops=1)
Q15,3803.0,->  Sort  (cost=1869190.12..1869199.63 rows=3803 width=12) (actual time=48918.423..48918.423 rows=1 loops=1)
Q15,3803.0,Merge Join  (cost=3720970.88..3726069.12 rows=3803 width=79) (actual time=48952.221..48952.224 rows=1 loops=1)
Q15,3803.0,->  HashAggregate  (cost=1868878.41..1868925.95 rows=3803 width=12) (actual time=48894.668..48918.403 rows=1 loops=1)
Q7,769.0,Sort  (cost=2143613.24..2143620.93 rows=3076 width=64) (actual time=21647.320..21647.321 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2143388.90..2143435.04 rows=3076 width=64) (actual time=21647.255..21647.262 rows=4 loops=1)
Q8,364.5,Sort  (cost=1727806.34..1727808.16 rows=729 width=38) (actual time=11176.579..11176.579 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1727758.92..1727771.68 rows=729 width=38) (actual time=11176.539..11176.541 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2877569.97..2877569.97 rows=1 width=26) (actual time=41016.560..41016.566 rows=100 loops=1)
Q21,100.0,Limit  (cost=2877569.97..2877569.97 rows=1 width=26) (actual time=41016.561..41016.579 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=882754.10..882754.11 rows=1 width=190) (actual time=7006.304..7006.316 rows=100 loops=1)
Q2,100.0,Limit  (cost=882754.10..882754.11 rows=1 width=190) (actual time=7006.306..7006.329 rows=100 loops=1)
Q11,32.1,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=8785.114..8786.286 rows=9964 loops=1)
Q11,32.1,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=8699.648..8779.517 rows=9964 loops=1)
Q3,28.0,->  HashAggregate  (cost=2469169.66..2501112.46 rows=3194280 width=20) (actual time=33033.909..33086.701 rows=113722 loops=1)
Q15,26.2,->  HashAggregate  (cost=1851694.88..1851732.91 rows=3803 width=12) (actual time=23390.285..23425.502 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=731031)
Q14,14.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7582.73 rows=743473 width=0) (actual time=118.813..118.813 rows=10676480 loops=1)
Q3,10.6,->  Hash Join  (cost=771487.02..2421255.46 rows=3194280 width=20) (actual time=10242.833..32786.133 rows=300105 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2405.11 rows=319080 width=0) (actual time=34.676..34.676 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.017..0.086 rows=8 loops=433864)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.751..3.751 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.938..3.938 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.255..0.255 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.260..0.260 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.257..0.257 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.256..0.256 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.009..0.010 rows=1 loops=1206038)
Q5,5.0,Sort  (cost=2013228.83..2013228.90 rows=25 width=34) (actual time=16102.153..16102.153 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2013228.00..2013228.25 rows=25 width=34) (actual time=16102.110..16102.111 rows=5 loops=1)
Q4,5.0,Sort  (cost=1483740.34..1483740.35 rows=1 width=16) (actual time=13326.631..13326.631 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.18 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=562175)
Q4,5.0,->  HashAggregate  (cost=1483740.32..1483740.33 rows=1 width=16) (actual time=13326.581..13326.582 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=704321)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5735.93 rows=569593 width=0) (actual time=27.688..27.688 rows=2566400 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5798.40 rows=575840 width=0) (actual time=27.331..27.331 rows=2540800 loops=1)
Q13,4.3,Sort  (cost=852463.69..852464.19 rows=200 width=8) (actual time=27213.656..27213.658 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=852454.05..852456.05 rows=200 width=8) (actual time=27213.589..27213.594 rows=46 loops=1)
Q17,3.9,->  Nested Loop  (cost=83.11..116321.63 rows=20446 width=4) (actual time=1.643..213.548 rows=5185 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.014..0.015 rows=4 loops=453493)
Q4,3.3,->  Nested Loop Semi Join  (cost=5878.89..1482981.09 rows=151847 width=16) (actual time=27.910..13034.903 rows=515509 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.017..0.041 rows=3 loops=1959)
Q15,3.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..252237.25 rows=33611899 width=0) (actual time=120.728..120.728 rows=10718720 loops=1)
Q15,3.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..252237.25 rows=33611899 width=0) (actual time=119.153..119.153 rows=10728960 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..248716.75 rows=33142501 width=0) (actual time=119.839..119.839 rows=10792960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.317..0.388 rows=3 loops=21770)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54776.77 rows=7298235 width=0) (actual time=27.509..27.509 rows=2566400 loops=1)
Q22,2.3,Sort  (cost=695270.57..695270.58 rows=3 width=20) (actual time=9053.492..9053.493 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642377.90..642377.94 rows=3 width=20) (actual time=9053.448..9053.448 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.039..0.055 rows=2 loops=6161)
Q20,2.0,->  Nested Loop  (cost=754.51..11669237.68 rows=29067 width=4) (actual time=13.717..8742.934 rows=59309 loops=1)
Q20,2.0,->  Hash  (cost=11669237.68..11669237.68 rows=29067 width=4) (actual time=8778.586..8778.586 rows=59309 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.179..4.179 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402681.03..404146.63 rows=586239 width=40) (actual time=10421.922..10566.137 rows=1188359 loops=1)
Q16,2.0,->  Hash Join  (cost=54695.64..346516.03 rows=586239 width=40) (actual time=1299.814..6866.363 rows=1188359 loops=1)
Q12,2.0,Sort  (cost=3044144.40..3044144.40 rows=1 width=27) (actual time=32844.326..32844.327 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3044144.38..3044144.39 rows=1 width=27) (actual time=32844.279..32844.280 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344835.52..2243527.61 rows=570600 width=176) (actual time=7263.623..27904.940 rows=1146551 loops=1)
Q10,2.0,->  Hash Join  (cost=344833.96..2235680.29 rows=570600 width=154) (actual time=7263.591..27509.849 rows=1146551 loops=1)
Q10,2.0,->  Hash Join  (cost=275805.96..2158093.29 rows=570600 width=12) (actual time=5894.932..25435.749 rows=1146551 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.510..4045.756 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1838829.99 rows=20255200 width=8) (actual time=0.013..19016.431 rows=37928434 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2351156.45 rows=393906 width=38) (actual time=46.527..33762.760 rows=731031 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1925281.11 rows=808881 width=34) (actual time=46.394..25769.138 rows=1514854 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.469 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672043.35..11672046.26 rows=1163 width=51) (actual time=8810.681..8810.786 rows=1822 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669644.02..11671984.13 rows=1163 width=51) (actual time=8779.031..8809.919 rows=1822 loops=1)
Q1,1.5,Sort  (cost=4242678.90..4242678.91 rows=6 width=20) (actual time=90872.673..90872.673 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4242678.71..4242678.82 rows=6 width=20) (actual time=90872.623..90872.625 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.168..4.168 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2257792.61..2263498.61 rows=570600 width=176) (actual time=29811.526..30023.127 rows=381504 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.02 rows=139900 width=0) (actual time=555.785..555.785 rows=190747 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.00..41859.37 rows=139900 width=24) (actual time=564.374..1038.566 rows=190747 loops=1)
Q9,1.2,GroupAggregate  (cost=1236518.84..1236523.78 rows=141 width=46) (actual time=97061.970..99867.804 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..90933.25 rows=9078525 width=0) (actual time=118.903..118.903 rows=10664960 loops=1)
Q15,1.1,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.026..25.543 rows=83967 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=118116 width=4) (actual time=0.015..1027.947 rows=108466 loops=1)
Q9,1.0,->  Hash Join  (cost=66998.45..352633.50 rows=467705 width=16) (actual time=1071.103..5367.165 rows=433864 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=118116 width=4) (actual time=1070.576..1070.576 rows=108466 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.761..2210.811 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=412.56..1679929.86 rows=121730 width=20) (actual time=7.338..8565.551 rows=120618 loops=1)
Q8,1.0,->  Nested Loop  (cost=412.12..1483137.36 rows=401904 width=16) (actual time=7.153..4415.474 rows=397084 loops=1)
Q8,1.0,->  Nested Loop  (cost=38743.00..1726815.50 rows=24306 width=16) (actual time=2322.699..11097.146 rows=24311 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.03 rows=31 width=20) (actual time=0.025..0.311 rows=30 loops=13225)
Q8,1.0,->  Hash Join  (cost=38744.56..1727272.80 rows=24306 width=38) (actual time=2322.744..11135.732 rows=24311 loops=1)
Q8,1.0,->  Hash Join  (cost=38742.70..1718959.96 rows=24346 width=16) (actual time=2322.685..10953.986 rows=24311 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2312.706..2312.706 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.23 rows=13307 width=0) (actual time=4.832..4.832 rows=13225 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.56..28088.03 rows=13307 width=4) (actual time=7.092..175.202 rows=13225 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.787..431.612 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.007..2672.025 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2130544.63 rows=1474323 width=42) (actual time=620.307..20901.224 rows=1464443 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2142470.07 rows=61255 width=64) (actual time=670.262..21553.633 rows=58408 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534366.29 rows=1210798 width=30) (actual time=620.284..8385.553 rows=1206038 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.054..580.871 rows=120389 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.041..46.559 rows=8023 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=619.752..619.752 rows=120389 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=48.838..48.838 rows=8023 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91027.32..1361767.13 rows=376252 width=8) (actual time=119.747..29566.771 rows=380196 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..482094.86 rows=2300416 width=8) (actual time=0.014..4541.121 rows=2278283 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=4.061..2018.011 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1993280.50 rows=1839867 width=46) (actual time=2132.878..15290.324 rows=1812683 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2012493.25 rows=73475 width=34) (actual time=2199.448..16016.766 rows=72956 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..533663.89 rows=460083 width=38) (actual time=2132.858..7624.802 rows=453493 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2130.439..2130.439 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.973..393.858 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5878.33..270982.22 rows=569593 width=20) (actual time=27.860..5768.088 rows=562175 loops=1)
Q3,1.0,->  Hash Join  (cost=106377.34..496178.54 rows=1464488 width=12) (actual time=725.707..9519.555 rows=1440263 loops=1)
Q3,1.0,->  Hash  (cost=496178.54..496178.54 rows=1464488 width=12) (actual time=10112.185..10112.185 rows=1440263 loops=1)
Q3,1.0,->  Hash  (cost=46013.58..46013.58 rows=300995 width=4) (actual time=695.630..695.630 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6897.89 rows=300995 width=0) (actual time=67.193..67.193 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56601.32..404389.26 rows=7298235 width=16) (actual time=27.669..5958.461 rows=7202147 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=257002.38..1750543.64 rows=33142501 width=12) (actual time=120.596..16832.100 rows=32682105 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6973.14..46013.58 rows=300995 width=4) (actual time=76.103..602.488 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=4) (actual time=0.010..3896.553 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=4) (actual time=7820.348..7820.348 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598403.80..641936.19 rows=58894 width=20) (actual time=8430.245..9025.550 rows=63457 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6548.83 rows=381578 width=0) (actual time=85.765..85.765 rows=381673 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6644.23..51938.65 rows=381578 width=4) (actual time=94.417..429.052 rows=381673 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.285..44.685 rows=3995 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=46.220..46.220 rows=3995 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.274..43.926 rows=3995 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=5078.982..5197.899 rows=1586830 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.294..147.858 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7925 width=30) (actual time=0.217..1146.077 rows=7844 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=159.146..4027.061 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=159.007..159.007 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.252..28.703 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.297..29.296 rows=4009 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.57 rows=20002 width=0) (actual time=9.377..9.377 rows=21770 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.281..28.724 rows=4009 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.08..34892.73 rows=22022 width=4) (actual time=13.122..268.911 rows=21770 loops=1)
Q19,1.0,->  Nested Loop  (cost=12896.30..613523.57 rows=1136 width=8) (actual time=33.742..1626.088 rows=1141 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.170..4.170 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.35 rows=8062 width=0) (actual time=3.650..3.650 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.91 rows=8019 width=0) (actual time=3.744..3.744 rows=7903 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.07 rows=7937 width=0) (actual time=3.480..3.480 rows=8154 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.027..0.027 rows=30 loops=4925)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12891.56..26648.70 rows=4783 width=30) (actual time=33.340..292.526 rows=4925 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=16) (actual time=0.005..3410.042 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1681889.28 rows=60584528 width=8) (actual time=0.005..8993.237 rows=60044176 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1681889.28 rows=60584528 width=8) (actual time=0.036..9485.849 rows=60044176 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.026..0.041 rows=30 loops=1959)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.026..0.041 rows=30 loops=1959)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.84 rows=2041 width=0) (actual time=0.941..0.941 rows=1959 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.35..6743.98 rows=2041 width=4) (actual time=1.278..35.989 rows=1959 loops=1)
Q16,1.0,Sort  (cost=412335.41..412404.81 rows=27760 width=40) (actual time=11215.143..11218.069 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50978.13..50978.13 rows=296102 width=40) (actual time=1297.369..1297.369 rows=297249 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402681.03..410286.62 rows=27760 width=40) (actual time=10421.986..11155.967 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2479.13..50978.13 rows=296102 width=40) (actual time=34.729..1174.410 rows=297249 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=252810.03..1828783.51 rows=2291137 width=12) (actual time=119.924..21297.823 rows=2249966 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=252810.03..1828783.51 rows=2291137 width=12) (actual time=121.503..23302.219 rows=2249966 loops=1)
Q14,1.0,->  Hash Join  (cost=93290.59..1132378.57 rows=743473 width=29) (actual time=1633.189..26670.451 rows=748601 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7768.59..1035704.47 rows=743473 width=12) (actual time=119.641..24322.912 rows=748601 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=15059543 width=8) (actual time=0.017..6787.635 rows=14838250 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..739656.33 rows=15059543 width=8) (actual time=1182.411..17081.065 rows=15338266 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=20) (actual time=0.014..4158.110 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2434369.83 rows=292918 width=15) (actual time=0.076..23612.938 rows=312350 loops=1)
Q12,1.0,->  Hash Join  (cost=595494.80..3039018.31 rows=292918 width=27) (actual time=8587.937..32517.988 rows=312350 loops=1)
Q12,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=20) (actual time=8542.159..8542.159 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.316..39.881 rows=3961 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.311..25.292 rows=3961 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=26.221..4297.215 rows=316880 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=40.988..4044.581 rows=316880 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=40.924..40.924 rows=3961 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.161..26.161 rows=3961 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.284..24.640 rows=3961 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.297..39.240 rows=3961 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1837000.11 rows=60141965 width=20) (actual time=0.014..19372.369 rows=59487939 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1820676.12 rows=14908055 width=12) (actual time=0.011..16327.696 rows=14823192 loops=1)
Q10,1.0,->  Hash  (cost=268607.96..268607.96 rows=575840 width=8) (actual time=5890.413..5890.413 rows=573742 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5942.36..268607.96 rows=575840 width=8) (actual time=27.506..5661.450 rows=573742 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=397084)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1514854)
Q19,,->  BitmapOr  (cost=12891.56..12891.56 rows=4787 width=0) (actual time=29.364..29.364 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.243..0.265 rows=0 loops=4925)
Q19,,->  BitmapAnd  (cost=6286.78..6286.78 rows=2374 width=0) (actual time=8.357..8.357 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4298.46..4298.46 rows=1610 width=0) (actual time=8.552..8.552 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2305.82..2305.82 rows=802 width=0) (actual time=8.650..8.650 rows=0 loops=1)
