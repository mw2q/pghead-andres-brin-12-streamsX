Q21,696735.0,->  Nested Loop Semi Join  (cost=2406.31..2877568.16 rows=1 width=34) (actual time=42.143..38679.494 rows=696735 loops=1)
Q3,317618.8,->  Sort  (cost=2559241.57..2567182.04 rows=3176188 width=20) (actual time=33176.680..33176.681 rows=10 loops=1)
Q18,303828.0,->  GroupAggregate  (cost=10273660.60..11109187.60 rows=30382800 width=39) (actual time=69726.827..69727.156 rows=100 loops=1)
Q18,75222.3,->  Hash Join  (cost=2201549.22..2821508.86 rows=7597456 width=39) (actual time=44883.489..50530.321 rows=101 loops=1)
Q18,75222.3,->  Hash Join  (cost=2132521.22..2638519.02 rows=7597456 width=20) (actual time=43959.366..49605.831 rows=101 loops=1)
Q18,75222.3,->  Hash  (cost=2821508.86..2821508.86 rows=7597456 width=39) (actual time=50530.571..50530.571 rows=101 loops=1)
Q18,43342.0,->  Sort  (cost=10273660.60..10349617.60 rows=30382800 width=39) (actual time=69726.818..69726.863 rows=701 loops=1)
Q18,42974.2,->  Hash Join  (cost=2916477.06..5666791.05 rows=30382800 width=39) (actual time=50683.754..69725.783 rows=707 loops=1)
Q18,40106.7,->  Hash  (cost=2081886.49..2081886.49 rows=4050778 width=4) (actual time=43893.178..43893.178 rows=101 loops=1)
Q18,40106.7,->  HashAggregate  (cost=1990743.99..2041378.71 rows=4050778 width=8) (actual time=37809.804..43892.939 rows=101 loops=1)
Q21,38931.0,->  Nested Loop Anti Join  (cost=2406.88..2877569.94 rows=1 width=26) (actual time=43.478..41497.902 rows=38931 loops=1)
Q10,28661.2,->  Sort  (cost=2298149.71..2299582.77 rows=573224 width=176) (actual time=31767.473..31767.477 rows=20 loops=1)
Q9,24336.7,->  Sort  (cost=1191500.23..1191500.56 rows=134 width=46) (actual time=94001.862..94636.502 rows=3261121 loops=1)
Q9,24336.7,->  Nested Loop  (cost=66924.67..1191491.42 rows=134 width=24) (actual time=971.939..84871.763 rows=3261121 loops=1)
Q9,24336.7,->  Nested Loop  (cost=66924.23..1191426.48 rows=134 width=24) (actual time=971.917..51264.741 rows=3261121 loops=1)
Q9,24336.7,->  Nested Loop  (cost=66923.94..1191383.24 rows=134 width=28) (actual time=971.905..40562.205 rows=3261121 loops=1)
Q9,24336.7,->  Hash Join  (cost=66926.23..1191495.49 rows=134 width=46) (actual time=971.999..88151.439 rows=3261121 loops=1)
Q2,4676.0,->  Merge Join  (cost=465676.21..892085.14 rows=1 width=190) (actual time=6255.770..8182.453 rows=4676 loops=1)
Q21,3945.0,->  HashAggregate  (cost=2877569.95..2877569.96 rows=1 width=26) (actual time=41553.044..41554.140 rows=3945 loops=1)
Q15,3767.0,->  Subquery Scan on revenue8  (cost=1673824.96..1673909.72 rows=3767 width=12) (actual time=44816.545..44831.093 rows=1 loops=1)
Q15,3767.0,->  Sort  (cost=1674133.46..1674142.88 rows=3767 width=12) (actual time=44831.113..44831.114 rows=1 loops=1)
Q15,3767.0,Merge Join  (cost=3331074.59..3336172.30 rows=3767 width=79) (actual time=44858.787..44858.789 rows=1 loops=1)
Q15,3767.0,->  HashAggregate  (cost=1673824.96..1673872.05 rows=3767 width=12) (actual time=44816.543..44831.091 rows=1 loops=1)
Q7,769.0,Sort  (cost=2143613.24..2143620.93 rows=3076 width=64) (actual time=22280.943..22280.943 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2143388.90..2143435.04 rows=3076 width=64) (actual time=22280.885..22280.890 rows=4 loops=1)
Q8,364.5,Sort  (cost=1754950.39..1754952.21 rows=729 width=38) (actual time=12515.592..12515.592 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1754902.97..1754915.73 rows=729 width=38) (actual time=12515.553..12515.555 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2877569.97..2877569.97 rows=1 width=26) (actual time=41555.286..41555.292 rows=100 loops=1)
Q21,100.0,Limit  (cost=2877569.97..2877569.97 rows=1 width=26) (actual time=41555.288..41555.304 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=892085.15..892085.15 rows=1 width=190) (actual time=8187.164..8187.183 rows=100 loops=1)
Q2,100.0,Limit  (cost=892085.15..892085.15 rows=1 width=190) (actual time=8187.166..8187.190 rows=100 loops=1)
Q11,32.6,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=8277.250..8278.382 rows=9789 loops=1)
Q11,32.6,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=8185.860..8271.877 rows=9789 loops=1)
Q3,28.0,->  HashAggregate  (cost=2458843.41..2490605.29 rows=3176188 width=20) (actual time=33101.074..33155.658 rows=113400 loops=1)
Q15,26.5,->  HashAggregate  (cost=1656856.07..1656893.74 rows=3767 width=12) (actual time=24223.217..24262.811 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=722872)
Q14,14.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7528.69 rows=738069 width=0) (actual time=119.669..119.669 rows=10739200 loops=1)
Q3,10.6,->  Hash Join  (cost=768997.62..2411200.59 rows=3176188 width=20) (actual time=8776.079..32837.318 rows=299489 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2421.16 rows=321220 width=0) (actual time=34.927..34.927 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.079 rows=8 loops=434508)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.593..3.593 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.302..4.302 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.258..0.258 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.009..0.010 rows=1 loops=1208485)
Q5,5.0,Sort  (cost=1914862.31..1914862.38 rows=25 width=34) (actual time=17342.303..17342.304 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1914861.48..1914861.73 rows=25 width=34) (actual time=17342.261..17342.262 rows=5 loops=1)
Q4,5.0,Sort  (cost=1473347.68..1473347.69 rows=1 width=16) (actual time=13427.884..13427.884 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.23 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=560419)
Q4,5.0,->  HashAggregate  (cost=1473347.66..1473347.67 rows=1 width=16) (actual time=13427.809..13427.809 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=696735)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5657.32 rows=561732 width=0) (actual time=27.707..27.707 rows=2556160 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5824.91 rows=578491 width=0) (actual time=30.568..30.568 rows=2563840 loops=1)
Q13,4.3,Sort  (cost=852390.45..852390.95 rows=200 width=8) (actual time=31651.652..31651.654 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=852380.81..852382.81 rows=200 width=8) (actual time=31651.581..31651.594 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=456802)
Q17,3.7,->  Nested Loop  (cost=83.46..118232.50 rows=20848 width=4) (actual time=1.649..203.724 rows=5585 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5798.32..1472595.94 rows=150344 width=16) (actual time=27.912..13130.347 rows=513826 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.58 rows=10 width=12) (actual time=0.016..0.039 rows=3 loops=2077)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..246792.81 rows=32885975 width=0) (actual time=119.776..119.776 rows=10760960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.381..0.453 rows=3 loops=21692)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54878.41 rows=7311788 width=0) (actual time=27.421..27.421 rows=2558720 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44522.56 rows=5931009 width=0) (actual time=27.482..27.482 rows=2545920 loops=1)
Q22,2.3,Sort  (cost=697629.73..697629.74 rows=3 width=20) (actual time=10004.091..10004.092 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=644737.88..644737.92 rows=3 width=20) (actual time=10004.047..10004.050 rows=7 loops=1)
Q15,2.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..188452.08 rows=25107211 width=0) (actual time=121.967..121.967 rows=10686720 loops=1)
Q15,2.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..188452.08 rows=25107211 width=0) (actual time=118.028..118.028 rows=10696960 loops=1)
Q20,2.2,->  Nested Loop  (cost=678.03..10613880.39 rows=26424 width=4) (actual time=13.822..9991.311 rows=59028 loops=1)
Q20,2.2,->  Hash  (cost=10613880.39..10613880.39 rows=26424 width=4) (actual time=10028.622..10028.622 rows=59028 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.039..0.055 rows=2 loops=6290)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.216..4.216 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403241.66..404717.54 rows=590349 width=40) (actual time=10744.759..10910.113 rows=1186635 loops=1)
Q16,2.0,->  Hash Join  (cost=54791.65..346653.14 rows=590349 width=40) (actual time=1232.897..7082.613 rows=1186635 loops=1)
Q12,2.0,Sort  (cost=3042403.92..3042403.93 rows=1 width=27) (actual time=34120.876..34120.877 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3042403.90..3042403.91 rows=1 width=27) (actual time=34120.823..34120.823 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=347214.60..2262833.59 rows=573224 width=176) (actual time=8135.828..29479.168 rows=1149422 loops=1)
Q10,2.0,->  Hash Join  (cost=347213.04..2254950.20 rows=573224 width=154) (actual time=8135.799..29079.883 rows=1149422 loops=1)
Q10,2.0,->  Hash Join  (cost=278185.04..2177323.84 rows=573224 width=12) (actual time=6599.145..26732.406 rows=1149422 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.578..4194.685 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1838829.99 rows=20255200 width=8) (actual time=0.014..19100.564 rows=37928434 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2351156.45 rows=393906 width=38) (actual time=42.114..33735.093 rows=722872 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1925281.11 rows=808881 width=34) (actual time=41.990..26262.993 rows=1494939 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.039..0.540 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616644.00..10616646.64 rows=1057 width=51) (actual time=10060.057..10060.163 rows=1786 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10614253.69..10616590.91 rows=1057 width=51) (actual time=10029.049..10058.624 rows=1786 loops=1)
Q1,1.5,Sort  (cost=4203858.99..4203859.01 rows=6 width=20) (actual time=89672.071..89672.071 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4203858.81..4203858.92 rows=6 width=20) (actual time=89672.013..89672.014 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.142..4.142 rows=405760 loops=1)
Q15,1.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.028..20.840 rows=69999 loops=1)
Q10,1.4,->  HashAggregate  (cost=2277164.19..2282896.43 rows=573224 width=176) (actual time=31431.912..31630.040 rows=382262 loops=1)
Q9,1.3,GroupAggregate  (cost=1191500.23..1191504.92 rows=134 width=46) (actual time=94011.999..96832.001 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2873.95 rows=139892 width=0) (actual time=479.536..479.536 rows=190196 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2908.93..41859.09 rows=139892 width=24) (actual time=488.228..967.661 rows=190196 loops=1)
Q20,1.2,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.59 rows=18004 width=0) (actual time=9.406..9.406 rows=21692 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92884.64 rows=9273664 width=0) (actual time=120.177..120.177 rows=10771200 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=112110 width=4) (actual time=0.015..925.928 rows=108627 loops=1)
Q9,1.0,->  Hash Join  (cost=66923.38..352320.60 rows=443923 width=16) (actual time=971.849..5262.169 rows=434508 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=112110 width=4) (actual time=971.272..971.272 rows=108627 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.702..1892.045 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.65..1706907.35 rows=123864 width=20) (actual time=7.104..10197.232 rows=123841 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.22..1506668.07 rows=408948 width=16) (actual time=6.960..5731.117 rows=407615 loops=1)
Q8,1.0,->  Nested Loop  (cost=38757.09..1753943.04 rows=24732 width=16) (actual time=1992.484..12429.209 rows=24899 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.66..1754408.33 rows=24732 width=38) (actual time=1992.532..12472.478 rows=24899 loops=1)
Q8,1.0,->  Hash Join  (cost=38756.80..1745949.72 rows=24773 width=16) (actual time=1992.473..12278.270 rows=24899 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1982.676..1982.676 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.18 rows=13567 width=0) (actual time=4.516..4.516 rows=13597 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=13597)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=421.57..28406.89 rows=13567 width=4) (actual time=6.863..178.054 rows=13597 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.042..0.393 rows=30 loops=13597)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.625..369.190 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.006..2644.695 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2130544.63 rows=1474323 width=42) (actual time=628.480..21419.883 rows=1467817 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2142470.07 rows=61255 width=64) (actual time=678.058..22186.424 rows=59167 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534366.29 rows=1210798 width=30) (actual time=628.358..8917.715 rows=1208485 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.055..584.346 rows=120292 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.045..46.517 rows=8069 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=627.841..627.841 rows=120292 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=48.803..48.803 rows=8069 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=93078.52..1378852.96 rows=775527 width=8) (actual time=120.993..23839.311 rows=763628 loops=1)
Q5,1.0,->  Nested Loop  (cost=83438.00..1894963.12 rows=1833945 width=46) (actual time=2494.949..16499.878 rows=1826665 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=4.523..2347.853 rows=300270 loops=1)
Q5,1.0,->  Hash Join  (cost=88117.00..1914129.09 rows=73239 width=34) (actual time=2561.873..17255.898 rows=72846 loops=1)
Q5,1.0,->  Hash Join  (cost=83437.44..440121.10 rows=458592 width=38) (actual time=2494.877..8913.403 rows=456802 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2464.738..2464.738 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45095.80..388594.94 rows=2292962 width=8) (actual time=27.640..5486.825 rows=2283946 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.337..458.712 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5797.75..269771.73 rows=561732 width=20) (actual time=27.879..4926.067 rows=560419 loops=1)
Q3,1.0,->  Hash Join  (cost=106443.51..495693.18 rows=1463211 width=12) (actual time=712.061..8082.759 rows=1448988 loops=1)
Q3,1.0,->  Hash  (cost=495693.18..495693.18 rows=1463211 width=12) (actual time=8645.610..8645.610 rows=1448988 loops=1)
Q3,1.0,->  Hash  (cost=45984.97..45984.97 rows=300175 width=4) (actual time=682.051..682.051 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6879.74 rows=300175 width=0) (actual time=69.191..69.191 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56706.35..403904.70 rows=7311788 width=16) (actual time=27.581..4765.144 rows=7247106 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=255014.30..1742132.99 rows=32885975 width=12) (actual time=120.525..18064.392 rows=32563999 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6954.78..45984.97 rows=300175 width=4) (actual time=78.191..588.753 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=4) (actual time=0.015..3592.217 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=408106.27..408106.27 rows=15179927 width=4) (actual time=8773.677..8773.677 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=600764.28..644296.20 rows=58891 width=20) (actual time=9341.788..9975.579 rows=63599 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6548.67 rows=381555 width=0) (actual time=90.536..90.536 rows=381023 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6644.06..51937.88 rows=381555 width=4) (actual time=99.645..351.232 rows=381023 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.286..40.726 rows=3945 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=41.931..41.931 rows=3945 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.275..40.095 rows=3945 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=6255.410..6374.132 rows=1586726 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.306..146.777 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8166 width=30) (actual time=0.101..1144.519 rows=8061 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=157.926..5176.190 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=157.791..157.791 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.254..28.532 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.272..28.178 rows=4007 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.256..27.565 rows=4007 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.60..33182.42 rows=20020 width=4) (actual time=13.180..132.520 rows=21692 loops=1)
Q19,1.0,->  Nested Loop  (cost=12874.25..609257.33 rows=1126 width=8) (actual time=34.924..3201.672 rows=1092 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.157..4.157 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.27 rows=8057 width=0) (actual time=3.492..3.492 rows=8048 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.87 rows=8016 width=0) (actual time=3.522..3.522 rows=7987 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..271.39 rows=7768 width=0) (actual time=3.204..3.204 rows=7876 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12873.68..26511.08 rows=4731 width=30) (actual time=31.784..341.711 rows=4793 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=16) (actual time=0.006..2608.417 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1686915.99 rows=60765599 width=8) (actual time=0.007..8214.658 rows=59985538 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1686915.99 rows=60765599 width=8) (actual time=0.014..8408.438 rows=59985538 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.021..0.037 rows=30 loops=2077)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.021..0.037 rows=30 loops=2077)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..73.18 rows=2075 width=0) (actual time=0.923..0.923 rows=2077 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.70..6843.78 rows=2075 width=4) (actual time=1.252..29.440 rows=2077 loops=1)
Q16,1.0,Sort  (cost=412965.17..413035.05 rows=27955 width=40) (actual time=11569.252..11572.662 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51048.20..51048.20 rows=298178 width=40) (actual time=1229.929..1229.929 rows=296831 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403241.66..410900.58 rows=27955 width=40) (actual time=10744.809..11509.249 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2495.70..51048.20 rows=298178 width=40) (actual time=35.000..1103.097 rows=296831 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=189017.71..1634230.88 rows=2262519 width=12) (actual time=118.769..22222.309 rows=2241051 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=189017.71..1634230.88 rows=2262519 width=12) (actual time=122.715..18389.835 rows=2241051 loops=1)
Q14,1.0,->  Hash Join  (cost=93235.21..1134026.24 rows=738069 width=29) (actual time=1674.048..25403.248 rows=748947 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7713.21..1037433.21 rows=738069 width=12) (actual time=120.468..23080.257 rows=748947 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=14967821 width=8) (actual time=0.016..7429.216 rows=14852874 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740041.70 rows=14967821 width=8) (actual time=1151.803..19370.268 rows=15352893 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.011..4454.089 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2433492.58 rows=287364 width=15) (actual time=0.084..23803.785 rows=310770 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..3037375.03 rows=287364 width=27) (actual time=9657.297..33781.772 rows=310770 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=9587.124..9587.124 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.296..39.713 rows=3974 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.283..25.818 rows=3974 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=26.706..3699.138 rows=317920 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=40.822..4144.527 rows=317920 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=40.761..40.761 rows=3974 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.654..26.654 rows=3974 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.258..25.181 rows=3974 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.280..39.058 rows=3974 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.65 rows=59670379 width=20) (actual time=0.013..18546.847 rows=59607970 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1837000.11 rows=15041719 width=12) (actual time=0.040..17016.257 rows=14822519 loops=1)
Q10,1.0,->  Hash  (cost=270953.90..270953.90 rows=578491 width=8) (actual time=6594.093..6594.093 rows=574015 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5969.53..270953.90 rows=578491 width=8) (actual time=30.740..6373.933 rows=574015 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=407615)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1494939)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.17 rows=1 width=16) (actual time=0.531..0.595 rows=0 loops=4793)
Q19,,->  BitmapOr  (cost=12873.68..12873.68 rows=4735 width=0) (actual time=27.899..27.899 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6269.07..6269.07 rows=2324 width=0) (actual time=7.954..7.954 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4298.35..4298.35 rows=1609 width=0) (actual time=8.259..8.259 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2305.75..2305.75 rows=802 width=0) (actual time=8.355..8.355 rows=0 loops=1)
