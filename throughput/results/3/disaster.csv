Q21,712152.0,->  Nested Loop Semi Join  (cost=2406.31..2877568.16 rows=1 width=34) (actual time=41.636..37873.939 rows=712152 loops=1)
Q3,316632.4,->  Sort  (cost=2560990.30..2568906.11 rows=3166324 width=20) (actual time=33614.947..33614.949 rows=10 loops=1)
Q18,304774.2,->  GroupAggregate  (cost=10202830.89..11032578.71 rows=30172648 width=39) (actual time=72797.266..72797.600 rows=99 loops=1)
Q18,76211.6,->  Hash Join  (cost=2187779.69..2803734.92 rows=7544952 width=39) (actual time=46969.679..53718.441 rows=99 loops=1)
Q18,76211.6,->  Hash Join  (cost=2118751.69..2621532.65 rows=7544952 width=20) (actual time=45799.420..52547.849 rows=99 loops=1)
Q18,76211.6,->  Hash  (cost=2803734.92..2803734.92 rows=7544952 width=39) (actual time=53718.661..53718.661 rows=99 loops=1)
Q18,43539.1,->  Sort  (cost=10202830.89..10278262.51 rows=30172648 width=39) (actual time=72797.256..72797.295 rows=693 loops=1)
Q18,43539.1,->  Hash Join  (cost=2898046.82..5629337.50 rows=30172648 width=39) (actual time=53840.625..72796.344 rows=693 loops=1)
Q18,40916.9,->  Hash  (cost=2068116.96..2068116.96 rows=4050778 width=4) (actual time=45658.877..45658.877 rows=99 loops=1)
Q18,40916.9,->  HashAggregate  (cost=1976974.45..2027609.18 rows=4050778 width=8) (actual time=39762.030..45658.631 rows=99 loops=1)
Q21,39744.0,->  Nested Loop Anti Join  (cost=2406.88..2877569.94 rows=1 width=26) (actual time=42.170..40688.849 rows=39744 loops=1)
Q9,29714.9,->  Sort  (cost=1041181.28..1041181.55 rows=110 width=46) (actual time=92520.388..93128.187 rows=3268645 loops=1)
Q9,29714.9,->  Nested Loop  (cost=66674.42..1041173.92 rows=110 width=24) (actual time=1010.557..83509.837 rows=3268645 loops=1)
Q9,29714.9,->  Nested Loop  (cost=66673.98..1041120.61 rows=110 width=24) (actual time=1010.535..53564.682 rows=3268645 loops=1)
Q9,29714.9,->  Nested Loop  (cost=66673.69..1041085.12 rows=110 width=28) (actual time=1010.524..43365.902 rows=3268645 loops=1)
Q9,29714.9,->  Hash Join  (cost=66675.98..1041177.55 rows=110 width=46) (actual time=1010.613..86704.939 rows=3268645 loops=1)
Q10,28499.6,->  Sort  (cost=2293435.03..2294860.02 rows=569993 width=176) (actual time=30723.789..30723.796 rows=20 loops=1)
Q2,4736.0,->  Merge Join  (cost=465676.21..882900.65 rows=1 width=190) (actual time=7246.955..9274.541 rows=4736 loops=1)
Q21,4029.0,->  HashAggregate  (cost=2877569.95..2877569.96 rows=1 width=26) (actual time=40741.198..40742.249 rows=4029 loops=1)
Q15,3719.0,->  Subquery Scan on revenue3  (cost=1341224.02..1341307.69 rows=3719 width=12) (actual time=44259.030..44267.987 rows=1 loops=1)
Q15,3719.0,->  Sort  (cost=1341528.24..1341537.54 rows=3719 width=12) (actual time=44268.010..44268.011 rows=1 loops=1)
Q15,3719.0,Merge Join  (cost=2665952.74..2671049.73 rows=3719 width=79) (actual time=44280.171..44280.174 rows=1 loops=1)
Q15,3719.0,->  HashAggregate  (cost=1341224.02..1341270.50 rows=3719 width=12) (actual time=44259.030..44267.987 rows=1 loops=1)
Q7,769.0,Sort  (cost=2130985.00..2130992.69 rows=3076 width=64) (actual time=22733.862..22733.863 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2130760.66..2130806.80 rows=3076 width=64) (actual time=22733.798..22733.807 rows=4 loops=1)
Q8,364.5,Sort  (cost=1743186.33..1743188.15 rows=729 width=38) (actual time=14742.622..14742.623 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1743138.91..1743151.67 rows=729 width=38) (actual time=14742.587..14742.589 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2877569.97..2877569.97 rows=1 width=26) (actual time=40743.404..40743.411 rows=100 loops=1)
Q21,100.0,Limit  (cost=2877569.97..2877569.97 rows=1 width=26) (actual time=40743.404..40743.421 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=882900.66..882900.67 rows=1 width=190) (actual time=9279.399..9279.414 rows=100 loops=1)
Q2,100.0,Limit  (cost=882900.66..882900.67 rows=1 width=190) (actual time=9279.399..9279.419 rows=100 loops=1)
Q11,35.5,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=8234.793..8235.829 rows=8991 loops=1)
Q11,35.5,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=8135.903..8229.832 rows=8991 loops=1)
Q3,27.9,->  HashAggregate  (cost=2460903.94..2492567.18 rows=3166324 width=20) (actual time=33541.107..33592.912 rows=113222 loops=1)
Q15,26.8,->  HashAggregate  (cost=1324340.52..1324377.71 rows=3719 width=12) (actual time=22135.005..22171.788 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=738716)
Q14,14.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7533.77 rows=738577 width=0) (actual time=119.152..119.152 rows=10739200 loops=1)
Q3,10.6,->  Hash Join  (cost=770670.06..2413409.08 rows=3166324 width=20) (actual time=8602.891..33272.043 rows=298464 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2394.86 rows=317713 width=0) (actual time=34.819..34.819 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.085 rows=8 loops=435660)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.611..3.611 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.585..3.585 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.260..0.260 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.258..0.258 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.268..0.268 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.252..0.252 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.010 rows=1 loops=1202005)
Q5,5.0,Sort  (cost=2000871.89..2000871.96 rows=25 width=34) (actual time=14231.290..14231.291 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2000871.06..2000871.31 rows=25 width=34) (actual time=14231.243..14231.243 rows=5 loops=1)
Q4,5.0,Sort  (cost=1482740.80..1482740.80 rows=1 width=16) (actual time=13556.348..13556.349 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.07 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=574673)
Q4,5.0,->  HashAggregate  (cost=1482740.78..1482740.79 rows=1 width=16) (actual time=13556.301..13556.302 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=712152)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5792.67 rows=575267 width=0) (actual time=27.421..27.421 rows=2538240 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5792.37 rows=575237 width=0) (actual time=27.600..27.600 rows=2558720 loops=1)
Q13,4.3,Sort  (cost=855417.65..855418.15 rows=200 width=8) (actual time=26405.284..26405.285 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=855408.01..855410.01 rows=200 width=8) (actual time=26405.212..26405.224 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.010..0.012 rows=4 loops=457178)
Q17,3.6,->  Nested Loop  (cost=82.71..114131.87 rows=20075 width=4) (actual time=1.540..182.728 rows=5533 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5937.05..1481965.57 rows=155042 width=16) (actual time=27.624..13248.355 rows=526879 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.013..0.029 rows=3 loops=2060)
Q15,3.3,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.027..9.270 rows=29990 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245601.43 rows=32727125 width=0) (actual time=119.674..119.674 rows=10792960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.295..0.365 rows=3 loops=21632)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55532.06 rows=7398942 width=0) (actual time=27.545..27.545 rows=2566400 loops=1)
Q22,2.3,Sort  (cost=694736.89..694736.89 rows=3 width=20) (actual time=9415.875..9415.876 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641810.20..641810.25 rows=3 width=20) (actual time=9415.832..9415.833 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.040..0.056 rows=2 loops=6462)
Q20,2.0,->  Nested Loop  (cost=754.49..11669236.47 rows=29067 width=4) (actual time=13.319..8181.867 rows=58696 loops=1)
Q20,2.0,->  Hash  (cost=11669236.47..11669236.47 rows=29067 width=4) (actual time=8215.967..8215.967 rows=58696 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.216..4.216 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402284.50..403742.72 rows=583291 width=40) (actual time=10622.861..10787.345 rows=1184308 loops=1)
Q16,2.0,->  Hash Join  (cost=54632.23..346423.14 rows=583291 width=40) (actual time=1318.986..7000.573 rows=1184308 loops=1)
Q12,2.0,Sort  (cost=3059289.98..3059289.98 rows=1 width=27) (actual time=33670.446..33670.446 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3059289.96..3059289.97 rows=1 width=27) (actual time=33670.394..33670.395 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346585.76..2258317.97 rows=569993 width=176) (actual time=7269.503..28439.612 rows=1148730 loops=1)
Q10,2.0,->  Hash Join  (cost=346584.19..2250479.00 rows=569993 width=154) (actual time=7269.470..28043.022 rows=1148730 loops=1)
Q10,2.0,->  Hash Join  (cost=277556.19..2172901.11 rows=569993 width=12) (actual time=5957.713..25885.701 rows=1148730 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.571..4095.294 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1838829.99 rows=20255200 width=8) (actual time=0.014..18708.829 rows=37966199 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2351156.45 rows=393906 width=38) (actual time=41.504..32821.354 rows=738716 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1925281.11 rows=808881 width=34) (actual time=41.471..25379.493 rows=1529029 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.039..0.530 rows=56 loops=1)
Q9,1.5,GroupAggregate  (cost=1041181.28..1041185.13 rows=110 width=46) (actual time=92530.168..95313.513 rows=175 loops=1)
Q20,1.5,Sort  (cost=11672042.14..11672045.05 rows=1163 width=51) (actual time=8247.799..8247.900 rows=1803 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669642.81..11671982.92 rows=1163 width=51) (actual time=8216.432..8246.345 rows=1803 loops=1)
Q1,1.5,Sort  (cost=4200980.48..4200980.50 rows=6 width=20) (actual time=89476.237..89476.237 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4200980.30..4200980.40 rows=6 width=20) (actual time=89476.185..89476.188 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.166..4.166 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2272567.80..2278267.73 rows=569993 width=176) (actual time=30374.939..30585.653 rows=381756 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2877.45 rows=140242 width=0) (actual time=476.556..476.556 rows=190952 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2912.51..41871.87 rows=140242 width=24) (actual time=485.116..635.997 rows=190952 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=92090 width=4) (actual time=0.008..968.033 rows=108915 loops=1)
Q9,1.1,->  Hash Join  (cost=66673.12..351277.62 rows=364650 width=16) (actual time=1010.401..5372.546 rows=435660 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=92090 width=4) (actual time=1009.916..1009.916 rows=108915 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91024.34 rows=9087634 width=0) (actual time=118.583..118.583 rows=10676480 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.745..2465.949 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.98..1695243.50 rows=122579 width=20) (actual time=7.564..11859.653 rows=120687 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.55..1497084.68 rows=404708 width=16) (actual time=6.997..6616.209 rows=398391 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.42..1742188.90 rows=24476 width=16) (actual time=2577.653..14658.677 rows=23878 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.98..1742649.39 rows=24476 width=38) (actual time=2577.702..14699.820 rows=23878 loops=1)
Q8,1.0,->  Hash Join  (cost=38752.13..1734278.48 rows=24516 width=16) (actual time=2577.640..14512.204 rows=23878 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2565.741..2565.741 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.53 rows=13480 width=0) (actual time=4.564..4.564 rows=13281 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=13281)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.90..28299.15 rows=13480 width=4) (actual time=6.896..152.656 rows=13281 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.034..0.470 rows=30 loops=13281)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.643..483.430 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.007..3113.067 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2117970.36 rows=1465589 width=42) (actual time=618.637..21987.248 rows=1464026 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2129847.28 rows=60892 width=64) (actual time=673.548..22644.127 rows=58773 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=618.585..8925.650 rows=1202005 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.039..578.485 rows=119847 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..52.495 rows=8011 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=618.069..618.069 rows=119847 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=54.845..54.845 rows=8011 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91119.35..1363134.12 rows=380061 width=8) (actual time=119.378..28491.822 rows=380602 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..479224.52 rows=2286720 width=8) (actual time=0.013..4550.701 rows=2278204 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.686..1914.270 rows=300270 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1981014.15 rows=1828951 width=46) (actual time=2022.704..13451.185 rows=1827424 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2000140.67 rows=73039 width=34) (actual time=2077.342..14152.953 rows=73041 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..530714.79 rows=457344 width=38) (actual time=2022.686..7447.625 rows=457178 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2020.603..2020.603 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.615..373.014 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5936.48..268340.49 rows=575267 width=20) (actual time=27.604..5061.280 rows=574673 loops=1)
Q3,1.0,->  Hash Join  (cost=107016.87..498510.64 rows=1470096 width=12) (actual time=688.034..7949.441 rows=1460890 loops=1)
Q3,1.0,->  Hash  (cost=498510.64..498510.64 rows=1470096 width=12) (actual time=8475.952..8475.952 rows=1460890 loops=1)
Q3,1.0,->  Hash  (cost=45909.64..45909.64 rows=298035 width=4) (actual time=658.380..658.380 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6831.69 rows=298035 width=0) (actual time=66.770..66.770 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57381.80..406428.58 rows=7398942 width=16) (actual time=27.709..4427.009 rows=7302550 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253783.22..1742132.28 rows=32727125 width=12) (actual time=120.432..19269.330 rows=32282211 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6906.20..45909.64 rows=298035 width=4) (actual time=75.941..568.456 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.012..3926.211 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=8576.284..8576.284 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597814.84..641367.42 rows=59038 width=20) (actual time=9130.801..9393.696 rows=63411 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6555.81 rows=382510 width=0) (actual time=88.818..88.818 rows=382258 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6651.44..51970.33 rows=382510 width=4) (actual time=97.768..351.092 rows=382258 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.298..40.248 rows=4029 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=41.427..41.427 rows=4029 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.283..39.534 rows=4029 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=7245.682..7362.427 rows=1602884 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.423..145.842 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7929 width=30) (actual time=0.400..1222.957 rows=7985 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=157.431..6089.572 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=157.272..157.272 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.276..28.325 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.293..28.660 rows=3995 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=8.993..8.993 rows=21632 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.277..28.059 rows=3995 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.640..242.391 rows=21632 loops=1)
Q19,1.0,->  Nested Loop  (cost=12876.03..614161.23 rows=1144 width=8) (actual time=33.666..1866.109 rows=1166 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.255..4.255 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.91 rows=8122 width=0) (actual time=3.579..3.579 rows=7925 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.59 rows=7987 width=0) (actual time=3.791..3.791 rows=8172 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.75 rows=7905 width=0) (actual time=3.458..3.458 rows=8147 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12875.46..26596.99 rows=4769 width=30) (actual time=33.403..300.785 rows=4877 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=16) (actual time=0.007..2987.060 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1675247.97 rows=60345297 width=8) (actual time=0.006..9214.274 rows=60045826 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675247.97 rows=60345297 width=8) (actual time=0.014..8629.888 rows=60045826 loops=1)
Q18,1.0,Limit  (cost=10202830.89..10202833.64 rows=100 width=39) (actual time=72797.268..72797.611 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.038 rows=30 loops=2060)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.038 rows=30 loops=2060)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.45 rows=2002 width=0) (actual time=0.929..0.929 rows=2060 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.95..6631.73 rows=2002 width=4) (actual time=1.329..26.748 rows=2060 loops=1)
Q16,1.0,Sort  (cost=411889.28..411958.33 rows=27620 width=40) (actual time=11453.047..11456.116 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=50933.34..50933.34 rows=294613 width=40) (actual time=1316.031..1316.031 rows=296234 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402284.50..409851.83 rows=27620 width=40) (actual time=10622.925..11393.261 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2468.51..50933.34 rows=294613 width=40) (actual time=34.885..1184.612 rows=296234 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..74815.13 rows=9955618 width=0) (actual time=120.219..120.219 rows=10782720 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..74815.13 rows=9955618 width=0) (actual time=119.448..119.448 rows=10771200 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=75377.92..1301829.19 rows=2251133 width=12) (actual time=121.040..19905.918 rows=2245639 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=75377.92..1301829.19 rows=2251133 width=12) (actual time=120.269..20010.587 rows=2245639 loops=1)
Q14,1.0,->  Hash Join  (cost=93240.42..1134266.99 rows=738577 width=29) (actual time=1698.237..24394.292 rows=722599 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7718.42..1037666.34 rows=738577 width=12) (actual time=119.898..22042.502 rows=722599 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=15119181 width=8) (actual time=0.018..7304.784 rows=14838293 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742312.10 rows=15119181 width=8) (actual time=796.323..17049.511 rows=15338309 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=20) (actual time=0.012..4621.013 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2446485.98 rows=294533 width=15) (actual time=0.097..23245.692 rows=312249 loops=1)
Q12,1.0,->  Hash Join  (cost=598445.50..3054135.63 rows=294533 width=27) (actual time=9802.465..33352.784 rows=312249 loops=1)
Q12,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=20) (actual time=9733.241..9733.241 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.307..44.590 rows=4029 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.297..25.209 rows=4029 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=26.192..3793.125 rows=322320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=46.027..3986.268 rows=322320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=45.917..45.917 rows=4029 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.092..26.092 rows=4029 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.270..24.546 rows=4029 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.286..43.830 rows=4029 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1821490.54 rows=59487244 width=20) (actual time=0.016..18604.576 rows=59300980 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1833350.60 rows=15011836 width=12) (actual time=0.012..16431.919 rows=14822772 loops=1)
Q10,1.0,->  Hash  (cost=270365.73..270365.73 rows=575237 width=8) (actual time=5954.317..5954.317 rows=574192 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5936.18..270365.73 rows=575237 width=8) (actual time=27.771..5755.576 rows=574192 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=398391)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1529029)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.19 rows=1 width=16) (actual time=0.283..0.319 rows=0 loops=4877)
Q19,,->  BitmapOr  (cost=12875.46..12875.46 rows=4772 width=0) (actual time=29.517..29.517 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.45..6270.45 rows=2365 width=0) (actual time=8.359..8.359 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4297.69..4297.69 rows=1595 width=0) (actual time=8.791..8.791 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2306.81..2306.81 rows=813 width=0) (actual time=8.483..8.483 rows=0 loops=1)
