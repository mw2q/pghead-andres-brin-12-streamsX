Q21,699941.0,->  Nested Loop Semi Join  (cost=2406.31..2877568.16 rows=1 width=34) (actual time=41.488..39170.150 rows=699941 loops=1)
Q3,317538.6,->  Sort  (cost=2551261.35..2559199.82 rows=3175386 width=20) (actual time=38298.314..38298.315 rows=10 loops=1)
Q18,303867.1,->  GroupAggregate  (cost=10172565.53..10999843.76 rows=30082845 width=39) (actual time=70024.207..70024.531 rows=99 loops=1)
Q18,75984.6,->  Hash Join  (cost=2181895.58..2796136.59 rows=7522476 width=39) (actual time=44343.213..50632.811 rows=99 loops=1)
Q18,75984.6,->  Hash Join  (cost=2112867.58..2614271.45 rows=7522476 width=20) (actual time=43417.131..49706.463 rows=99 loops=1)
Q18,75984.6,->  Hash  (cost=2796136.59..2796136.59 rows=7522476 width=39) (actual time=50633.007..50633.007 rows=99 loops=1)
Q18,43409.5,->  Sort  (cost=10172565.53..10247772.64 rows=30082845 width=39) (actual time=70024.197..70024.238 rows=693 loops=1)
Q18,43409.5,->  Hash Join  (cost=2890167.54..5613329.02 rows=30082845 width=39) (actual time=51058.908..70023.276 rows=693 loops=1)
Q18,40916.9,->  Hash  (cost=2062232.86..2062232.86 rows=4050778 width=4) (actual time=43288.928..43288.928 rows=99 loops=1)
Q18,40916.9,->  HashAggregate  (cost=1971090.35..2021725.08 rows=4050778 width=8) (actual time=37774.620..43288.697 rows=99 loops=1)
Q21,39290.0,->  Nested Loop Anti Join  (cost=2406.88..2877569.94 rows=1 width=26) (actual time=42.375..41987.749 rows=39290 loops=1)
Q10,28586.9,->  Sort  (cost=2283089.69..2284519.04 rows=571739 width=176) (actual time=31396.776..31396.780 rows=20 loops=1)
Q9,23087.0,->  Sort  (cost=1238262.62..1238262.97 rows=142 width=46) (actual time=93810.119..94478.388 rows=3278367 loops=1)
Q9,23087.0,->  Nested Loop  (cost=66999.74..1238253.31 rows=142 width=24) (actual time=949.832..84388.773 rows=3278367 loops=1)
Q9,23087.0,->  Nested Loop  (cost=66999.31..1238184.49 rows=142 width=24) (actual time=949.762..52551.922 rows=3278367 loops=1)
Q9,23087.0,->  Nested Loop  (cost=66999.01..1238138.67 rows=142 width=28) (actual time=949.750..41814.664 rows=3278367 loops=1)
Q9,23087.0,->  Hash Join  (cost=67001.30..1238257.54 rows=142 width=46) (actual time=949.897..87673.029 rows=3278367 loops=1)
Q2,4809.0,->  Merge Join  (cost=465676.21..888958.50 rows=1 width=190) (actual time=5226.833..6885.277 rows=4809 loops=1)
Q21,3960.0,->  HashAggregate  (cost=2877569.95..2877569.96 rows=1 width=26) (actual time=42045.343..42046.439 rows=3960 loops=1)
Q15,3690.0,->  Subquery Scan on revenue11  (cost=2005865.12..2005948.14 rows=3690 width=12) (actual time=40334.608..40346.027 rows=1 loops=1)
Q15,3690.0,->  Sort  (cost=2006166.77..2006175.99 rows=3690 width=12) (actual time=40346.049..40346.050 rows=1 loops=1)
Q15,3690.0,Merge Join  (cost=3995526.35..4000622.91 rows=3690 width=79) (actual time=40357.664..40357.667 rows=1 loops=1)
Q15,3690.0,->  HashAggregate  (cost=2005865.12..2005911.24 rows=3690 width=12) (actual time=40334.607..40346.025 rows=1 loops=1)
Q7,769.0,Sort  (cost=2152042.95..2152050.64 rows=3076 width=64) (actual time=19880.823..19880.824 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2151818.60..2151864.74 rows=3076 width=64) (actual time=19880.757..19880.767 rows=4 loops=1)
Q8,364.5,Sort  (cost=1724520.39..1724522.21 rows=729 width=38) (actual time=10596.806..10596.807 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1724472.96..1724485.72 rows=729 width=38) (actual time=10596.764..10596.764 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2877569.97..2877569.97 rows=1 width=26) (actual time=42047.552..42047.559 rows=100 loops=1)
Q21,100.0,Limit  (cost=2877569.97..2877569.97 rows=1 width=26) (actual time=42047.554..42047.570 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=888958.51..888958.52 rows=1 width=190) (actual time=6890.012..6890.025 rows=100 loops=1)
Q2,100.0,Limit  (cost=888958.51..888958.52 rows=1 width=190) (actual time=6890.014..6890.040 rows=100 loops=1)
Q11,32.9,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=8821.416..8822.555 rows=9722 loops=1)
Q11,32.9,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=8709.542..8816.033 rows=9722 loops=1)
Q3,27.8,->  HashAggregate  (cost=2450888.54..2482642.40 rows=3175386 width=20) (actual time=38234.505..38276.936 rows=114074 loops=1)
Q15,27.1,->  HashAggregate  (cost=1989276.26..1989313.16 rows=3690 width=12) (actual time=19662.131..19692.557 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=726427)
Q14,14.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7680.55 rows=753255 width=0) (actual time=118.420..118.420 rows=10676480 loops=1)
Q3,10.5,->  Hash Join  (cost=768608.55..2403257.75 rows=3175386 width=20) (actual time=8731.535..37938.681 rows=301783 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2421.11 rows=321213 width=0) (actual time=34.862..34.862 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.081 rows=8 loops=436644)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.605..3.605 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.157..4.157 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.272..0.272 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.270..0.270 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.370..0.370 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.007..0.008 rows=1 loops=1197059)
Q5,5.0,Sort  (cost=1922726.14..1922726.20 rows=25 width=34) (actual time=15108.859..15108.859 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1922725.31..1922725.56 rows=25 width=34) (actual time=15108.811..15108.811 rows=5 loops=1)
Q4,5.0,Sort  (cost=1482282.29..1482282.29 rows=1 width=16) (actual time=15882.258..15882.258 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.14 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=574027)
Q4,5.0,->  HashAggregate  (cost=1482282.27..1482282.28 rows=1 width=16) (actual time=15882.210..15882.210 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=699941)
Q15,4.5,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.018..9.343 rows=21986 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5751.97 rows=571197 width=0) (actual time=27.659..27.659 rows=2553600 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5809.87 rows=576987 width=0) (actual time=27.265..27.265 rows=2545920 loops=1)
Q13,4.3,Sort  (cost=854499.97..854500.47 rows=200 width=8) (actual time=26472.333..26472.336 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=854490.33..854492.33 rows=200 width=8) (actual time=26472.257..26472.265 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.011..0.013 rows=4 loops=456347)
Q17,3.7,->  Nested Loop  (cost=82.75..114356.38 rows=20156 width=4) (actual time=1.642..220.747 rows=5416 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5895.33..1481517.12 rows=153029 width=16) (actual time=27.849..15568.442 rows=526238 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.018..0.044 rows=3 loops=1989)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243310.16 rows=32421621 width=0) (actual time=119.726..119.726 rows=10760960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.339..0.411 rows=3 loops=21540)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55744.43 rows=7427258 width=0) (actual time=27.424..27.424 rows=2558720 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44699.77 rows=5954636 width=0) (actual time=27.412..27.412 rows=2556160 loops=1)
Q22,2.3,Sort  (cost=695777.25..695777.26 rows=3 width=20) (actual time=8565.142..8565.142 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642932.86..642932.91 rows=3 width=20) (actual time=8565.093..8565.096 rows=7 loops=1)
Q20,2.2,->  Nested Loop  (cost=677.99..10613876.44 rows=26424 width=4) (actual time=13.505..9133.382 rows=58342 loops=1)
Q20,2.2,->  Hash  (cost=10613876.44..10613876.44 rows=26424 width=4) (actual time=9170.067..9170.067 rows=58342 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.037..0.053 rows=2 loops=6511)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.266..4.266 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403230.32..404705.96 rows=590256 width=40) (actual time=10859.464..11051.778 rows=1187464 loops=1)
Q16,2.0,->  Hash Join  (cost=54790.83..346651.39 rows=590256 width=40) (actual time=1342.989..6991.043 rows=1187464 loops=1)
Q12,2.0,Sort  (cost=3047046.99..3047047.00 rows=1 width=27) (actual time=33093.731..33093.731 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3047046.97..3047046.98 rows=1 width=27) (actual time=33093.685..33093.685 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345384.82..2247865.06 rows=571739 width=176) (actual time=6876.488..28978.885 rows=1148292 loops=1)
Q10,2.0,->  Hash Join  (cost=345383.26..2240002.08 rows=571739 width=154) (actual time=6876.459..28569.053 rows=1148292 loops=1)
Q10,2.0,->  Hash Join  (cost=276355.26..2162398.00 rows=571739 width=12) (actual time=5541.844..26504.379 rows=1148292 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.575..4043.063 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1838829.99 rows=20255200 width=8) (actual time=0.015..19240.192 rows=37928434 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2351156.45 rows=393906 width=38) (actual time=41.409..33999.870 rows=726427 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1925281.11 rows=808881 width=34) (actual time=41.241..26212.854 rows=1503174 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.038..0.531 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616640.05..10616642.69 rows=1057 width=51) (actual time=9203.203..9203.303 rows=1782 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10614249.74..10616586.96 rows=1057 width=51) (actual time=9170.583..9201.867 rows=1782 loops=1)
Q1,1.5,Sort  (cost=4209869.48..4209869.49 rows=6 width=20) (actual time=90387.141..90387.142 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4209869.29..4209869.40 rows=6 width=20) (actual time=90387.092..90387.094 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.326..4.326 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2262158.53..2267875.92 rows=571739 width=176) (actual time=31019.762..31259.190 rows=381883 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2869.12 rows=139415 width=0) (actual time=460.885..460.885 rows=190923 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2903.98..41841.62 rows=139415 width=24) (actual time=469.382..620.220 rows=190923 loops=1)
Q9,1.2,GroupAggregate  (cost=1238262.62..1238267.59 rows=142 width=46) (actual time=93820.221..96775.287 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..93069.15 rows=9292115 width=0) (actual time=125.126..125.126 rows=10792960 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.55 rows=18000 width=0) (actual time=9.308..9.308 rows=21540 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=118116 width=4) (actual time=0.012..909.009 rows=109161 loops=1)
Q9,1.0,->  Hash Join  (cost=66998.45..352633.50 rows=467705 width=16) (actual time=949.674..5198.753 rows=436644 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=118116 width=4) (actual time=949.162..949.162 rows=109161 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.756..1902.738 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=412.29..1676658.74 rows=121539 width=20) (actual time=7.499..8299.362 rows=122967 loops=1)
Q8,1.0,->  Nested Loop  (cost=411.86..1480173.56 rows=401274 width=16) (actual time=7.368..4278.852 rows=405573 loops=1)
Q8,1.0,->  Nested Loop  (cost=38742.73..1723531.02 rows=24268 width=16) (actual time=2008.784..10518.466 rows=24637 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.09 rows=31 width=20) (actual time=0.026..0.296 rows=30 loops=13501)
Q8,1.0,->  Hash Join  (cost=38744.30..1723987.60 rows=24268 width=38) (actual time=2008.828..10556.886 rows=24637 loops=1)
Q8,1.0,->  Hash Join  (cost=38742.44..1715687.74 rows=24308 width=16) (actual time=2008.768..10373.211 rows=24637 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1997.975..1997.975 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..407.98 rows=13273 width=0) (actual time=4.994..4.994 rows=13501 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.29..28047.06 rows=13273 width=4) (actual time=7.305..148.649 rows=13501 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.638..371.375 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=8) (actual time=0.006..2805.540 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2138938.03 rows=1480202 width=42) (actual time=868.247..19172.112 rows=1451085 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2150896.12 rows=61499 width=64) (actual time=917.471..19796.038 rows=58430 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..536250.36 rows=1215593 width=30) (actual time=868.215..8740.524 rows=1197059 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.041..822.705 rows=119858 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.036..46.517 rows=8032 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=867.695..867.695 rows=119858 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=48.891..48.891 rows=8032 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=93263.41..1381596.00 rows=777070 width=8) (actual time=126.049..25344.913 rows=762955 loops=1)
Q5,1.0,->  Nested Loop  (cost=83617.49..1902766.74 rows=1841201 width=46) (actual time=2166.859..14301.548 rows=1824489 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=4.505..2030.517 rows=299436 loops=1)
Q5,1.0,->  Hash Join  (cost=88296.49..1921990.03 rows=73528 width=34) (actual time=2231.752..15027.466 rows=73313 loops=1)
Q5,1.0,->  Hash Join  (cost=83616.93..441721.52 rows=460419 width=38) (actual time=2166.841..7868.739 rows=456347 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2137.273..2137.273 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45275.30..390142.84 rows=2302097 width=8) (actual time=27.577..4841.154 rows=2283984 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.191..396.243 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5894.76..269757.72 rows=571197 width=20) (actual time=27.828..7060.977 rows=574027 loops=1)
Q3,1.0,->  Hash Join  (cost=107313.70..498645.57 rows=1483793 width=12) (actual time=449.990..8069.545 rows=1475717 loops=1)
Q3,1.0,->  Hash  (cost=498645.57..498645.57 rows=1483793 width=12) (actual time=8601.327..8601.327 rows=1475717 loops=1)
Q3,1.0,->  Hash  (cost=45966.64..45966.64 rows=299665 width=4) (actual time=419.975..419.975 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6867.91 rows=299665 width=0) (actual time=67.102..67.102 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57601.25..406242.97 rows=7427258 width=16) (actual time=27.587..5182.142 rows=7359642 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251415.57..1732729.83 rows=32421621 width=12) (actual time=120.476..23848.686 rows=32113916 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6942.83..45966.64 rows=299665 width=4) (actual time=76.053..339.357 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.018..3475.338 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=7734.219..7734.219 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598988.92..642492.69 rows=58690 width=20) (actual time=8279.812..8543.200 rows=63552 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6538.91 rows=380255 width=0) (actual time=80.709..80.709 rows=381631 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6633.97..51893.67 rows=380255 width=4) (actual time=89.449..338.036 rows=381631 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.326..39.970 rows=3961 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=41.156..41.156 rows=3961 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.313..39.305 rows=3961 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=5225.918..5347.407 rows=1602613 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.332..146.507 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8086 width=30) (actual time=0.162..864.449 rows=8044 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=158.125..4139.685 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=157.973..157.973 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.260..28.451 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.331..29.857 rows=4010 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.313..29.274 rows=4010 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.56..33178.47 rows=20020 width=4) (actual time=12.940..258.652 rows=21540 loops=1)
Q19,1.0,->  Nested Loop  (cost=12874.43..611449.35 rows=1143 width=8) (actual time=41.294..1902.851 rows=1149 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.184..4.184 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.91 rows=8022 width=0) (actual time=3.650..3.650 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.11 rows=7940 width=0) (actual time=3.740..3.740 rows=8135 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.67 rows=7895 width=0) (actual time=3.546..3.546 rows=8077 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12873.87..26546.95 rows=4746 width=30) (actual time=35.075..300.468 rows=4896 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.005..2762.829 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670261.90 rows=60165690 width=8) (actual time=0.007..8194.955 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670261.90 rows=60165690 width=8) (actual time=0.019..9420.373 rows=60045379 loops=1)
Q18,1.0,Limit  (cost=10172565.53..10172568.28 rows=100 width=39) (actual time=70024.210..70024.550 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.026..0.042 rows=30 loops=1989)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.026..0.042 rows=30 loops=1989)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.49 rows=2006 width=0) (actual time=1.080..1.080 rows=1989 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.99..6643.88 rows=2006 width=4) (actual time=1.429..32.875 rows=1989 loops=1)
Q16,1.0,Sort  (cost=412952.21..413022.08 rows=27950 width=40) (actual time=11727.444..11730.795 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51047.97..51047.97 rows=298131 width=40) (actual time=1340.021..1340.021 rows=297023 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403230.32..410888.02 rows=27950 width=40) (actual time=10859.531..11667.189 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2495.64..51047.97 rows=298131 width=40) (actual time=34.911..1214.766 rows=297023 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1967157.78 rows=2211848 width=12) (actual time=0.007..17771.225 rows=2242050 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1967157.78 rows=2211848 width=12) (actual time=0.008..18652.910 rows=2242050 loops=1)
Q14,1.0,->  Hash Join  (cost=93390.87..1136836.94 rows=753255 width=29) (actual time=1633.485..30410.228 rows=749781 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7868.87..1040016.12 rows=753255 width=12) (actual time=119.205..27924.750 rows=749781 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=15073297 width=8) (actual time=0.020..7734.404 rows=14837871 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..741623.84 rows=15073297 width=8) (actual time=815.693..17298.463 rows=15337891 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=20) (actual time=0.011..4031.616 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2436768.13 rows=291157 width=15) (actual time=0.026..23551.916 rows=312389 loops=1)
Q12,1.0,->  Hash Join  (cost=596084.94..3041951.72 rows=291157 width=27) (actual time=8894.731..32771.609 rows=312389 loops=1)
Q12,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=20) (actual time=8816.707..8816.707 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.457..40.836 rows=3973 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.309..25.654 rows=3973 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=26.606..4092.668 rows=317840 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=42.112..4245.416 rows=317840 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.895..41.895 rows=3973 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.533..26.533 rows=3973 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.278..24.992 rows=3973 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.387..40.091 rows=3973 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1826111.21 rows=59593952 width=20) (actual time=0.015..19337.160 rows=59308918 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1824308.60 rows=14937799 width=12) (actual time=0.047..17621.379 rows=14823489 loops=1)
Q10,1.0,->  Hash  (cost=269142.92..269142.92 rows=576987 width=8) (actual time=5538.287..5538.287 rows=574316 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5954.12..269142.92 rows=576987 width=8) (actual time=27.449..5327.335 rows=574316 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.009..0.009 rows=0 loops=405573)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1503174)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.23 rows=1 width=16) (actual time=0.291..0.326 rows=0 loops=4896)
Q19,,->  BitmapOr  (cost=12873.87..12873.87 rows=4750 width=0) (actual time=31.018..31.018 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.36..6270.36 rows=2362 width=0) (actual time=8.760..8.760 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4297.20..4297.20 rows=1585 width=0) (actual time=8.856..8.856 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2305.80..2305.80 rows=803 width=0) (actual time=8.831..8.831 rows=0 loops=1)
