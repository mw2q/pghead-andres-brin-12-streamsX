Q21,715962.0,->  Nested Loop Semi Join  (cost=2406.31..2843299.70 rows=1 width=34) (actual time=32.704..34537.508 rows=715962 loops=1)
Q3,315028.0,->  Sort  (cost=2547483.01..2555358.71 rows=3150280 width=20) (actual time=33533.302..33533.303 rows=10 loops=1)
Q18,301428.6,->  GroupAggregate  (cost=10192791.23..11021719.99 rows=30142864 width=39) (actual time=71315.597..71315.924 rows=100 loops=1)
Q18,67905.0,->  Hash Join  (cost=2185828.15..2801211.98 rows=7537460 width=39) (actual time=46021.112..52309.224 rows=111 loops=1)
Q18,67905.0,->  Hash Join  (cost=2116800.15..2619122.08 rows=7537460 width=20) (actual time=45027.554..51315.363 rows=111 loops=1)
Q18,67905.0,->  Hash  (cost=2801211.98..2801211.98 rows=7537460 width=39) (actual time=52309.416..52309.416 rows=111 loops=1)
Q18,42999.8,->  Sort  (cost=10192791.23..10268148.39 rows=30142864 width=39) (actual time=71315.587..71315.624 rows=701 loops=1)
Q21,40120.0,->  Nested Loop Anti Join  (cost=2406.88..2843301.48 rows=1 width=26) (actual time=35.536..37407.124 rows=40120 loops=1)
Q18,38793.9,->  Hash Join  (cost=2895430.23..5624024.75 rows=30142864 width=39) (actual time=52357.643..71314.587 rows=777 loops=1)
Q18,36493.4,->  Hash  (cost=2066165.43..2066165.43 rows=4050778 width=4) (actual time=44886.370..44886.370 rows=111 loops=1)
Q18,36493.4,->  HashAggregate  (cost=1975022.92..2025657.65 rows=4050778 width=8) (actual time=39170.200..44886.140 rows=111 loops=1)
Q10,28440.3,->  Sort  (cost=2299676.87..2301098.88 rows=568806 width=176) (actual time=30767.615..30767.617 rows=20 loops=1)
Q9,26482.7,->  Sort  (cost=1117775.72..1117776.03 rows=123 width=46) (actual time=97485.398..98108.868 rows=3257373 loops=1)
Q9,26482.7,->  Nested Loop  (cost=66799.54..1117767.59 rows=123 width=24) (actual time=726.055..88048.083 rows=3257373 loops=1)
Q9,26482.7,->  Nested Loop  (cost=66799.11..1117707.97 rows=123 width=24) (actual time=726.037..52409.183 rows=3257373 loops=1)
Q9,26482.7,->  Nested Loop  (cost=66798.82..1117668.28 rows=123 width=28) (actual time=726.027..41936.699 rows=3257373 loops=1)
Q9,26482.7,->  Hash Join  (cost=66801.10..1117771.45 rows=123 width=46) (actual time=726.109..91347.319 rows=3257373 loops=1)
Q2,4746.0,->  Merge Join  (cost=465676.21..878503.82 rows=1 width=190) (actual time=6496.157..8239.402 rows=4746 loops=1)
Q21,4054.0,->  HashAggregate  (cost=2843301.49..2843301.50 rows=1 width=26) (actual time=37463.392..37464.675 rows=4054 loops=1)
Q15,3783.0,->  Subquery Scan on revenue5  (cost=2008848.53..2008933.65 rows=3783 width=12) (actual time=40180.716..40202.246 rows=1 loops=1)
Q15,3783.0,->  Sort  (cost=2009158.46..2009167.92 rows=3783 width=12) (actual time=40202.267..40202.268 rows=1 loops=1)
Q15,3783.0,Merge Join  (cost=4001070.80..4006168.75 rows=3783 width=79) (actual time=40222.731..40222.734 rows=1 loops=1)
Q15,3783.0,->  HashAggregate  (cost=2008848.53..2008895.82 rows=3783 width=12) (actual time=40180.715..40202.243 rows=1 loops=1)
Q7,769.0,Sort  (cost=2133086.01..2133093.70 rows=3076 width=64) (actual time=24581.827..24581.827 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2132861.66..2132907.80 rows=3076 width=64) (actual time=24581.765..24581.769 rows=4 loops=1)
Q8,364.5,Sort  (cost=1766328.26..1766330.08 rows=729 width=38) (actual time=11921.126..11921.127 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1766280.84..1766293.60 rows=729 width=38) (actual time=11921.084..11921.086 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2843301.51..2843301.51 rows=1 width=26) (actual time=37465.844..37465.851 rows=100 loops=1)
Q21,100.0,Limit  (cost=2843301.51..2843301.51 rows=1 width=26) (actual time=37465.845..37465.863 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=878503.83..878503.84 rows=1 width=190) (actual time=8244.125..8244.139 rows=100 loops=1)
Q2,100.0,Limit  (cost=878503.83..878503.84 rows=1 width=190) (actual time=8244.128..8244.154 rows=100 loops=1)
Q11,34.6,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=7841.617..7842.704 rows=9241 loops=1)
Q11,34.6,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=7738.333..7836.463 rows=9241 loops=1)
Q3,27.7,->  HashAggregate  (cost=2447903.80..2479406.60 rows=3150280 width=20) (actual time=33466.121..33512.111 rows=113357 loops=1)
Q15,26.4,->  HashAggregate  (cost=1991826.92..1991864.75 rows=3783 width=12) (actual time=19767.887..19797.292 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=743234)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7812.61 rows=766461 width=0) (actual time=126.169..126.169 rows=10723840 loops=1)
Q3,10.5,->  Hash Join  (cost=767009.31..2400649.60 rows=3150280 width=20) (actual time=8617.588..33219.839 rows=298776 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2421.91 rows=321320 width=0) (actual time=34.780..34.780 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.083 rows=7 loops=434512)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.598..3.598 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.221..4.221 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.237..0.237 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.290..0.290 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.258..0.258 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1199421)
Q5,5.0,Sort  (cost=1974996.84..1974996.90 rows=25 width=34) (actual time=13728.094..13728.095 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1974996.01..1974996.26 rows=25 width=34) (actual time=13728.046..13728.048 rows=5 loops=1)
Q4,5.0,Sort  (cost=1481413.22..1481413.23 rows=1 width=16) (actual time=11676.884..11676.885 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.09 rows=5 width=4) (actual time=0.011..0.011 rows=1 loops=573220)
Q4,5.0,->  HashAggregate  (cost=1481413.20..1481413.21 rows=1 width=16) (actual time=11676.835..11676.836 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=715962)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5773.47 rows=573347 width=0) (actual time=27.482..27.482 rows=2540800 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5780.27 rows=574027 width=0) (actual time=27.560..27.560 rows=2566400 loops=1)
Q13,4.3,Sort  (cost=847369.07..847369.57 rows=200 width=8) (actual time=26172.446..26172.448 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=847359.43..847361.43 rows=200 width=8) (actual time=26172.368..26172.378 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.009..0.011 rows=4 loops=454816)
Q17,3.7,->  Nested Loop  (cost=82.84..114813.38 rows=20397 width=4) (actual time=2.299..227.685 rows=5428 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5917.38..1480641.35 rows=154371 width=16) (actual time=27.667..11396.738 rows=525709 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.016..0.040 rows=3 loops=2016)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61975.04 rows=8258006 width=0) (actual time=27.797..27.797 rows=2561280 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243942.99 rows=32505999 width=0) (actual time=119.933..119.933 rows=10739200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.322..0.394 rows=3 loops=21999)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55352.40 rows=7374987 width=0) (actual time=28.051..28.051 rows=2553600 loops=1)
Q22,2.3,Sort  (cost=694855.89..694855.89 rows=3 width=20) (actual time=9489.581..9489.582 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641866.39..641866.44 rows=3 width=20) (actual time=9489.534..9489.536 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.039..0.054 rows=2 loops=6407)
Q20,2.0,->  Nested Loop  (cost=754.49..11669236.47 rows=29067 width=4) (actual time=13.995..9015.488 rows=59852 loops=1)
Q20,2.0,->  Hash  (cost=11669236.47..11669236.47 rows=29067 width=4) (actual time=9053.393..9053.393 rows=59852 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.213..4.213 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403204.99..404680.03 rows=590015 width=40) (actual time=10538.097..10696.861 rows=1188374 loops=1)
Q16,2.0,->  Hash Join  (cost=54792.75..346650.90 rows=590015 width=40) (actual time=1316.038..6883.149 rows=1188374 loops=1)
Q12,2.0,Sort  (cost=3056182.14..3056182.15 rows=1 width=27) (actual time=33851.614..33851.614 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3056182.12..3056182.13 rows=1 width=27) (actual time=33851.559..33851.559 rows=2 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2323251.22 rows=389239 width=38) (actual time=32.645..30388.819 rows=743234 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902499.01 rows=799298 width=34) (actual time=32.443..22878.012 rows=1536728 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.561..3996.224 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817043.65 rows=20015217 width=8) (actual time=0.012..16526.547 rows=37928797 loops=1)
Q15,1.8,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.035..15.030 rows=53897 loops=1)
Q10,1.8,->  Hash Join  (cost=347299.08..2264632.94 rows=568806 width=176) (actual time=6943.517..28549.301 rows=1079992 loops=1)
Q10,1.8,->  Hash Join  (cost=347297.52..2256810.29 rows=568806 width=154) (actual time=6943.482..28167.364 rows=1079992 loops=1)
Q10,1.8,->  Hash Join  (cost=278269.52..2179250.20 rows=568806 width=12) (actual time=5254.169..25800.094 rows=1079992 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.503 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672042.14..11672045.05 rows=1163 width=51) (actual time=9085.847..9085.946 rows=1774 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669642.81..11671982.92 rows=1163 width=51) (actual time=9053.865..9084.463 rows=1774 loops=1)
Q1,1.5,Sort  (cost=4212304.63..4212304.65 rows=6 width=20) (actual time=89534.541..89534.542 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4212304.45..4212304.55 rows=6 width=20) (actual time=89534.492..89534.494 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2278853.09..2284541.15 rows=568806 width=176) (actual time=30418.726..30633.702 rows=371244 loops=1)
Q9,1.4,GroupAggregate  (cost=1117775.72..1117780.03 rows=123 width=46) (actual time=97495.159..100301.620 rows=175 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.173..4.173 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2909.30 rows=140632 width=0) (actual time=747.041..747.041 rows=190886 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2944.46..41914.05 rows=140632 width=24) (actual time=755.794..906.215 rows=190886 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91636.61 rows=9148861 width=0) (actual time=118.958..118.958 rows=10686720 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=102100 width=4) (actual time=0.016..692.291 rows=108628 loops=1)
Q9,1.0,->  Hash Join  (cost=66798.25..351799.12 rows=404287 width=16) (actual time=725.973..4848.052 rows=434512 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=102100 width=4) (actual time=725.399..725.399 rows=108628 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.722..1929.067 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=427.27..1718167.79 rows=125372 width=20) (actual time=7.366..9588.823 rows=122635 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.84..1515485.10 rows=413929 width=16) (actual time=7.285..5073.494 rows=402152 loops=1)
Q8,1.0,->  Nested Loop  (cost=38757.71..1765309.25 rows=25033 width=16) (actual time=2027.346..11837.569 rows=24564 loops=1)
Q8,1.0,->  Hash Join  (cost=38759.28..1765780.18 rows=25033 width=38) (actual time=2027.395..11877.871 rows=24564 loops=1)
Q8,1.0,->  Hash Join  (cost=38757.42..1757218.83 rows=25074 width=16) (actual time=2027.326..11688.391 rows=24564 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2017.975..2017.975 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.78 rows=13647 width=0) (actual time=4.853..4.853 rows=13417 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=13417)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=422.19..28502.14 rows=13647 width=4) (actual time=7.140..168.767 rows=13417 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.044..0.350 rows=30 loops=13417)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.629..376.670 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=8) (actual time=0.006..2967.428 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2120062.40 rows=1467041 width=42) (actual time=888.832..23725.495 rows=1457820 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2131947.38 rows=60952 width=64) (actual time=937.499..24484.316 rows=58662 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532007.47 rows=1204795 width=30) (actual time=888.672..9924.835 rows=1199421 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.034..843.082 rows=120316 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..46.145 rows=8102 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=888.199..888.199 rows=120316 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=48.516..48.516 rows=8102 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91731.40..1366185.77 rows=379167 width=8) (actual time=119.715..23512.089 rows=381708 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=4.460..2006.065 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=100890.14..1955107.02 rows=1832815 width=46) (actual time=2151.166..12917.929 rows=1817812 loops=1)
Q5,1.0,->  Hash Join  (cost=105569.14..1974264.07 rows=73194 width=34) (actual time=2215.553..13654.386 rows=72678 loops=1)
Q5,1.0,->  Hash Join  (cost=100889.57..493990.24 rows=458316 width=38) (actual time=2151.144..7511.364 rows=454816 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2120.807..2120.807 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=62547.94..442472.03 rows=2291579 width=8) (actual time=27.969..4444.475 rows=2277578 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.251..391.279 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5916.81..268545.02 rows=573347 width=20) (actual time=27.648..4608.742 rows=573220 loops=1)
Q3,1.0,->  Hash Join  (cost=106831.22..496623.12 rows=1465336 width=12) (actual time=633.570..7987.404 rows=1464873 loops=1)
Q3,1.0,->  Hash  (cost=496623.12..496623.12 rows=1465336 width=12) (actual time=8487.518..8487.518 rows=1464873 loops=1)
Q3,1.0,->  Hash  (cost=45909.64..45909.64 rows=298035 width=4) (actual time=603.007..603.007 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6831.69 rows=298035 width=0) (actual time=72.999..72.999 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57196.15..404678.49 rows=7374987 width=16) (actual time=28.215..4651.203 rows=7322287 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=252069.49..1732309.48 rows=32505999 width=12) (actual time=120.676..19262.009 rows=32264034 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6906.20..45909.64 rows=298035 width=4) (actual time=82.293..510.293 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.036..3820.486 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=8374.700..8374.700 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597846.79..641422.38 rows=59202 width=20) (actual time=9203.217..9465.756 rows=63737 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6587.79 rows=383573 width=0) (actual time=91.462..91.462 rows=381781 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6683.69..52030.48 rows=383573 width=4) (actual time=100.866..617.944 rows=381781 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.266..31.153 rows=4054 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.333..32.333 rows=4054 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.253..30.508 rows=4054 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=6495.759..6615.503 rows=1602866 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.309..148.949 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7815 width=30) (actual time=0.177..955.666 rows=8084 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=160.410..5355.668 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=160.281..160.281 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.258..28.932 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.316..29.143 rows=3961 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.534..9.534 rows=21999 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.298..28.539 rows=3961 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=13.248..307.903 rows=21999 loops=1)
Q19,1.0,->  Nested Loop  (cost=12874.39..611406.32 rows=1132 width=8) (actual time=33.807..1984.159 rows=1154 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.175..4.175 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.35 rows=8065 width=0) (actual time=3.627..3.627 rows=7966 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.35 rows=7964 width=0) (actual time=3.371..3.371 rows=7858 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..271.95 rows=7824 width=0) (actual time=3.703..3.703 rows=8112 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12873.83..26549.50 rows=4748 width=30) (actual time=33.324..292.130 rows=4845 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.005..3125.338 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673594.28 rows=60285728 width=8) (actual time=0.008..9904.095 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673594.28 rows=60285728 width=8) (actual time=0.016..8830.329 rows=60046221 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.031..0.056 rows=30 loops=2016)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.031..0.056 rows=30 loops=2016)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.57 rows=2014 width=0) (actual time=1.271..1.271 rows=2016 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.07..6668.16 rows=2014 width=4) (actual time=1.658..15.694 rows=2016 loops=1)
Q16,1.0,Sort  (cost=412922.87..412992.71 rows=27939 width=40) (actual time=11355.459..11358.795 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51051.41..51051.41 rows=298009 width=40) (actual time=1312.977..1312.977 rows=297258 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403204.99..410859.57 rows=27939 width=40) (actual time=10538.151..11295.893 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2496.41..51051.41 rows=298009 width=40) (actual time=34.850..1189.079 rows=297258 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1969131.44 rows=2269548 width=12) (actual time=0.017..17966.257 rows=2250213 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1969131.44 rows=2269548 width=12) (actual time=0.014..18491.907 rows=2250213 loops=1)
Q14,1.0,->  Hash Join  (cost=93526.23..1145921.50 rows=766461 width=29) (actual time=1825.065..25002.196 rows=772370 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8004.23..1048902.58 rows=766461 width=12) (actual time=127.132..22432.196 rows=772370 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..443852.85 rows=14848929 width=8) (actual time=0.018..7408.308 rows=14838943 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..735614.79 rows=14848929 width=8) (actual time=806.608..17000.529 rows=15338965 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=20) (actual time=0.014..4406.173 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2444051.40 rows=292828 width=15) (actual time=0.177..23597.391 rows=312624 loops=1)
Q12,1.0,->  Hash Join  (cost=597855.36..3051057.63 rows=292828 width=27) (actual time=9606.073..33525.625 rows=312624 loops=1)
Q12,1.0,->  Hash  (cost=408106.27..408106.27 rows=15179927 width=20) (actual time=9532.219..9532.219 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.351..40.672 rows=4010 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.319..25.593 rows=4010 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=26.604..3789.077 rows=320800 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=41.844..3596.225 rows=320800 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.765..41.765 rows=4010 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.511..26.511 rows=4010 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.290..24.956 rows=4010 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.330..39.965 rows=4010 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831525.85 rows=59519465 width=20) (actual time=0.014..18880.334 rows=59064546 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1838829.99 rows=15056703 width=12) (actual time=0.034..17295.093 rows=14822649 loops=1)
Q10,1.0,->  Hash  (cost=271094.18..271094.18 rows=574027 width=8) (actual time=5249.482..5249.482 rows=561703 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5923.78..271094.18 rows=574027 width=8) (actual time=27.742..5048.455 rows=561703 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=402152)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1536728)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.17 rows=1 width=16) (actual time=0.311..0.348 rows=0 loops=4845)
Q19,,->  BitmapOr  (cost=12873.83..12873.83 rows=4752 width=0) (actual time=29.432..29.432 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6287.04..6287.04 rows=2382 width=0) (actual time=8.309..8.309 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.04..4280.04 rows=1562 width=0) (actual time=8.691..8.691 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2306.24..2306.24 rows=807 width=0) (actual time=8.646..8.646 rows=0 loops=1)
