Q21,700640.0,->  Nested Loop Semi Join  (cost=2406.31..2871825.74 rows=1 width=34) (actual time=45.250..37833.525 rows=700640 loops=1)
Q18,401502.1,->  GroupAggregate  (cost=10182616.44..11010714.54 rows=30112658 width=39) (actual time=72788.901..72789.151 rows=75 loops=1)
Q3,319620.9,->  Sort  (cost=2565586.54..2573577.06 rows=3196209 width=20) (actual time=36350.789..36350.790 rows=10 loops=1)
Q18,100399.5,->  Hash Join  (cost=2183848.96..2798661.38 rows=7529968 width=39) (actual time=46950.810..53060.836 rows=75 loops=1)
Q18,100399.5,->  Hash Join  (cost=2114820.96..2616683.85 rows=7529968 width=20) (actual time=45814.811..51924.541 rows=75 loops=1)
Q18,100399.5,->  Hash  (cost=2798661.38..2798661.38 rows=7529968 width=39) (actual time=53061.046..53061.046 rows=75 loops=1)
Q18,57357.4,->  Sort  (cost=10182616.44..10257898.09 rows=30112658 width=39) (actual time=72788.890..72788.917 rows=525 loops=1)
Q18,57357.4,->  Hash Join  (cost=2892785.98..5618646.13 rows=30112658 width=39) (actual time=53495.465..72788.044 rows=525 loops=1)
Q18,54010.3,->  Hash  (cost=2064186.23..2064186.23 rows=4050778 width=4) (actual time=45681.880..45681.880 rows=75 loops=1)
Q18,54010.3,->  HashAggregate  (cost=1973043.73..2023678.45 rows=4050778 width=8) (actual time=38924.059..45681.668 rows=75 loops=1)
Q21,39560.0,->  Nested Loop Anti Join  (cost=2406.88..2871827.52 rows=1 width=26) (actual time=46.147..40677.536 rows=39560 loops=1)
Q10,28844.3,->  Sort  (cost=2300795.60..2302237.81 rows=576886 width=176) (actual time=29313.522..29313.526 rows=20 loops=1)
Q9,27184.3,->  Sort  (cost=1101590.98..1101591.28 rows=120 width=46) (actual time=93283.130..93947.685 rows=3262124 loops=1)
Q9,27184.3,->  Nested Loop  (cost=66774.52..1101583.02 rows=120 width=24) (actual time=984.663..83971.128 rows=3262124 loops=1)
Q9,27184.3,->  Nested Loop  (cost=66774.08..1101524.86 rows=120 width=24) (actual time=984.644..53731.245 rows=3262124 loops=1)
Q9,27184.3,->  Nested Loop  (cost=66773.79..1101486.14 rows=120 width=28) (actual time=984.634..43285.395 rows=3262124 loops=1)
Q9,27184.3,->  Hash Join  (cost=66776.08..1101586.83 rows=120 width=46) (actual time=984.714..87176.723 rows=3262124 loops=1)
Q2,4739.0,->  Merge Join  (cost=465676.21..884512.82 rows=1 width=190) (actual time=6593.217..8639.476 rows=4739 loops=1)
Q21,3973.0,->  HashAggregate  (cost=2871827.52..2871827.53 rows=1 width=26) (actual time=40733.012..40734.288 rows=3973 loops=1)
Q15,3771.0,->  Subquery Scan on revenue12  (cost=1586374.80..1586459.65 rows=3771 width=12) (actual time=47319.084..47329.417 rows=1 loops=1)
Q15,3771.0,->  Sort  (cost=1586683.66..1586693.09 rows=3771 width=12) (actual time=47329.439..47329.440 rows=1 loops=1)
Q15,3771.0,Merge Join  (cost=3155988.02..3161085.79 rows=3771 width=79) (actual time=47337.934..47337.939 rows=1 loops=1)
Q15,3771.0,->  HashAggregate  (cost=1586374.80..1586421.94 rows=3771 width=12) (actual time=47319.084..47329.416 rows=1 loops=1)
Q7,769.0,Sort  (cost=2130985.00..2130992.69 rows=3076 width=64) (actual time=24272.648..24272.649 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2130760.66..2130806.80 rows=3076 width=64) (actual time=24272.585..24272.593 rows=4 loops=1)
Q8,364.5,Sort  (cost=1711883.23..1711885.05 rows=729 width=38) (actual time=11420.157..11420.157 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1711835.81..1711848.57 rows=729 width=38) (actual time=11420.117..11420.118 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2871827.54..2871827.55 rows=1 width=26) (actual time=40735.512..40735.519 rows=100 loops=1)
Q21,100.0,Limit  (cost=2871827.54..2871827.55 rows=1 width=26) (actual time=40735.513..40735.530 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=884512.83..884512.84 rows=1 width=190) (actual time=8644.437..8644.447 rows=100 loops=1)
Q2,100.0,Limit  (cost=884512.83..884512.84 rows=1 width=190) (actual time=8644.438..8644.459 rows=100 loops=1)
Q11,38.0,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=7756.571..7757.566 rows=8406 loops=1)
Q11,38.0,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=7674.364..7752.019 rows=8406 loops=1)
Q3,28.3,->  HashAggregate  (cost=2464555.52..2496517.61 rows=3196209 width=20) (actual time=36281.841..36329.683 rows=112937 loops=1)
Q15,26.5,->  HashAggregate  (cost=1569219.21..1569256.92 rows=3771 width=12) (actual time=21848.432..21889.780 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=726904)
Q14,13.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7992.46 rows=784446 width=0) (actual time=123.241..123.241 rows=10792960 loops=1)
Q3,10.7,->  Hash Join  (cost=771163.86..2416612.38 rows=3196209 width=20) (actual time=8893.181..36006.407 rows=298179 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2419.01 rows=320933 width=0) (actual time=34.857..34.857 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.085 rows=8 loops=434616)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.663..3.663 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.088..4.088 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.237..0.237 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.296..0.296 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.271..0.271 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.260..0.260 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.009..0.010 rows=1 loops=1200344)
Q5,5.0,Sort  (cost=1926686.61..1926686.67 rows=25 width=34) (actual time=14342.222..14342.222 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1926685.78..1926686.03 rows=25 width=34) (actual time=14342.181..14342.181 rows=5 loops=1)
Q4,5.0,Sort  (cost=1492221.66..1492221.66 rows=1 width=16) (actual time=12111.224..12111.224 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=573798)
Q4,5.0,->  HashAggregate  (cost=1492221.64..1492221.65 rows=1 width=16) (actual time=12111.174..12111.174 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=700640)
Q15,5.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.032..6.343 rows=19933 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5838.59 rows=579859 width=0) (actual time=27.587..27.587 rows=2558720 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5861.81 rows=582181 width=0) (actual time=27.473..27.473 rows=2566400 loops=1)
Q13,4.3,Sort  (cost=853762.39..853762.89 rows=200 width=8) (actual time=29679.078..29679.081 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=853752.75..853754.75 rows=200 width=8) (actual time=29679.004..29679.013 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.010..0.012 rows=4 loops=456771)
Q17,3.7,->  Nested Loop  (cost=83.02..115818.57 rows=20396 width=4) (actual time=1.746..209.176 rows=5391 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5984.12..1491446.43 rows=155042 width=16) (actual time=27.794..11824.836 rows=525968 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.015..0.038 rows=3 loops=2006)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..246714.05 rows=32875473 width=0) (actual time=124.209..124.209 rows=10792960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.301..0.370 rows=3 loops=21473)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55229.95 rows=7358659 width=0) (actual time=28.034..28.034 rows=2566400 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44788.20 rows=5966427 width=0) (actual time=27.514..27.514 rows=2561280 loops=1)
Q22,2.3,Sort  (cost=694150.68..694150.69 rows=3 width=20) (actual time=9478.328..9478.329 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641220.31..641220.36 rows=3 width=20) (actual time=9478.284..9478.285 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.038..0.054 rows=2 loops=6431)
Q20,2.0,->  Nested Loop  (cost=754.49..11669236.47 rows=29067 width=4) (actual time=13.103..8124.711 rows=58344 loops=1)
Q20,2.0,->  Hash  (cost=11669236.47..11669236.47 rows=29067 width=4) (actual time=8160.179..8160.179 rows=58344 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.189..4.189 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403076.26..404548.87 rows=589043 width=40) (actual time=10280.394..10447.162 rows=1189442 loops=1)
Q16,2.0,->  Hash Join  (cost=54773.91..346622.34 rows=589043 width=40) (actual time=1289.432..6731.240 rows=1189442 loops=1)
Q12,2.0,Sort  (cost=3038186.07..3038186.07 rows=1 width=27) (actual time=33763.689..33763.689 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3038186.05..3038186.06 rows=1 width=27) (actual time=33763.639..33763.640 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.570..3765.783 rows=7995520 loops=1)
Q15,1.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..155603.08 rows=20727344 width=0) (actual time=122.901..122.901 rows=10792960 loops=1)
Q15,1.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..155603.08 rows=20727344 width=0) (actual time=119.356..119.356 rows=10792960 loops=1)
Q10,1.9,->  Hash Join  (cost=347606.90..2265253.86 rows=576886 width=176) (actual time=6162.673..27096.421 rows=1138104 loops=1)
Q10,1.9,->  Hash Join  (cost=347605.34..2257320.11 rows=576886 width=154) (actual time=6162.642..26700.485 rows=1138104 loops=1)
Q10,1.9,->  Hash Join  (cost=278577.34..2179638.82 rows=576886 width=12) (actual time=4826.377..24685.641 rows=1138104 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1835178.76 rows=20214980 width=8) (actual time=0.014..18389.480 rows=37965800 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2346480.36 rows=393124 width=38) (actual time=45.181..33017.677 rows=726904 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1921463.00 rows=807275 width=34) (actual time=45.059..25579.457 rows=1506868 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.524 rows=56 loops=1)
Q1,1.5,Sort  (cost=4183688.07..4183688.09 rows=6 width=20) (actual time=88795.856..88795.857 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4183687.89..4183688.00 rows=6 width=20) (actual time=88795.802..88795.804 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2279676.01..2285444.87 rows=576886 width=176) (actual time=28984.398..29177.106 rows=379020 loops=1)
Q9,1.4,GroupAggregate  (cost=1101590.98..1101595.18 rows=120 width=46) (actual time=93293.466..96182.901 rows=175 loops=1)
Q20,1.4,Sort  (cost=11672042.14..11672045.05 rows=1163 width=51) (actual time=8192.284..8192.379 rows=1737 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11669642.81..11671982.92 rows=1163 width=51) (actual time=8160.608..8190.820 rows=1737 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.165..4.165 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2877.80 rows=140278 width=0) (actual time=739.216..739.216 rows=190546 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2912.87..41873.17 rows=140278 width=24) (actual time=748.007..1205.921 rows=190546 loops=1)
Q18,1.3,Limit  (cost=10182616.44..10182619.19 rows=100 width=39) (actual time=72788.904..72789.160 rows=75 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92517.61 rows=9236961 width=0) (actual time=119.815..119.815 rows=10728960 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=100098 width=4) (actual time=0.008..939.573 rows=108654 loops=1)
Q9,1.0,->  Hash Join  (cost=66773.23..351694.82 rows=396359 width=16) (actual time=984.557..5278.659 rows=434616 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=100098 width=4) (actual time=984.081..984.081 rows=108654 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=4.045..2187.618 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.42..1664108.20 rows=120429 width=20) (actual time=9.232..8827.811 rows=122188 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.98..1469422.52 rows=397607 width=16) (actual time=8.236..4906.814 rows=400480 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.86..1710902.46 rows=24046 width=16) (actual time=2301.463..11340.843 rows=24487 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.23 rows=31 width=20) (actual time=0.026..0.349 rows=30 loops=13332)
Q8,1.0,->  Hash Join  (cost=38739.42..1711354.89 rows=24046 width=38) (actual time=2301.536..11379.766 rows=24487 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.57..1703130.81 rows=24086 width=16) (actual time=2301.446..11195.985 rows=24487 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2288.650..2288.650 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..403.13 rows=13160 width=0) (actual time=5.568..5.568 rows=13332 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.42..27904.95 rows=13160 width=4) (actual time=8.195..131.537 rows=13332 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.699..427.036 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.005..4472.995 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2117970.36 rows=1465589 width=42) (actual time=872.378..23496.787 rows=1459958 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2129847.28 rows=60892 width=64) (actual time=916.546..24178.242 rows=58145 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=872.356..10771.190 rows=1200344 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..826.580 rows=119921 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.039..41.243 rows=7976 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=871.886..871.886 rows=119921 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=43.385..43.385 rows=7976 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92710.59..1373396.22 rows=771935 width=8) (actual time=120.622..23206.810 rows=765308 loops=1)
Q5,1.0,->  Nested Loop  (cost=83707.06..1906696.73 rows=1844873 width=46) (actual time=2166.330..13544.412 rows=1826607 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=4.527..2021.214 rows=300270 loops=1)
Q5,1.0,->  Hash Join  (cost=88386.06..1925949.03 rows=73675 width=34) (actual time=2230.333..14261.238 rows=72842 loops=1)
Q5,1.0,->  Hash Join  (cost=83706.50..442520.17 rows=461331 width=38) (actual time=2166.275..7404.485 rows=456771 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2136.664..2136.664 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45364.86..390915.27 rows=2306655 width=8) (actual time=27.679..4318.795 rows=2284200 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.124..394.195 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5983.56..270482.44 rows=579859 width=20) (actual time=27.756..4651.932 rows=573798 loops=1)
Q3,1.0,->  Hash Join  (cost=106854.05..497765.00 rows=1477275 width=12) (actual time=444.282..8275.669 rows=1449098 loops=1)
Q3,1.0,->  Hash  (cost=497765.00..497765.00 rows=1477275 width=12) (actual time=8758.996..8758.996 rows=1449098 loops=1)
Q3,1.0,->  Hash  (cost=46020.31..46020.31 rows=301130 width=4) (actual time=413.708..413.708 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6902.90 rows=301130 width=0) (actual time=67.893..67.893 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57069.61..405612.85 rows=7358659 width=16) (actual time=28.198..5045.971 rows=7264912 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=254932.92..1745136.33 rows=32875473 width=12) (actual time=124.969..21384.908 rows=32432334 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6978.19..46020.31 rows=301130 width=4) (actual time=76.900..325.863 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=4) (actual time=0.015..3434.865 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=4) (actual time=8046.147..8046.147 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597222.71..640777.41 rows=59053 width=20) (actual time=8863.696..9450.338 rows=63463 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6556.60 rows=382610 width=0) (actual time=87.486..87.486 rows=381748 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6652.25..51973.77 rows=382610 width=4) (actual time=96.261..609.493 rows=381748 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.326..43.785 rows=3973 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=45.012..45.012 rows=3973 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.311..43.163 rows=3973 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=6592.092..6710.339 rows=1603965 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.308..146.682 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7971 width=30) (actual time=0.728..1257.324 rows=7994 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=158.018..5448.698 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=157.882..157.882 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.252..28.490 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.278..28.706 rows=3974 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=8.693..8.693 rows=21473 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.261..28.109 rows=3974 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.383..150.639 rows=21473 loops=1)
Q19,1.0,->  Nested Loop  (cost=12857.08..609073.88 rows=1136 width=8) (actual time=35.927..1664.590 rows=1138 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.160..4.160 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.23 rows=8051 width=0) (actual time=3.613..3.613 rows=8040 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.39 rows=7869 width=0) (actual time=3.578..3.578 rows=7928 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..271.75 rows=7804 width=0) (actual time=3.427..3.427 rows=8051 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12856.52..26483.68 rows=4726 width=30) (actual time=32.798..140.386 rows=4834 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=16) (actual time=0.007..2599.796 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1671917.15 rows=60225315 width=8) (actual time=0.005..8763.842 rows=60045303 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1671917.15 rows=60225315 width=8) (actual time=0.012..8319.006 rows=60045303 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.041 rows=30 loops=2006)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.041 rows=30 loops=2006)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.75 rows=2032 width=0) (actual time=1.041..1.041 rows=2006 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.26..6719.72 rows=2032 width=4) (actual time=1.377..34.528 rows=2006 loops=1)
Q16,1.0,Sort  (cost=412777.80..412847.53 rows=27893 width=40) (actual time=11102.852..11105.958 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51038.71..51038.71 rows=297518 width=40) (actual time=1286.399..1286.399 rows=297536 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403076.26..410718.23 rows=27893 width=40) (actual time=10280.454..11043.630 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2493.39..51038.71 rows=297518 width=40) (actual time=34.925..1162.141 rows=297536 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=156174.93..1546345.09 rows=2287412 width=12) (actual time=120.116..19901.593 rows=2244123 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=156174.93..1546345.09 rows=2287412 width=12) (actual time=123.678..23226.634 rows=2244123 loops=1)
Q14,1.0,->  Hash Join  (cost=93710.57..1158397.01 rows=784446 width=29) (actual time=1369.317..26874.729 rows=773357 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8188.57..1061108.32 rows=784446 width=12) (actual time=124.095..24796.157 rows=773357 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446056.09 rows=15058433 width=8) (actual time=0.017..7627.193 rows=14852702 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740960.58 rows=15058433 width=8) (actual time=1125.583..18479.675 rows=15352723 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=20) (actual time=0.015..4199.480 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2429564.18 rows=293580 width=15) (actual time=0.081..23794.875 rows=312879 loops=1)
Q12,1.0,->  Hash Join  (cost=594309.84..3033048.40 rows=293580 width=27) (actual time=9333.154..33441.487 rows=312879 loops=1)
Q12,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=20) (actual time=9278.656..9278.656 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.306..25.741 rows=4095 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.303..40.231 rows=4095 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=26.724..3283.557 rows=327600 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=41.324..4046.667 rows=327600 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.258..41.258 rows=4095 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.659..26.659 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.275..25.063 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.286..39.555 rows=4095 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.65 rows=59166106 width=20) (actual time=8.245..18331.971 rows=59104307 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1838829.99 rows=15056703 width=12) (actual time=0.055..16906.513 rows=14822649 loops=1)
Q10,1.0,->  Hash  (cost=271300.07..271300.07 rows=582181 width=8) (actual time=4822.975..4822.975 rows=568623 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6007.36..271300.07 rows=582181 width=8) (actual time=27.637..4655.741 rows=568623 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.009..0.009 rows=0 loops=400480)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1506868)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.26 rows=1 width=16) (actual time=0.280..0.314 rows=0 loops=4834)
Q19,,->  BitmapOr  (cost=12856.52..12856.52 rows=4730 width=0) (actual time=28.991..28.991 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6269.43..6269.43 rows=2335 width=0) (actual time=8.256..8.256 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4298.31..4298.31 rows=1608 width=0) (actual time=8.473..8.473 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.27..2288.27 rows=787 width=0) (actual time=8.472..8.472 rows=0 loops=1)
