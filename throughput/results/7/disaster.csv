Q21,694310.0,->  Nested Loop Semi Join  (cost=2406.31..2849012.73 rows=1 width=34) (actual time=37.139..35949.458 rows=694310 loops=1)
Q18,400304.3,->  GroupAggregate  (cost=10152340.69..10977968.40 rows=30022826 width=39) (actual time=68181.397..68181.650 rows=75 loops=1)
Q3,317533.0,->  Sort  (cost=2553167.95..2561106.27 rows=3175330 width=20) (actual time=37523.151..37523.153 rows=10 loops=1)
Q18,100099.8,->  Hash Join  (cost=2177963.01..2791061.20 rows=7507492 width=39) (actual time=44285.062..50082.245 rows=75 loops=1)
Q18,100099.8,->  Hash Join  (cost=2108935.01..2609420.82 rows=7507492 width=20) (actual time=43147.259..48944.174 rows=75 loops=1)
Q18,100099.8,->  Hash  (cost=2791061.20..2791061.20 rows=7507492 width=39) (actual time=50082.406..50082.406 rows=75 loops=1)
Q18,57186.3,->  Sort  (cost=10152340.69..10227397.75 rows=30022826 width=39) (actual time=68181.386..68181.418 rows=525 loops=1)
Q18,57186.3,->  Hash Join  (cost=2884904.85..5602633.28 rows=30022826 width=39) (actual time=50442.615..68180.617 rows=525 loops=1)
Q18,54010.3,->  Hash  (cost=2058300.28..2058300.28 rows=4050778 width=4) (actual time=43012.469..43012.469 rows=75 loops=1)
Q18,54010.3,->  HashAggregate  (cost=1967157.78..2017792.50 rows=4050778 width=8) (actual time=37504.726..43012.312 rows=75 loops=1)
Q21,39074.0,->  Nested Loop Anti Join  (cost=2406.88..2849014.51 rows=1 width=26) (actual time=39.455..38649.773 rows=39074 loops=1)
Q10,28691.0,->  Sort  (cost=2298232.22..2299666.77 rows=573820 width=176) (actual time=30923.026..30923.030 rows=20 loops=1)
Q9,21101.0,->  Sort  (cost=1327953.28..1327953.67 rows=155 width=46) (actual time=94483.564..95119.096 rows=3270670 loops=1)
Q9,21101.0,->  Nested Loop  (cost=67150.05..1327943.18 rows=155 width=24) (actual time=696.699..85243.809 rows=3270670 loops=1)
Q9,21101.0,->  Nested Loop  (cost=67149.62..1327868.05 rows=155 width=24) (actual time=696.680..54297.666 rows=3270670 loops=1)
Q9,21101.0,->  Nested Loop  (cost=67149.33..1327818.04 rows=155 width=28) (actual time=696.667..43586.268 rows=3270670 loops=1)
Q9,21101.0,->  Hash Join  (cost=67151.62..1327947.64 rows=155 width=46) (actual time=696.763..88492.833 rows=3270670 loops=1)
Q2,4765.0,->  Merge Join  (cost=465676.21..886613.53 rows=1 width=190) (actual time=6426.239..8343.975 rows=4765 loops=1)
Q21,3933.0,->  HashAggregate  (cost=2849014.52..2849014.53 rows=1 width=26) (actual time=38698.972..38700.015 rows=3933 loops=1)
Q15,3758.0,->  Subquery Scan on revenue7  (cost=2030636.07..2030720.63 rows=3758 width=12) (actual time=40782.789..40808.570 rows=1 loops=1)
Q15,3758.0,->  Sort  (cost=2030943.78..2030953.17 rows=3758 width=12) (actual time=40808.592..40808.593 rows=1 loops=1)
Q15,3758.0,Merge Join  (cost=4044568.10..4049665.67 rows=3758 width=79) (actual time=40823.953..40823.957 rows=1 loops=1)
Q15,3758.0,->  HashAggregate  (cost=2030636.07..2030683.05 rows=3758 width=12) (actual time=40782.788..40808.568 rows=1 loops=1)
Q7,769.0,Sort  (cost=2147828.24..2147835.93 rows=3076 width=64) (actual time=23666.270..23666.271 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2147603.90..2147650.04 rows=3076 width=64) (actual time=23666.202..23666.208 rows=4 loops=1)
Q8,364.5,Sort  (cost=1668355.81..1668357.63 rows=729 width=38) (actual time=11553.287..11553.287 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1668308.39..1668321.14 rows=729 width=38) (actual time=11553.247..11553.249 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2849014.54..2849014.54 rows=1 width=26) (actual time=38701.140..38701.148 rows=100 loops=1)
Q21,100.0,Limit  (cost=2849014.54..2849014.54 rows=1 width=26) (actual time=38701.142..38701.159 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=886613.54..886613.54 rows=1 width=190) (actual time=8348.809..8348.823 rows=100 loops=1)
Q2,100.0,Limit  (cost=886613.54..886613.54 rows=1 width=190) (actual time=8348.811..8348.832 rows=100 loops=1)
Q11,33.1,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=8312.482..8313.606 rows=9650 loops=1)
Q11,33.1,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=8224.249..8307.198 rows=9650 loops=1)
Q3,27.8,->  HashAggregate  (cost=2452796.91..2484550.21 rows=3175330 width=20) (actual time=37454.549..37502.096 rows=114136 loops=1)
Q15,26.6,->  HashAggregate  (cost=2013539.47..2013577.05 rows=3758 width=12) (actual time=19964.073..19994.990 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=720767)
Q14,14.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7664.33 rows=751633 width=0) (actual time=120.015..120.015 rows=10792960 loops=1)
Q3,10.5,->  Hash Join  (cost=768740.93..2405166.96 rows=3175330 width=20) (actual time=8392.248..37161.235 rows=302122 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2392.11 rows=317347 width=0) (actual time=35.634..35.634 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.017..0.086 rows=8 loops=435800)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.592..3.592 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.338..4.338 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.266..0.266 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.271..0.271 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.252..0.252 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1193605)
Q5,5.0,Sort  (cost=1974996.84..1974996.90 rows=25 width=34) (actual time=15330.647..15330.648 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1974996.01..1974996.26 rows=25 width=34) (actual time=15330.595..15330.596 rows=5 loops=1)
Q4,5.0,Sort  (cost=1485159.66..1485159.67 rows=1 width=16) (actual time=14657.492..14657.492 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.07 rows=5 width=4) (actual time=0.015..0.015 rows=1 loops=574203)
Q4,5.0,->  HashAggregate  (cost=1485159.64..1485159.65 rows=1 width=16) (actual time=14657.447..14657.448 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=694310)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5804.14 rows=576414 width=0) (actual time=27.422..27.422 rows=2543360 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5830.92 rows=579092 width=0) (actual time=27.552..27.552 rows=2563840 loops=1)
Q13,4.3,Sort  (cost=850183.95..850184.45 rows=200 width=8) (actual time=26812.125..26812.127 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=850174.31..850176.31 rows=200 width=8) (actual time=26812.054..26812.063 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.011..0.013 rows=4 loops=454882)
Q17,3.7,->  Nested Loop  (cost=83.10..116268.52 rows=20497 width=4) (actual time=1.524..213.328 rows=5400 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5948.81..1484384.43 rows=155042 width=16) (actual time=27.639..14337.908 rows=526507 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.017..0.040 rows=3 loops=2001)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61975.04 rows=8258006 width=0) (actual time=27.477..27.477 rows=2561280 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..244130.49 rows=32530999 width=0) (actual time=119.362..119.362 rows=10760960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.300..0.370 rows=3 loops=21569)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55556.17 rows=7402155 width=0) (actual time=29.092..29.092 rows=2558720 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.033..11.824 rows=36837 loops=1)
Q22,2.3,Sort  (cost=693557.96..693557.97 rows=3 width=20) (actual time=8799.827..8799.827 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=640629.09..640629.13 rows=3 width=20) (actual time=8799.780..8799.780 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.037..0.053 rows=2 loops=6449)
Q20,2.0,->  Nested Loop  (cost=754.49..11669236.47 rows=29067 width=4) (actual time=13.425..8291.225 rows=58468 loops=1)
Q20,2.0,->  Hash  (cost=11669236.47..11669236.47 rows=29067 width=4) (actual time=8324.847..8324.847 rows=58468 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.206..4.206 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402268.17..403726.31 rows=583254 width=40) (actual time=10091.953..10231.737 rows=1188260 loops=1)
Q16,2.0,->  Hash Join  (cost=54620.08..346410.62 rows=583254 width=40) (actual time=1341.576..6633.747 rows=1188260 loops=1)
Q12,2.0,Sort  (cost=3059045.50..3059045.50 rows=1 width=27) (actual time=33676.574..33676.575 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3059045.48..3059045.49 rows=1 width=27) (actual time=33676.526..33676.527 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=347237.29..2262879.37 rows=573820 width=176) (actual time=6872.225..28569.501 rows=1149462 loops=1)
Q10,2.0,->  Hash Join  (cost=347235.72..2254987.78 rows=573820 width=154) (actual time=6872.194..28165.595 rows=1149462 loops=1)
Q10,2.0,->  Hash Join  (cost=278207.72..2177352.48 rows=573820 width=12) (actual time=5212.688..25772.833 rows=1149462 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.590..3757.978 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1820676.12 rows=20055230 width=8) (actual time=0.015..17595.713 rows=37928885 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2327903.98 rows=390017 width=38) (actual time=37.073..31855.253 rows=720767 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1906297.51 rows=800896 width=34) (actual time=36.981..23896.946 rows=1491961 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.043..0.549 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672042.14..11672045.05 rows=1163 width=51) (actual time=8367.224..8367.324 rows=1846 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669642.81..11671982.92 rows=1163 width=51) (actual time=8325.292..8365.538 rows=1846 loops=1)
Q1,1.5,Sort  (cost=4182361.70..4182361.72 rows=6 width=20) (actual time=89084.114..89084.114 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4182361.52..4182361.63 rows=6 width=20) (actual time=89084.065..89084.066 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2277224.87..2282963.07 rows=573820 width=176) (actual time=30550.875..30785.555 rows=381996 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.181..4.181 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2877.66 rows=140263 width=0) (actual time=469.256..469.256 rows=190546 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2912.73..41872.63 rows=140263 width=24) (actual time=477.926..575.301 rows=190546 loops=1)
Q18,1.3,Limit  (cost=10152340.69..10152343.44 rows=100 width=39) (actual time=68181.400..68181.661 rows=75 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=130141 width=4) (actual time=0.012..660.044 rows=108950 loops=1)
Q9,1.1,->  Hash Join  (cost=67148.76..353259.97 rows=515321 width=16) (actual time=696.527..4925.646 rows=435800 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=130141 width=4) (actual time=695.993..695.993 rows=108950 loops=1)
Q9,1.1,GroupAggregate  (cost=1327953.28..1327958.71 rows=155 width=46) (actual time=94493.781..97350.053 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92548.84 rows=9240084 width=0) (actual time=120.099..120.099 rows=10792960 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.738..2104.364 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=396.47..1620891.63 rows=116446 width=20) (actual time=6.757..9043.396 rows=119819 loops=1)
Q8,1.0,->  Nested Loop  (cost=396.04..1432645.32 rows=384459 width=16) (actual time=6.657..3525.660 rows=392802 loops=1)
Q8,1.0,->  Nested Loop  (cost=38726.91..1667405.85 rows=23251 width=16) (actual time=2207.338..11474.945 rows=24135 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.64 rows=31 width=20) (actual time=0.025..0.247 rows=30 loops=13075)
Q8,1.0,->  Hash Join  (cost=38728.48..1667843.37 rows=23251 width=38) (actual time=2207.387..11513.521 rows=24135 loops=1)
Q8,1.0,->  Hash Join  (cost=38726.62..1659891.35 rows=23289 width=16) (actual time=2207.289..11311.355 rows=24135 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2197.516..2197.516 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..392.28 rows=12780 width=0) (actual time=4.385..4.385 rows=13075 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=395.47..27427.83 rows=12780 width=4) (actual time=6.610..165.809 rows=13075 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.625..410.934 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=8) (actual time=0.006..3077.840 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2134741.46 rows=1477263 width=42) (actual time=877.753..22922.154 rows=1453489 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2146683.24 rows=61377 width=64) (actual time=925.558..23572.532 rows=58453 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..535308.32 rows=1213195 width=30) (actual time=877.728..9038.750 rows=1193605 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..831.107 rows=119836 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..45.323 rows=8020 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=877.214..877.214 rows=119836 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=47.574..47.574 rows=8020 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92749.72..1379911.61 rows=803546 width=8) (actual time=121.003..23673.511 rows=794936 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=4.864..2101.379 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=100890.14..1955107.02 rows=1832815 width=46) (actual time=2242.152..14512.809 rows=1817843 loops=1)
Q5,1.0,->  Hash Join  (cost=105569.14..1974264.07 rows=73194 width=34) (actual time=2317.397..15252.235 rows=72824 loops=1)
Q5,1.0,->  Hash Join  (cost=100889.57..493990.24 rows=458316 width=38) (actual time=2242.130..7920.488 rows=454882 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2212.268..2212.268 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=62547.94..442472.03 rows=2291579 width=8) (actual time=27.639..4812.452 rows=2277578 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.375..409.999 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5948.24..268875.45 rows=576414 width=20) (actual time=27.597..5418.867 rows=574203 loops=1)
Q3,1.0,->  Hash Join  (cost=107119.16..497992.96 rows=1478778 width=12) (actual time=731.285..7793.074 rows=1470814 loops=1)
Q3,1.0,->  Hash  (cost=497992.96..497992.96 rows=1478778 width=12) (actual time=8265.787..8265.787 rows=1470814 loops=1)
Q3,1.0,->  Hash  (cost=45966.64..45966.64 rows=299665 width=4) (actual time=700.069..700.069 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6867.91 rows=299665 width=0) (actual time=70.576..70.576 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57406.70..405734.64 rows=7402155 width=16) (actual time=29.253..4689.862 rows=7334767 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=252263.24..1734944.73 rows=32530999 width=12) (actual time=120.120..22737.116 rows=32213674 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6942.83..45966.64 rows=299665 width=4) (actual time=79.464..608.754 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=4) (actual time=0.011..4054.694 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=4) (actual time=8055.136..8055.136 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=596632.43..640186.24 rows=59047 width=20) (actual time=8578.319..8779.175 rows=63383 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6556.29 rows=382569 width=0) (actual time=93.338..93.338 rows=381905 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6651.93..51972.36 rows=382569 width=4) (actual time=102.267..341.117 rows=381905 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.301..35.799 rows=3933 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=36.936..36.936 rows=3933 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.287..35.143 rows=3933 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=6425.835..6546.648 rows=1602559 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.325..147.720 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8025 width=30) (actual time=0.152..1133.349 rows=8046 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=158.775..5287.937 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=158.642..158.642 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.259..28.675 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.297..38.691 rows=4095 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.335..9.335 rows=21569 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.278..37.913 rows=4095 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.934..268.959 rows=21569 loops=1)
Q19,1.0,->  Nested Loop  (cost=12875.79..614177.28 rows=1146 width=8) (actual time=34.214..2157.648 rows=1230 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.176..4.176 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.47 rows=8075 width=0) (actual time=3.741..3.741 rows=8090 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.03 rows=8033 width=0) (actual time=3.717..3.717 rows=8055 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.51 rows=7880 width=0) (actual time=3.486..3.486 rows=7927 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12875.22..26601.84 rows=4770 width=30) (actual time=33.638..353.440 rows=4749 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.005..2292.620 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666929.52 rows=60045652 width=8) (actual time=0.599..7602.161 rows=59985329 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666929.52 rows=60045652 width=8) (actual time=6.210..7358.625 rows=59985329 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.041 rows=30 loops=2001)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.041 rows=30 loops=2001)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.83 rows=2040 width=0) (actual time=0.962..0.962 rows=2001 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.34..6740.95 rows=2040 width=4) (actual time=1.300..34.536 rows=2001 loops=1)
Q16,1.0,Sort  (cost=411872.41..411941.45 rows=27619 width=40) (actual time=10883.286..10886.406 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50921.43..50921.43 rows=294594 width=40) (actual time=1338.927..1338.927 rows=297223 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402268.17..409835.04 rows=27619 width=40) (actual time=10092.006..10823.804 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2465.76..50921.43 rows=294594 width=40) (actual time=35.688..1214.057 rows=297223 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1990743.98 rows=2279548 width=12) (actual time=0.015..18087.344 rows=2246070 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1990743.98 rows=2279548 width=12) (actual time=0.019..18560.495 rows=2246070 loops=1)
Q14,1.0,->  Hash Join  (cost=93374.24..1143866.49 rows=751633 width=29) (actual time=1601.971..23756.990 rows=774027 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7852.24..1047069.99 rows=751633 width=12) (actual time=120.867..21480.562 rows=774027 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445175.49 rows=14923541 width=8) (actual time=0.023..7394.214 rows=14838042 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..738056.60 rows=14923541 width=8) (actual time=797.026..17037.778 rows=15338061 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=20) (actual time=0.013..4632.020 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2446485.98 rows=289518 width=15) (actual time=0.031..23413.922 rows=311193 loops=1)
Q12,1.0,->  Hash Join  (cost=598445.50..3053978.91 rows=289518 width=27) (actual time=9556.931..33346.759 rows=311193 loops=1)
Q12,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=20) (actual time=9480.015..9480.015 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.315..40.760 rows=3987 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.295..25.289 rows=3987 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=26.210..3826.441 rows=318960 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=41.922..4040.678 rows=318960 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.861..41.861 rows=3987 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.152..26.152 rows=3987 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.269..24.628 rows=3987 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.293..40.099 rows=3987 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824308.60 rows=58951323 width=20) (actual time=0.014..18884.931 rows=58717949 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1837000.11 rows=15041719 width=12) (actual time=0.012..17196.275 rows=14822519 loops=1)
Q10,1.0,->  Hash  (cost=270969.07..270969.07 rows=579092 width=8) (actual time=5208.176..5208.176 rows=574700 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5975.69..270969.07 rows=579092 width=8) (actual time=27.726..5016.674 rows=574700 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.013..0.013 rows=0 loops=392802)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1491961)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.17 rows=1 width=16) (actual time=0.335..0.378 rows=0 loops=4749)
Q19,,->  BitmapOr  (cost=12875.22..12875.22 rows=4774 width=0) (actual time=29.792..29.792 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.21..6270.21 rows=2357 width=0) (actual time=8.462..8.462 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4298.57..4298.57 rows=1612 width=0) (actual time=8.727..8.727 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2305.93..2305.93 rows=804 width=0) (actual time=8.735..8.735 rows=0 loops=1)
