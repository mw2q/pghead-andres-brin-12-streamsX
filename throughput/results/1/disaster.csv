Q21,709091.0,->  Nested Loop Semi Join  (cost=2406.31..2843299.70 rows=1 width=34) (actual time=49.633..34592.715 rows=709091 loops=1)
Q18,358129.1,->  GroupAggregate  (cost=10172565.53..10999843.76 rows=30082845 width=39) (actual time=70910.631..70910.909 rows=84 loops=1)
Q3,316589.6,->  Sort  (cost=2537263.89..2545178.63 rows=3165896 width=20) (actual time=33794.988..33794.989 rows=10 loops=1)
Q18,89553.2,->  Hash Join  (cost=2181895.58..2796136.59 rows=7522476 width=39) (actual time=46476.822..51554.371 rows=84 loops=1)
Q18,89553.2,->  Hash Join  (cost=2112867.58..2614271.45 rows=7522476 width=20) (actual time=45569.755..50646.994 rows=84 loops=1)
Q18,89553.2,->  Hash  (cost=2796136.59..2796136.59 rows=7522476 width=39) (actual time=51554.585..51554.585 rows=84 loops=1)
Q18,51161.3,->  Sort  (cost=10172565.53..10247772.64 rows=30082845 width=39) (actual time=70910.621..70910.659 rows=588 loops=1)
Q18,51161.3,->  Hash Join  (cost=2890167.54..5613329.02 rows=30082845 width=39) (actual time=51936.070..70909.791 rows=588 loops=1)
Q18,48223.5,->  Hash  (cost=2062232.86..2062232.86 rows=4050778 width=4) (actual time=45452.665..45452.665 rows=84 loops=1)
Q18,48223.5,->  HashAggregate  (cost=1971090.35..2021725.08 rows=4050778 width=8) (actual time=38350.285..45452.450 rows=84 loops=1)
Q21,39932.0,->  Nested Loop Anti Join  (cost=2406.88..2843301.48 rows=1 width=26) (actual time=51.960..37424.166 rows=39932 loops=1)
Q10,27954.5,->  Sort  (cost=2289791.97..2291189.69 rows=559091 width=176) (actual time=32187.759..32187.765 rows=20 loops=1)
Q9,24941.5,->  Sort  (cost=1162687.93..1162688.25 rows=130 width=46) (actual time=90666.454..91316.911 rows=3242404 loops=1)
Q9,24941.5,->  Nested Loop  (cost=66874.62..1162679.36 rows=130 width=24) (actual time=895.236..81284.487 rows=3242404 loops=1)
Q9,24941.5,->  Nested Loop  (cost=66874.18..1162616.36 rows=130 width=24) (actual time=895.196..50802.334 rows=3242404 loops=1)
Q9,24941.5,->  Nested Loop  (cost=66873.89..1162574.41 rows=130 width=28) (actual time=895.187..40263.774 rows=3242404 loops=1)
Q9,24941.5,->  Hash Join  (cost=66876.18..1162683.36 rows=130 width=46) (actual time=895.296..84515.121 rows=3242404 loops=1)
Q2,4804.0,->  Merge Join  (cost=465676.21..888469.97 rows=1 width=190) (actual time=5563.907..7464.822 rows=4804 loops=1)
Q21,4023.0,->  HashAggregate  (cost=2843301.49..2843301.50 rows=1 width=26) (actual time=37477.906..37479.244 rows=4023 loops=1)
Q15,3673.0,->  Subquery Scan on revenue1  (cost=1387954.72..1388037.36 rows=3673 width=12) (actual time=50658.579..50665.702 rows=1 loops=1)
Q15,3673.0,->  Sort  (cost=1388254.85..1388264.03 rows=3673 width=12) (actual time=50665.722..50665.722 rows=1 loops=1)
Q15,3673.0,Merge Join  (cost=2759666.24..2764762.53 rows=3673 width=79) (actual time=50683.127..50683.130 rows=1 loops=1)
Q15,3673.0,->  HashAggregate  (cost=1387954.72..1388000.63 rows=3673 width=12) (actual time=50658.578..50665.700 rows=1 loops=1)
Q7,769.0,Sort  (cost=2135194.21..2135201.90 rows=3076 width=64) (actual time=23148.353..23148.354 rows=4 loops=1)
Q7,769.0,->  HashAggregate  (cost=2134969.87..2135016.01 rows=3076 width=64) (actual time=23148.287..23148.294 rows=4 loops=1)
Q8,364.5,Sort  (cost=1772621.35..1772623.17 rows=729 width=38) (actual time=10962.708..10962.709 rows=2 loops=1)
Q8,364.5,->  HashAggregate  (cost=1772573.93..1772586.69 rows=729 width=38) (actual time=10962.668..10962.669 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2843301.51..2843301.51 rows=1 width=26) (actual time=37480.389..37480.396 rows=100 loops=1)
Q21,100.0,Limit  (cost=2843301.51..2843301.51 rows=1 width=26) (actual time=37480.391..37480.409 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=888469.98..888469.98 rows=1 width=190) (actual time=7469.813..7469.825 rows=100 loops=1)
Q2,100.0,Limit  (cost=888469.98..888469.98 rows=1 width=190) (actual time=7469.815..7469.837 rows=100 loops=1)
Q11,33.7,Sort  (cost=614384.02..615183.97 rows=319981 width=12) (actual time=8240.099..8241.239 rows=9467 loops=1)
Q11,33.7,->  HashAggregate  (cost=292162.79..296162.55 rows=319981 width=12) (actual time=8156.019..8234.882 rows=9467 loops=1)
Q3,27.9,->  HashAggregate  (cost=2437191.06..2468850.02 rows=3165896 width=20) (actual time=33725.950..33773.939 rows=113142 loops=1)
Q15,27.2,->  HashAggregate  (cost=1371328.44..1371365.17 rows=3673 width=12) (actual time=24907.771..24943.914 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=735737)
Q14,13.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8134.95 rows=798695 width=0) (actual time=120.950..120.950 rows=10760960 loops=1)
Q3,10.6,->  Hash Join  (cost=763504.76..2389702.62 rows=3165896 width=20) (actual time=7672.215..33456.052 rows=298489 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2392.41 rows=317387 width=0) (actual time=34.799..34.799 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.079 rows=8 loops=432128)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.926..3.926 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.911..3.911 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.301..0.301 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.266..0.266 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.259..0.259 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.253..0.253 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1192321)
Q5,5.0,Sort  (cost=2007055.67..2007055.73 rows=25 width=34) (actual time=13778.292..13778.293 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2007054.84..2007055.09 rows=25 width=34) (actual time=13778.248..13778.249 rows=5 loops=1)
Q4,5.0,Sort  (cost=1485669.35..1485669.36 rows=1 width=16) (actual time=13040.716..13040.717 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.16 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=566937)
Q4,5.0,->  HashAggregate  (cost=1485669.33..1485669.34 rows=1 width=16) (actual time=13040.668..13040.670 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=709091)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5682.39 rows=564239 width=0) (actual time=27.455..27.455 rows=2556160 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5755.09 rows=571509 width=0) (actual time=27.674..27.674 rows=2566400 loops=1)
Q13,4.3,Sort  (cost=852463.69..852464.19 rows=200 width=8) (actual time=26321.146..26321.149 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=852454.05..852456.05 rows=200 width=8) (actual time=26321.062..26321.073 rows=46 loops=1)
Q17,3.8,->  Nested Loop  (cost=82.62..113628.73 rows=20045 width=4) (actual time=1.521..192.517 rows=5253 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.010..0.011 rows=4 loops=455295)
Q4,3.4,->  Nested Loop Semi Join  (cost=5898.53..1484907.55 rows=152357 width=16) (actual time=27.875..12752.543 rows=519963 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.014..0.033 rows=3 loops=1944)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243376.88 rows=32430517 width=0) (actual time=117.933..117.933 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.10 rows=1 width=8) (actual time=0.285..0.354 rows=3 loops=21697)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54854.98 rows=7308664 width=0) (actual time=27.169..27.169 rows=2538240 loops=1)
Q22,2.3,Sort  (cost=698282.23..698282.24 rows=3 width=20) (actual time=9963.283..9963.284 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645354.24..645354.29 rows=3 width=20) (actual time=9963.236..9963.237 rows=7 loops=1)
Q15,2.3,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.027..13.114 rows=42993 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.032..0.047 rows=2 loops=6541)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.27 rows=200127 width=0) (actual time=4.194..4.194 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402243.44..403701.03 rows=583036 width=40) (actual time=9483.123..9637.843 rows=1186651 loops=1)
Q16,2.0,->  Hash Join  (cost=54619.98..346408.34 rows=583036 width=40) (actual time=1293.422..5942.515 rows=1186651 loops=1)
Q12,2.0,Sort  (cost=3038129.27..3038129.28 rows=1 width=27) (actual time=34833.291..34833.292 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3038129.25..3038129.26 rows=1 width=27) (actual time=34833.239..34833.240 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345917.59..2255346.57 rows=559091 width=176) (actual time=7689.757..29807.950 rows=1148303 loops=1)
Q10,2.0,->  Hash Join  (cost=345916.03..2247657.51 rows=559091 width=154) (actual time=7689.724..29395.459 rows=1148303 loops=1)
Q10,2.0,->  Hash Join  (cost=276888.03..2170243.14 rows=559091 width=12) (actual time=5975.215..26843.137 rows=1148303 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902499.01 rows=799298 width=34) (actual time=49.542..22879.017 rows=1523003 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.579..3136.283 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817043.65 rows=20015217 width=8) (actual time=0.012..16621.959 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323251.22 rows=389239 width=38) (actual time=49.597..30351.351 rows=735737 loops=1)
Q20,1.8,->  Nested Loop  (cost=826.99..12723795.32 rows=31709 width=4) (actual time=13.249..8010.389 rows=58973 loops=1)
Q20,1.8,->  Hash  (cost=12723795.32..12723795.32 rows=31709 width=4) (actual time=8043.446..8043.446 rows=58973 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.037..0.533 rows=56 loops=1)
Q1,1.5,Sort  (cost=4251652.29..4251652.31 rows=6 width=20) (actual time=89784.457..89784.458 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4251652.11..4251652.21 rows=6 width=20) (actual time=89784.406..89784.409 rows=4 loops=1)
Q20,1.4,Sort  (cost=12726641.71..12726644.88 rows=1268 width=51) (actual time=8075.579..8075.676 rows=1810 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=12724234.68..12726576.36 rows=1268 width=51) (actual time=8043.891..8074.365 rows=1810 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5995.07 rows=598307 width=0) (actual time=4.171..4.171 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2269323.85..2274914.76 rows=559091 width=176) (actual time=31834.661..32043.399 rows=381592 loops=1)
Q9,1.3,GroupAggregate  (cost=1162687.93..1162692.48 rows=130 width=46) (actual time=90676.780..93540.290 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2877.52 rows=140255 width=0) (actual time=771.555..771.555 rows=191192 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2912.59..41872.28 rows=140255 width=24) (actual time=780.136..1244.439 rows=191192 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91386.30 rows=9123830 width=0) (actual time=119.718..119.718 rows=10718720 loops=1)
Q20,1.1,->  Bitmap Heap Scan on part  (cost=826.56..36393.40 rows=24024 width=4) (actual time=12.739..294.135 rows=21697 loops=1)
Q18,1.1,Limit  (cost=10172565.53..10172568.28 rows=100 width=39) (actual time=70910.634..70910.921 rows=84 loops=1)
Q15,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91662.28 rows=12201905 width=0) (actual time=121.174..121.174 rows=10739200 loops=1)
Q15,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91662.28 rows=12201905 width=0) (actual time=118.985..118.985 rows=10739200 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=108106 width=4) (actual time=0.011..854.981 rows=108032 loops=1)
Q9,1.0,->  Hash Join  (cost=66873.32..352112.02 rows=428069 width=16) (actual time=895.028..4992.422 rows=432128 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=108106 width=4) (actual time=894.482..894.482 rows=108032 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=4.057..2120.094 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=423.66..1724430.44 rows=125762 width=20) (actual time=6.860..8453.508 rows=121874 loops=1)
Q8,1.0,->  Nested Loop  (cost=423.22..1521116.27 rows=415216 width=16) (actual time=6.703..4736.727 rows=400446 loops=1)
Q8,1.0,->  Nested Loop  (cost=38754.10..1771599.31 rows=25111 width=16) (actual time=2221.467..10885.713 rows=24143 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.58 rows=31 width=20) (actual time=0.027..0.332 rows=30 loops=13349)
Q8,1.0,->  Hash Join  (cost=38755.66..1772071.71 rows=25111 width=38) (actual time=2221.517..10923.617 rows=24143 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.80..1763483.72 rows=25152 width=16) (actual time=2221.449..10746.237 rows=24143 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2212.381..2212.381 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..419.23 rows=13707 width=0) (actual time=4.386..4.386 rows=13349 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=422.66..28572.95 rows=13707 width=4) (actual time=6.635..179.885 rows=13349 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.960..414.188 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.007..3081.996 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2122161.48 rows=1468513 width=42) (actual time=623.786..22409.098 rows=1449835 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2134054.66 rows=61014 width=64) (actual time=672.653..23056.173 rows=57868 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532478.49 rows=1205994 width=30) (actual time=623.760..8760.974 rows=1192321 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.039..585.239 rows=119622 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..45.953 rows=7981 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=623.265..623.265 rows=119622 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=48.293..48.293 rows=7981 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91584.66..1368665.83 rows=793436 width=8) (actual time=120.576..23520.822 rows=794528 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..480657.80 rows=2293559 width=8) (actual time=0.016..4249.326 rows=2278174 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.999..2021.210 rows=299493 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1987152.51 rows=1834423 width=46) (actual time=2128.512..12996.322 rows=1823740 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2006322.26 rows=73258 width=34) (actual time=2192.977..13702.040 rows=72300 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..532187.40 rows=458712 width=38) (actual time=2128.471..7251.635 rows=455295 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2126.484..2126.484 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.946..394.492 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5897.97..271030.60 rows=571509 width=20) (actual time=27.845..5217.129 rows=566937 loops=1)
Q3,1.0,->  Hash Join  (cost=106466.58..493679.76 rows=1467239 width=12) (actual time=415.989..7044.416 rows=1455536 loops=1)
Q3,1.0,->  Hash  (cost=493679.76..493679.76 rows=1467239 width=12) (actual time=7543.473..7543.473 rows=1455536 loops=1)
Q3,1.0,->  Hash  (cost=46020.31..46020.31 rows=301130 width=4) (actual time=386.230..386.230 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6902.90 rows=301130 width=0) (actual time=66.361..66.361 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56682.15..401815.45 rows=7308664 width=16) (actual time=27.331..4265.993 rows=7296925 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251484.51..1724408.97 rows=32430517 width=12) (actual time=118.680..20271.975 rows=32365888 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6978.19..46020.31 rows=301130 width=4) (actual time=75.105..308.145 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=4) (actual time=0.015..3829.968 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=4) (actual time=8487.086..8487.086 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=601358.08..644911.41 rows=59044 width=20) (actual time=9339.732..9934.934 rows=63885 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6556.08 rows=382546 width=0) (actual time=88.642..88.642 rows=382725 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6651.71..51971.55 rows=382546 width=4) (actual time=97.453..638.905 rows=382725 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.338..47.963 rows=4023 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=49.497..49.497 rows=4023 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.319..47.065 rows=4023 loops=1)
Q2,1.0,->  Sort  (cost=465675.78..469675.54 rows=1599904 width=168) (actual time=5561.173..5680.618 rows=1602795 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.315..148.319 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8073 width=30) (actual time=0.222..1155.551 rows=8094 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300809.24 rows=1599904 width=168) (actual time=159.965..4472.553 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=159.827..159.827 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.260..28.801 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.303..29.269 rows=4021 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..820.55 rows=22000 width=0) (actual time=9.140..9.140 rows=21697 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.283..28.643 rows=4021 loops=1)
Q19,1.0,->  Nested Loop  (cost=12897.38..616528.86 rows=1154 width=8) (actual time=34.404..1842.330 rows=1161 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4005.47 rows=399347 width=0) (actual time=4.175..4.175 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.67 rows=8195 width=0) (actual time=3.667..3.667 rows=8186 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.63 rows=7993 width=0) (actual time=3.566..3.566 rows=7816 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.07 rows=7937 width=0) (actual time=3.459..3.459 rows=8154 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=4939)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12892.64..26703.20 rows=4807 width=30) (actual time=33.197..215.025 rows=4939 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.005..2208.160 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670261.90 rows=60165690 width=8) (actual time=0.005..8309.274 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670261.90 rows=60165690 width=8) (actual time=0.017..9158.535 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.041 rows=30 loops=1944)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.041 rows=30 loops=1944)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.36 rows=1993 width=0) (actual time=0.919..0.919 rows=1944 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.86..6607.40 rows=1993 width=4) (actual time=1.218..33.442 rows=1944 loops=1)
Q16,1.0,Sort  (cost=411843.95..411912.97 rows=27608 width=40) (actual time=10289.153..10292.432 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=50922.70..50922.70 rows=294484 width=40) (actual time=1290.213..1290.213 rows=296843 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402243.44..409807.47 rows=27608 width=40) (actual time=9483.177..10229.508 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2466.03..50922.70 rows=294484 width=40) (actual time=34.867..1165.962 rows=296843 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=92216.49..1349160.07 rows=2216837 width=12) (actual time=119.770..22778.504 rows=2245770 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=92216.49..1349160.07 rows=2216837 width=12) (actual time=121.997..23469.251 rows=2245770 loops=1)
Q14,1.0,->  Hash Join  (cost=93856.63..1162094.00 rows=798695 width=29) (actual time=1679.288..25135.254 rows=773113 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8334.63..1064591.57 rows=798695 width=12) (actual time=121.712..22683.220 rows=773113 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=15059543 width=8) (actual time=0.024..7188.828 rows=14853070 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..739656.33 rows=15059543 width=8) (actual time=808.403..16907.805 rows=15353086 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=20) (actual time=0.011..4821.292 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2429564.18 rows=292415 width=15) (actual time=0.090..24392.483 rows=311761 loops=1)
Q12,1.0,->  Hash Join  (cost=594309.84..3033011.99 rows=292415 width=27) (actual time=9766.073..34490.948 rows=311761 loops=1)
Q12,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=20) (actual time=9683.384..9683.384 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.300..41.142 rows=3988 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.286..26.010 rows=3988 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=8) (actual time=26.994..3734.218 rows=319040 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.12 rows=319981 width=12) (actual time=42.343..4069.831 rows=319040 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=42.266..42.266 rows=3988 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.922..26.922 rows=3988 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.267..25.369 rows=3988 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.277..40.468 rows=3988 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1838829.99 rows=60320553 width=20) (actual time=0.014..18641.875 rows=59543403 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831525.85 rows=14996895 width=12) (actual time=0.037..17702.971 rows=14822845 loops=1)
Q10,1.0,->  Hash  (cost=269835.04..269835.04 rows=564239 width=8) (actual time=5969.922..5969.922 rows=574194 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5823.45..269835.04 rows=564239 width=8) (actual time=27.640..5762.027 rows=574194 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.009..0.009 rows=0 loops=400446)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1523003)
Q19,,->  BitmapOr  (cost=12892.64..12892.64 rows=4811 width=0) (actual time=29.390..29.390 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.295..0.324 rows=0 loops=4939)
Q19,,->  BitmapAnd  (cost=6286.79..6286.79 rows=2374 width=0) (actual time=8.357..8.357 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4299.79..4299.79 rows=1636 width=0) (actual time=8.630..8.630 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2305.55..2305.55 rows=800 width=0) (actual time=8.510..8.510 rows=0 loops=1)
